{"version":3,"file":"jassijs_localserver.js","sourceRoot":"","sources":["../client/jassijs_localserver/DBManager.ts","../client/jassijs_localserver/DatabaseSchema.ts","../client/jassijs_localserver/Filesystem.ts","../client/jassijs_localserver/Indexer.ts","../client/jassijs_localserver/Installserver.js","../client/jassijs_localserver/LocalProtocol.ts","../client/jassijs_localserver/RegistryIndexer.ts","../client/jassijs_localserver/Testuser.ts","../client/jassijs_localserver/TypeORMListener.ts","../client/jassijs_localserver/modul.ts","../client/jassijs_localserver/registry.js","../client/jassijs_localserver/ext/jszip.js","../client/jassijs_localserver/ext/typeorm.js"],"names":[],"mappings":"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","sourcesContent":["//@ts-ignore\r\nimport { ConnectionOptions, createConnection, getConnection, SaveOptions, FindConditions, FindOneOptions, ObjectType, ObjectID, FindManyOptions, Connection, SelectQueryBuilder, Brackets, EntitySchema, getMetadataArgsStorage, Entity } from \"typeorm\";\r\nimport { classes } from \"jassijs/remote/Classes\";\r\n\r\nimport registry, { $Class } from \"jassijs/remote/Registry\";\r\nimport { DBObject } from \"jassijs/remote/DBObject\";\r\nimport { ParentRightProperties } from \"jassijs/remote/security/Rights\";\r\nimport { User } from \"jassijs/remote/security/User\";\r\nimport { Context } from \"jassijs/remote/RemoteObject\";\r\n\r\nconst parser = require('js-sql-parser');\r\nconst passwordIteration = 10000;\r\n\r\nexport interface MyFindManyOptions<Entity = any> extends FindManyOptions {\r\n  whereParams?: any,\r\n  onlyColumns?: string[];\r\n  [field: string]: any\r\n}\r\n\r\n\r\n\r\nvar _instance: DBManager = undefined;\r\nvar _initrunning = undefined;\r\n/**\r\n * Database access with typeorm\r\n */\r\n@$Class(\"jassi_localserver.DBManager\")\r\nexport class DBManager {\r\n  static async getConOpts(): Promise<ConnectionOptions> {\r\n    var stype: string = \"postgres\";\r\n    var shost = \"localhost\";\r\n    var suser = \"postgres\";\r\n    var spass = \"ja$$1\";\r\n    var iport = 5432;\r\n    var sdb = \"jassi\";\r\n    //the default is the sqlite3\r\n    //this is the default way: define an environment var DATABASSE_URL\r\n    //type://user:password@hostname:port/database\r\n    //eg: postgres://abcknhlveqwqow:polc78b98e8cd7168d35a66e392d2de6a8d5710e854c084ff47f90643lce2876@ec2-174-102-251-1.compute-1.amazonaws.com:5432/dcpqmp4rcmu182\r\n    //@ts-ignore\r\n    var test = process.env.DATABASE_URL;\r\n    if (test !== undefined) {\r\n\r\n      var all = test.split(\":\");\r\n      stype = all[0];\r\n      var h = all[2].split(\"@\");\r\n      shost = h[1];\r\n      iport = Number(all[3].split(\"/\")[0]);\r\n      suser = all[1].replace(\"//\", \"\");\r\n      spass = h[0];\r\n      sdb = all[3].split(\"/\")[1];\r\n    }\r\n\r\n    var dbclasses = [];\r\n\r\n    var dbobjects = await registry.getJSONData(\"$DBObject\");\r\n    for (var o = 0; o < dbobjects.length; o++) {\r\n      var clname = dbobjects[o].classname;\r\n      dbclasses.push(await classes.loadClass(clname));\r\n      //var fname = dbobjects[o].filename;\r\n      //dbfiles.push(\"js/\" + fname.replace(\".ts\", \".js\"));\r\n    }\r\n\r\n    var opt: ConnectionOptions = {\r\n\r\n      //@ts-ignore\r\n      \"type\": stype,\r\n      \"host\": shost,\r\n      \"port\": iport,\r\n      \"username\": suser,\r\n      \"password\": spass,\r\n      \"database\": sdb,\r\n      //\"synchronize\": true,\r\n      \"logging\": false,\r\n      \"entities\": dbclasses,\r\n      //\"js/client/remote/de/**/*.js\"\r\n\r\n      // \"migrations\": [\r\n      //    \"src/migration/**/*.ts\"\r\n      // ],\r\n      // \"subscribers\": [\r\n      //    \"src/subscriber/**/*.ts\"\r\n      // ]\r\n    };\r\n\r\n\r\n    return opt;\r\n  }\r\n  public static async get(): Promise<DBManager> {\r\n\r\n    if (_instance === undefined) {\r\n\r\n      _instance = new DBManager();\r\n\r\n      var test = getMetadataArgsStorage();\r\n      try {\r\n        var opts = await DBManager.getConOpts();\r\n        Object.freeze(DBManager);\r\n        _initrunning = createConnection(opts);\r\n        await _initrunning;\r\n\r\n      } catch (err1) {\r\n        try {\r\n          _initrunning = undefined;\r\n          opts[\"ssl\"] = true;//heroku need this\r\n          _initrunning = createConnection(opts);\r\n          await _initrunning;\r\n\r\n        } catch (err) {\r\n          console.log(\"DB corrupt - revert the last change\");\r\n          _instance = undefined;\r\n          _initrunning = undefined;\r\n          if (err.message === \"The server does not support SSL connections\") {\r\n            throw err1;\r\n            console.error(err1);\r\n          }\r\n          else {\r\n            throw err;\r\n            console.error(err);\r\n          }\r\n        }\r\n      }\r\n      try {\r\n        await _instance.mySync();\r\n      } catch (err) {\r\n        console.log(\"DB Schema could not be saved\");\r\n        throw err;\r\n      }\r\n      await _instance.hasLoaded();\r\n    }\r\n    //wait for connection ready\r\n    await _initrunning;\r\n    //on server we convert decimal type to Number https://github.com/brianc/node-postgres/issues/811\r\n    //@ts-ignore\r\n    if (window?.document === undefined) {\r\n      try {\r\n        //@ts-ignore\r\n        var types = (await import('pg')).types;\r\n        types.setTypeParser(1700, function (val) {\r\n          return parseFloat(val);\r\n        });\r\n      } catch {\r\n\r\n      }\r\n    }\r\n    return _instance;\r\n  }\r\n  /**\r\n   * loading is finished\r\n   */\r\n  public async hasLoaded() {\r\n\r\n  }\r\n\r\n\r\n  private async mySync() {\r\n    var con = getConnection();\r\n    //@ts-ignore\r\n    var schem = await import(\"typeorm/schema-builder/RdbmsSchemaBuilder\");\r\n    var org = schem.RdbmsSchemaBuilder.prototype[\"executeSchemaSyncOperationsInProperOrder\"];\r\n    schem.RdbmsSchemaBuilder.prototype[\"executeSchemaSyncOperationsInProperOrder\"] = async function () {\r\n      //try{\r\n\r\n      await this.createNewTables();\r\n      await this.addNewColumns();\r\n      await this.updatePrimaryKeys();\r\n      await this.updateExistColumns();\r\n      await this.createNewIndices();\r\n      await this.createNewChecks();\r\n      await this.createNewExclusions();\r\n      await this.createCompositeUniqueConstraints();\r\n      await this.createForeignKeys();\r\n      await this.createViews();\r\n      /*}catch(err){\r\n        this.prototype._error_=err;\r\n        }*/\r\n    };\r\n    //  var h=Reflect.getMetadata(\"design:type\",AR.prototype,\"id\");\r\n\r\n    await con.synchronize();\r\n    //if(schem.RdbmsSchemaBuilder.prototype[\"_error_\"])\r\n    //throw schem.RdbmsSchemaBuilder.prototype[\"_error_\"]; \r\n\r\n    //con.driver.\r\n  }\r\n  public static async clearMetadata() {\r\n    DBManager.clearArray(getMetadataArgsStorage().checks);\r\n    DBManager.clearArray(getMetadataArgsStorage().columns);\r\n    DBManager.clearArray(getMetadataArgsStorage().discriminatorValues);\r\n    DBManager.clearArray(getMetadataArgsStorage().embeddeds);\r\n    DBManager.clearArray(getMetadataArgsStorage().entityListeners);\r\n    DBManager.clearArray(getMetadataArgsStorage().entityRepositories);\r\n    DBManager.clearArray(getMetadataArgsStorage().entitySubscribers);\r\n    DBManager.clearArray(getMetadataArgsStorage().exclusions);\r\n    DBManager.clearArray(getMetadataArgsStorage().tables);\r\n    DBManager.clearArray(getMetadataArgsStorage().generations);\r\n    DBManager.clearArray(getMetadataArgsStorage().indices);\r\n    DBManager.clearArray(getMetadataArgsStorage().inheritances);\r\n    DBManager.clearArray(getMetadataArgsStorage().joinColumns);\r\n    DBManager.clearArray(getMetadataArgsStorage().joinTables);\r\n    DBManager.clearArray(getMetadataArgsStorage().namingStrategies);\r\n    DBManager.clearArray(getMetadataArgsStorage().relationCounts);\r\n    DBManager.clearArray(getMetadataArgsStorage().relationIds);\r\n    DBManager.clearArray(getMetadataArgsStorage().relations);\r\n    DBManager.clearArray(getMetadataArgsStorage().tables);\r\n    DBManager.clearArray(getMetadataArgsStorage().transactionEntityManagers);\r\n    DBManager.clearArray(getMetadataArgsStorage().transactionRepositories);\r\n    DBManager.clearArray(getMetadataArgsStorage().trees);\r\n    DBManager.clearArray(getMetadataArgsStorage().uniques);\r\n  }\r\n\r\n  public static async destroyConnection() {\r\n    if (_instance !== undefined)\r\n      await getConnection().close();\r\n    _instance = undefined;\r\n    DBManager.clearMetadata();\r\n\r\n  }\r\n  private static clearArray(arr: any[]) {\r\n    while (arr.length > 0) {\r\n      arr.pop();\r\n    }\r\n  }\r\n  private constructor() {\r\n    Object.freeze(_instance);\r\n  }\r\n  connection() {\r\n    return getConnection();\r\n  }\r\n  async runSQL(context: Context,sql:string,parameters:any[]=undefined){\r\n    var ret=await (await DBManager.get()).connection().query(sql,parameters);\r\n    return ret;\r\n  }\r\n  async remove<Entity>(context: Context, entity: Entity) {\r\n    var test = await (await DBManager.get()).checkParentRight(context, entity, [entity[\"id\"]]);\r\n    if (test === false)\r\n      throw new Error(\"you are not allowed to delete \" + classes.getClassName(entity) + \" with id \" + entity[\"id\"]);\r\n    await this.connection().manager.remove(entity);\r\n  }\r\n\r\n  private async addSaveTransaction(context: Context, entity) {\r\n    if (context.objecttransaction) {\r\n      let ot = context.objecttransaction;\r\n      if (!ot.savelist) {\r\n        ot.savelist = [entity];\r\n        ot.saveresolve = [];\r\n        ot.addFunctionFinally(async () => {\r\n          ot.savereturn = await this.connection().manager.save(ot.savelist);\r\n          for (let x = 0; x < ot.savereturn.length; x++) {\r\n            delete ot.savereturn[x].password;\r\n            ot.saveresolve[x](ot.savereturn[x]);\r\n          }\r\n        })\r\n      } else\r\n        ot.savelist.push(entity);\r\n      return new Promise((resolve) => {\r\n        ot.saveresolve.push(resolve);\r\n        ot.transactionResolved(context);\r\n        ot.checkFinally();\r\n      });\r\n    }\r\n  }\r\n  /**\r\n * insert a new object\r\n * @param obj - the object to insert\r\n */\r\n  async insert(context: Context, obj: DBObject) {\r\n\r\n    await this._checkParentRightsForSave(context, obj);\r\n    if (context.objecttransaction) {\r\n      return this.addSaveTransaction(context, obj);\r\n    }\r\n    if (obj.id !== undefined) {\r\n      if ((await this.connection().manager.findOne(obj.constructor, obj.id)) !== undefined) {\r\n        throw new Error(\"object is already in DB: \" + obj.id);\r\n      }\r\n    }\r\n    //@ts-ignore\r\n    var ret = await this.connection().manager.insert(obj.constructor, obj);\r\n    //save also relations\r\n    let retob = await this.save(context, obj);\r\n    return retob;\r\n  }\r\n  /**\r\n  * Saves all given entities in the database.\r\n  * If entities do not exist in the database then inserts, otherwise updates.\r\n  */\r\n  async save<Entity>(context: Context, entities: Entity[], options?: SaveOptions): Promise<Entity[]>;\r\n  /**\r\n   * Saves all given entities in the database.\r\n   * If entities do not exist in the database then inserts, otherwise updates.\r\n   */\r\n  async save<Entity>(context: Context, entity: Entity, options?: SaveOptions): Promise<Entity>;\r\n  async save<Entity>(context: Context, entity, options) {\r\n    await this._checkParentRightsForSave(context, entity);\r\n    if ((window?.document === undefined)) {//crypt password only in nodes\r\n      if (classes.getClassName(entity) === \"jassijs.security.User\" && entity.password !== undefined) {\r\n        entity.password = await new Promise((resolve) => {\r\n          const crypto = require('crypto');\r\n          const salt = crypto.randomBytes(8).toString('base64');\r\n          crypto.pbkdf2(entity.password, salt, passwordIteration, 512, 'sha512', (err, derivedKey) => {\r\n            if (err) throw err;\r\n            resolve(passwordIteration.toString() + \":\" + salt + \":\" + derivedKey.toString('base64'));//.toString('base64'));  // '3745e48...aa39b34'\r\n          });\r\n        })\r\n      }\r\n    }\r\n\r\n    if (context.objecttransaction && options === undefined) {\r\n      return this.addSaveTransaction(context, entity);\r\n    }\r\n    var ret = await this.connection().manager.save(entity, options);\r\n    //delete entity.password;\r\n    //delete ret[\"password\"];\r\n    //@ts-ignore\r\n    return (<DBObject>ret)?.id;\r\n  }\r\n  private async _checkParentRightsForSave<Entity>(context: Context, entity: Entity) {\r\n    if (context.request.user?.isAdmin)\r\n      return;\r\n    //Check if the object self has restrictions\r\n    var cl = classes.getClass(classes.getClassName(entity));\r\n    if (entity[\"id\"] !== undefined) {\r\n      var exist = await this.connection().manager.findOne(cl, entity[\"id\"]);\r\n      if (exist !== undefined) {\r\n        var t = await this.checkParentRight(context, cl, [entity[\"id\"]]);\r\n        if (!t) {\r\n          throw new Error(\"you are not allowed to save \" + classes.getClassName(cl) + \" with id \" + entity[\"id\"]);\r\n        }\r\n      }\r\n    }\r\n    //check if the field of parentRight is set\r\n    if (registry.getMemberData(\"$CheckParentRight\") !== undefined) {\r\n      var data = registry.getMemberData(\"$CheckParentRight\")[classes.getClassName(entity)];\r\n      for (var key in data) {\r\n        if (entity[key] === undefined) {\r\n          throw new Error(\"the field \" + key + \" must not be undefined\");\r\n        }\r\n      }\r\n    }\r\n    var vdata = this.connection().getMetadata(cl);\r\n\r\n    //Check if the relations fields have restrictions\r\n    for (var r = 0; r < vdata.relations.length; r++) {\r\n      var rel = vdata.relations[r];\r\n      var data = entity[rel.propertyName];\r\n      if (data !== undefined && !Array.isArray(data)) {\r\n        let cl = rel.type;\r\n        var t = await this.checkParentRight(context, cl, [data[\"id\"]]);\r\n        if (!t) {\r\n          throw new Error(\"you are not allowed to save \" + classes.getClassName(cl) + \" with id \" + entity[\"id\"] + \" - no access to property \" + rel.propertyName);\r\n        }\r\n      }\r\n      if (data !== undefined && Array.isArray(data)) {\r\n        let cl = rel.type;\r\n        var arr = [];\r\n        for (let x = 0; x < data.length; x++) {\r\n          arr.push(data[x].id);\r\n        }\r\n        let t = await this.checkParentRight(context, cl, arr);\r\n        if (!t) {\r\n          throw new Error(\"you are not allowed to save \" + classes.getClassName(cl) + \" with id \" + entity[\"id\"] + \" - no access to property \" + rel.propertyName);\r\n        }\r\n      }\r\n      /* var tp=await p1.__proto__.constructor;\r\n       var test=await this.connection().manager.findOne(tp,902);\r\n       var ob=await this.connection().manager.preload(tp,p1);\r\n       if(ob===undefined){//does not exists in DB\r\n         ob=p1;\r\n       }*/\r\n    }\r\n  }\r\n  findOne<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, id?: string | number | Date | ObjectID, options?: FindOneOptions<Entity>): Promise<Entity | undefined>;\r\n  /**\r\n   * Finds first entity that matches given find options.\r\n   */\r\n  findOne<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, options?: FindOneOptions<Entity>): Promise<Entity | undefined>;\r\n  /**\r\n  * Finds first entity that matches given conditions.\r\n  */\r\n  findOne<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, conditions?: FindConditions<Entity>, options?: FindOneOptions<Entity>): Promise<Entity | undefined>;\r\n  /**\r\n   * Finds first entity that matches given conditions.\r\n   */\r\n  async findOne<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, p1?: any, p2?: any): Promise<Entity | undefined> {\r\n    if (typeof p1 === \"string\" || typeof p1 === \"number\") {//search by id\r\n      p1 = { id: p1 };\r\n    }\r\n    var ret = await this.find(context, entityClass, p1);\r\n    if (ret === undefined || ret.length === 0)\r\n      return undefined;\r\n    else\r\n      return <Entity>ret[0];\r\n    //return this.connection().manager.findOne(entityClass,id,options);\r\n    // else\r\n    //return this.connection().manager.findOne(entityClass, p1, p2);\r\n  }\r\n  /**\r\n * Finds entities that match given options.\r\n */\r\n  async find<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, options?: MyFindManyOptions<Entity>): Promise<Entity[]>;\r\n\r\n  /**\r\n   * Finds entities that match given conditions.\r\n   */\r\n  async find<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, conditions?: FindConditions<Entity>): Promise<Entity[]>;\r\n\r\n\r\n  /**\r\n    * Finds first entity that matches given conditions.\r\n    */\r\n  async find<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, p1?: any): Promise<Entity[]> {\r\n    //return this.connection().manager.findOne(entityClass,id,options);\r\n    // else\r\n\r\n\r\n    var options: MyFindManyOptions<Entity> = p1;\r\n    var onlyColumns = options?.onlyColumns;\r\n    var clname = classes.getClassName(entityClass);\r\n    var cl = classes.getClass(clname);\r\n    var relations = new RelationInfo(context, clname, this);\r\n    var allRelations = this.resolveWildcharInRelations(clname, options?.relations);\r\n    if (options && options.relations) {\r\n      relations.addRelations(context, allRelations, true);\r\n    }\r\n    var ret = await this.connection().manager.createQueryBuilder().\r\n      select(\"me\").from(cl, \"me\");\r\n    if (options)\r\n      ret = relations.addWhere(context, <string>options.where, options.whereParams, ret);\r\n    delete options?.where;\r\n    delete options?.whereParams;\r\n    delete options?.onlyColumns;\r\n    ret = relations.addWhereBySample(context, options, ret);\r\n    ret = relations.join(ret);\r\n    if (!context.request.user.isAdmin)\r\n      ret = await relations.addParentRightDestriction(context, ret);\r\n\r\n\r\n    var test = ret.getSql();\r\n    let objs = await ret.getMany();\r\n    if (objs && onlyColumns) {\r\n      objs.forEach((ob) => {\r\n        for (var key in ob) {\r\n          if (onlyColumns.indexOf(key) === -1 && allRelations.indexOf(key) === -1 && key !== \"id\")\r\n            ob[key] = undefined;\r\n        }\r\n      });\r\n    }\r\n    return objs;\r\n    // return await this.connection().manager.find(entityClass, p1);\r\n  }\r\n  private resolveWildcharInRelations(classname, relation: string[]): string[] {\r\n    var ret = [];\r\n    if (!relation)\r\n      return ret;\r\n    for (let r = 0; r < relation.length; r++) {\r\n      if (relation[r] === \"*\") {\r\n        var vdata = getConnection().getMetadata(classes.getClass(classname));\r\n        for (var re = 0; re < vdata.relations.length; re++) {\r\n          var s = vdata.relations[re].propertyName;\r\n          if (ret.indexOf(s) === -1)\r\n            ret.push(s);\r\n        }\r\n      } else\r\n        ret.push(relation[r]);\r\n    }\r\n    return ret;\r\n  }\r\n  public async createUser(context: Context, username: string, password: string): Promise<User> {\r\n    //var hh=getConnection().manager.findOne(User,{ email: username });\r\n    if (await getConnection().manager.findOne(User, { email: username }) !== undefined) {\r\n      throw new Error(\"User already exists\");\r\n    }\r\n\r\n    const user = new User();\r\n    user.email = username;\r\n    user.password = password;\r\n    //first user would be admin\r\n\r\n    if (await (await DBManager.get()).connection().manager.findOne(User) === undefined) {\r\n      user.isAdmin = true;\r\n    }\r\n    //password is encrypted when saving\r\n    /* await new Promise((resolve) => {\r\n      const crypto = require('crypto');\r\n\r\n      const salt = crypto.randomBytes(8).toString('base64');\r\n      crypto.pbkdf2(password, salt, passwordIteration, 512, 'sha512', (err, derivedKey) => {\r\n        if (err) throw err;\r\n        resolve(passwordIteration.toString() + \":\" + salt + \":\" + derivedKey.toString('base64'));//.toString('base64'));  // '3745e48...aa39b34'\r\n      });\r\n    })*/\r\n    await (await DBManager.get()).save(context, user);\r\n    delete user.password;\r\n    return user;\r\n  }\r\n\r\n  async login(context: Context, user: string, password) {\r\n\r\n    /* const users = await this.connection().getRepository(User)\r\n     .createQueryBuilder()\r\n     .select(\"user.id\", \"id\")\r\n     //.addSelect(\"user.password\")\r\n     .getMany();*/\r\n    var ret = await this.connection().manager.createQueryBuilder().\r\n      select(\"me\").from(User, \"me\").addSelect(\"me.password\").\r\n      andWhere(\"me.email=:email\", { email: user });\r\n    /* if (options)\r\n       ret = relations.addWhere(<string>options.where, options.whereParams, ret);\r\n \r\n     ret = relations.addWhereBySample(options, ret);\r\n     ret = relations.join(ret);\r\n     ret = await relations.addParentRightDestriction(ret);*/\r\n\r\n    var auser = await ret.getOne();\r\n    if (!auser || !password)\r\n      return undefined;\r\n    let pw = auser.password.split(\":\");\r\n    let iteration = parseInt(pw[0]);\r\n    let salt = pw[1];\r\n    var test = await new Promise((resolve) => {\r\n      const crypto = require('crypto');\r\n      crypto.pbkdf2(password, salt, iteration, 512, 'sha512', (err, derivedKey) => {\r\n        if (err) throw err;\r\n        resolve(passwordIteration.toString() + \":\" + salt + \":\" + derivedKey.toString('base64'));//.toString('base64'));  // '3745e48...aa39b34'\r\n      });\r\n    })\r\n\r\n    if (test === auser.password) {\r\n      delete auser.password;\r\n      return auser;\r\n    } else {\r\n      delete auser.password;\r\n    }\r\n    return undefined;\r\n  }\r\n  async checkParentRight(context: Context, entityClass, ids: any[]): Promise<boolean> {\r\n\r\n    var clname = classes.getClassName(entityClass);\r\n    var cl = classes.getClass(clname);\r\n    var relations = new RelationInfo(context, clname, this);\r\n\r\n    var ret = await this.connection().manager.createQueryBuilder().\r\n      select(\"me\").from(cl, \"me\");\r\n\r\n    ret = relations.join(ret);\r\n    ret.andWhere(\"me.id IN (:...ids)\", { ids: ids });\r\n    if (!context.request.user.isAdmin)\r\n      ret = await relations.addParentRightDestriction(context, ret);\r\n    var tt = ret.getSql();\r\n\r\n    var test = await ret.getCount();\r\n    return test === ids.length;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nclass RelationInfo {\r\n  className: string;\r\n  dbmanager: DBManager;\r\n  counter = 100;\r\n  relations: {\r\n    [path: string]: {\r\n      name: string,\r\n      className: string,\r\n      fullPath: string,\r\n      parentRights?: ParentRightProperties[],\r\n      doSelect: boolean\r\n    }\r\n  }\r\n  constructor(context: Context, className: string, dbmanager: DBManager) {\r\n    this.className = className;\r\n    this.dbmanager = dbmanager\r\n    this.relations = {};\r\n    var testPR = registry.getData(\"$ParentRights\", className);\r\n    this.relations[\"\"] = {\r\n      name: \"\",\r\n      className: className,\r\n      fullPath: \"\",\r\n      parentRights: (testPR.length !== 0 ? testPR[0].params[0] : undefined),\r\n      doSelect: true\r\n    }\r\n    this.addRelationsFromParentRights(context, \"\");\r\n  }\r\n\r\n  private addRelationsFromParentRights(context, relationname: string) {\r\n    var pr = this.relations[relationname];\r\n    if (registry.getMemberData(\"$CheckParentRight\") !== undefined) {\r\n      var data = registry.getMemberData(\"$CheckParentRight\")[pr.className];\r\n      if (data !== undefined) {\r\n        var membername = \"\";\r\n        for (var key in data) {\r\n          membername = key;\r\n        }\r\n        var r = relationname + (relationname === \"\" ? \"\" : \".\") + membername\r\n        this.addRelations(context, [r], false);\r\n        this.addRelationsFromParentRights(context, r);\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  private _getRelationFromProperty(property: string): string {\r\n    var keys = property.split(\".\");\r\n    var path = \"me\";\r\n    for (var x = 0; x < keys.length; x++) {\r\n\r\n      if (x + 1 === keys.length)\r\n        path = path + \".\";\r\n      else\r\n        path = path + \"_\";\r\n      path = path + keys[x];\r\n    }\r\n    return path;\r\n  }\r\n  /**\r\n   * add an andWhere to the sql-Query to check the parent rights\r\n   * @param builder \r\n   */\r\n  join<Entity>(builder: SelectQueryBuilder<Entity>): SelectQueryBuilder<Entity> {\r\n    var ret = builder;\r\n    for (var key in this.relations) {\r\n      if (key !== \"\") {\r\n        /* var keys = key.split(\".\");\r\n         var path = \"me\";\r\n         for (var x = 0; x < keys.length; x++) {\r\n \r\n           if (x + 1 === keys.length)\r\n             path = path + \".\";\r\n           else\r\n             path = path + \"_\";\r\n           path = path + keys[x];\r\n         }*/\r\n        var path = this._getRelationFromProperty(key);\r\n        if (this.relations[key].doSelect)\r\n          ret = ret.leftJoinAndSelect(path, \"me_\" + key.replaceAll(\".\", \"_\"));\r\n        else\r\n          ret = ret.leftJoin(path, \"me_\" + key.replaceAll(\".\", \"_\"));\r\n      }\r\n\r\n\r\n    }\r\n\r\n    return ret;\r\n  }\r\n \r\n  /**\r\n   * add an andWhere to the sql-Query to check the parent rights\r\n   * @param builder \r\n   */\r\n  async addParentRightDestriction<Entity>(context: Context, builder: SelectQueryBuilder<Entity>): Promise<SelectQueryBuilder<Entity>> {\r\n    var username = \"a@b.com\";\r\n    var ret = builder;\r\n    //first we get the sql from User-Rights we had to check \r\n    var kk = context.request.user;\r\n    var userid = context.request.user.user;\r\n    var query = this.dbmanager.connection().createQueryBuilder().\r\n      select(\"me\").from(classes.getClass(\"jassijs.security.ParentRight\"), \"me\").\r\n      leftJoin(\"me.groups\", \"me_groups\").\r\n      leftJoin(\"me_groups.users\", \"me_groups_users\");\r\n\r\n    query = query.andWhere(\"me_groups_users.id=:theUserId\", { theUserId: userid });\r\n\r\n\r\n    var doBr = false;\r\n    query = query.andWhere(new Brackets((entr) => {\r\n      var parentrights = undefined;\r\n\r\n      for (var relationname in this.relations) {\r\n        var relation = this.relations[relationname];\r\n        if (relation.parentRights !== undefined) {\r\n          for (var x = 0; x < relation.parentRights.length; x++) {\r\n            doBr = true;\r\n            var right = relation.parentRights[x];\r\n            var param = {};\r\n            param[\"classname\" + this.counter] = relation.className;\r\n            param[\"name\" + this.counter] = right.name;\r\n            entr.orWhere(\"me.classname=:classname\" + this.counter + \" and me.name=:name\" + this.counter, param);\r\n            this.counter++;\r\n          }\r\n        }\r\n      }\r\n      if (!doBr) {\r\n        doBr = true;\r\n        entr.orWhere(\"me.classname=me.classname\");\r\n      }\r\n    }));\r\n\r\n    var debug = query.getSql();\r\n    var parentRights = await query.getMany();\r\n    for (var relationname in this.relations) {\r\n      var relation = this.relations[relationname];\r\n      if (relation.parentRights !== undefined) {\r\n        ret = ret.andWhere(new Brackets((qu) => {\r\n          for (var p = 0; p < relation.parentRights.length; p++) {\r\n            var pr = relation.parentRights[p];\r\n            var found = false;\r\n            for (var z = 0; z < parentRights.length; z++) {\r\n              var oneRight = parentRights[z];\r\n              if (oneRight.name === pr.name && oneRight.classname === relation.className) {\r\n                var sql = pr.sqlToCheck;\r\n                //modify sql that params are unique\r\n                var param = {};\r\n                for (var field in oneRight) {\r\n                  if (field !== \"classname\" && field !== \"groups\" && field !== \"name\") {\r\n                    sql = sql.replaceAll(\":\" + field, \":\" + field + this.counter);\r\n                    if (relation.fullPath !== \"\")\r\n                      sql = sql.replaceAll(\"me.\", \"\\\"me_\" + relation.fullPath.replaceAll(\".\", \"_\") + \"\\\".\");\r\n                    param[field + this.counter] = oneRight[field];\r\n                  }\r\n                }\r\n                qu.orWhere(sql, param);\r\n                found = true;\r\n                this.counter++;\r\n              }\r\n            }\r\n            if (!found) {\r\n              qu.andWhere(\"me.id>1 and me.id<1\", param);//no right exists\r\n            }\r\n          }\r\n        }));\r\n\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  private _checkExpression(context, node) {\r\n    if (node.operator !== undefined) {\r\n      this._parseNode(context, node);\r\n    }\r\n    //replace id to me.id and ar.zeile.id to me_ar_zeile.id\r\n    if (node.type === \"Identifier\" && !node.value.startsWith(\"xxxparams\")) {\r\n      var name = node.value;\r\n      var path = this._getRelationFromProperty(name);\r\n      /*      var keys = name.split(\".\");\r\n            var path = \"me\";\r\n            for (var x = 0; x < keys.length; x++) {\r\n      \r\n              if (x + 1 === keys.length)\r\n                path = path + \".\";\r\n              else\r\n                path = path + \"_\";\r\n              path = path + keys[x];\r\n            }*/\r\n      node.value = path;\r\n      var pack = path.split(\".\")[0].substring(3);\r\n      if (pack !== \"\")\r\n        this.addRelations(context, [pack], false);\r\n    }\r\n    var _this = this;\r\n    if (node.type === \"SimpleExprParentheses\") {\r\n      node.value.value.forEach(element => {\r\n        _this._parseNode(context, element);\r\n      });\r\n    }\r\n  }\r\n  private _parseNode(context: Context, node) {\r\n    if (node.operator !== undefined) {\r\n      var left = node.left;\r\n      var right = node.right;\r\n      this._checkExpression(context, left);\r\n      this._checkExpression(context, right);\r\n    }\r\n\r\n  }\r\n  addWhereBySample<Entity>(context: Context, param: any, builder: SelectQueryBuilder<Entity>): SelectQueryBuilder<Entity> {\r\n\r\n    var ret = builder;\r\n    for (var key in param) {\r\n      if (key === \"cache\" || key === \"join\" || key === \"loadEagerRelations\" || key === \"loadRelationids\" || key == \"lock\" || key == \"order\" ||\r\n        key === \"relations\" || key === \"select\" || key === \"skip\" || key === \"take\" || key === \"where\" || key === \"withDeleted\") {\r\n        continue;\r\n      }\r\n      //this should prevent sql injection\r\n      var test = /[A-Z,a-z][A-Z,a-z,0-9,\\.]*/g.exec(key);\r\n      if (test === null || test[0] !== key)\r\n        throw new Error(\"could not set property \" + key + \" in where clause\");\r\n      var field = this._getRelationFromProperty(key);\r\n      var pack = field.split(\".\")[0].substring(3);\r\n      if (pack !== \"\")\r\n        this.addRelations(context, [pack], false);\r\n\r\n      var placeholder = \"pp\" + this.counter++;\r\n      var par = {};\r\n      par[placeholder] = param[key];\r\n      ret = ret.andWhere(field + \"=:\" + placeholder, par)\r\n    }\r\n    return ret;\r\n    /* var dummyselect = \"select * from k where \";\r\n     //we must replace because parsing Exception\r\n     var ast = parser.parse(dummyselect + sql.replaceAll(\":\",\"xxxparams\"));\r\n     this._parseNode(ast.value.where);\r\n     var newsql=parser.stringify(ast).replaceAll(\"xxxparams\",\":\");\r\n     ret.andWhere(newsql.substring(dummyselect.length),whereParams);\r\n     return ret;*/\r\n  }\r\n  addWhere<Entity>(context: Context, sql: string, whereParams: any, builder: SelectQueryBuilder<Entity>): SelectQueryBuilder<Entity> {\r\n    var ret = builder;\r\n    if (sql === undefined)\r\n      return ret;\r\n    var dummyselect = \"select * from k where \";\r\n    //we must replace because parsing Exception\r\n    var ast = parser.parse(dummyselect + sql.replaceAll(\":\", \"xxxparams\"));\r\n    this._parseNode(context, ast.value.where);\r\n    var newsql = parser.stringify(ast).replaceAll(\"xxxparams\", \":\");\r\n    ret.andWhere(newsql.substring(dummyselect.length), whereParams);\r\n    return ret;\r\n  }\r\n\r\n  addRelations(context: Context, relations: string[], doselect: boolean) {\r\n    if (relations === undefined)\r\n      return;\r\n    for (var z = 0; z < relations.length; z++) {\r\n      var relation = relations[z];\r\n      var all = relation.split(\".\");\r\n      var curPath = \"\";\r\n      var parentPath = \"\";\r\n      var curClassname = this.className;\r\n      for (var x = 0; x < all.length; x++) {\r\n        parentPath = curPath;\r\n        curPath = curPath + (curPath === \"\" ? \"\" : \".\") + all[x];\r\n        if (this.relations[curPath] === undefined) {\r\n          var vdata = this.dbmanager.connection().getMetadata(classes.getClass(curClassname));\r\n          //read type\r\n          var membername = all[x];\r\n          for (var r = 0; r < vdata.relations.length; r++) {\r\n            var rel = vdata.relations[r];\r\n            if (rel.propertyName === membername) {\r\n              var clname = classes.getClassName(rel.type);\r\n              var testPR = registry.getData(\"$ParentRights\", clname);\r\n              this.relations[curPath] = {\r\n                className: classes.getClassName(rel.type),\r\n                name: membername,\r\n                fullPath: curPath,\r\n                parentRights: (testPR.length !== 0 ? testPR[0].params[0] : undefined),\r\n                doSelect: doselect\r\n              }\r\n            }\r\n          }\r\n          //Parentrights\r\n          membername = \"\";\r\n          if (!context.request.user?.isAdmin) {\r\n            if (registry.getMemberData(\"$CheckParentRight\") !== undefined) {\r\n              var data = registry.getMemberData(\"$CheckParentRight\")[curClassname];\r\n              for (var key in data) {\r\n                membername = key;\r\n              }\r\n            }\r\n          }\r\n          if (membername !== \"\") {\r\n            for (var r = 0; r < vdata.relations.length; r++) {\r\n              var rel = vdata.relations[r];\r\n              if (rel.propertyName === membername) {\r\n                var clname = classes.getClassName(rel.type);\r\n                var testPR = registry.getData(\"$ParentRights\", clname);\r\n                var mpath = parentPath + (parentPath === \"\" ? \"\" : \".\") + membername;\r\n                this.relations[mpath] = {\r\n                  className: classes.getClassName(rel.type),\r\n                  name: membername,\r\n                  fullPath: mpath,\r\n                  parentRights: (testPR.length !== 0 ? testPR[0].params[0] : undefined),\r\n                  doSelect: doselect\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if (doselect) {\r\n          this.relations[curPath].doSelect = true;\r\n        }\r\n\r\n        curClassname = this.relations[curPath].className;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { classes } from \"jassijs/remote/Classes\";\r\nimport { db } from \"jassijs/remote/Database\";\r\n    //@ts-ignore\r\nimport { Entity as DEntity,EntityOptions, PrimaryGeneratedColumn as DPrimaryGeneratedColumn,     JoinColumn as DJoinColumn, JoinTable as DJoinTable, Column as DColumn, PrimaryColumn as DPrimaryColumn,     OneToOne as DOneToOne, OneToMany as DOneToMany, ManyToOne as DManyToOne, ManyToMany as DManyToMany } from \"typeorm\";\r\n\r\nfunction addDecorater(decoratername,delegate,...args){\r\n\r\n    return function(...fargs){\r\n        var con=fargs.length===1?fargs[0]:fargs[0].constructor;\r\n        var clname=classes.getClassName(con);\r\n        var field=fargs.length==1?\"this\":fargs[1];\r\n        db._setMetadata(con,field,decoratername,args,fargs,delegate);\r\n        if(delegate)\r\n            delegate(...args)( ...fargs);\r\n    }\r\n}\r\nexport function Entity(...param): Function{\r\n    //DEntity(param)(pclass, ...params);\r\n    return addDecorater(\"Entity\",DEntity,...param);\r\n}\r\nexport function PrimaryGeneratedColumn(...param): Function{\r\n    return addDecorater(\"PrimaryGeneratedColumn\",DPrimaryGeneratedColumn,...param);\r\n}\r\nexport function JoinColumn(...param): Function{\r\n    return addDecorater(\"JoinColumn\",DJoinColumn,...param);\r\n}\r\nexport function JoinTable(...param): Function{\r\n    return addDecorater(\"JoinTable\",DJoinTable,...param);\r\n}\r\nexport function Column(...param): Function{\r\n    return addDecorater(\"Column\",DColumn,...param);\r\n}\r\nexport function PrimaryColumn(...param): Function{\r\n    return addDecorater(\"PrimaryColumn\",DPrimaryColumn,...param);\r\n}\r\nexport function OneToOne(...param): Function{\r\n    return addDecorater(\"OneToOne\",DOneToOne,...param);\r\n}\r\nexport function OneToMany(...param): Function{\r\n    return addDecorater(\"OneToMany\",DOneToMany,...param);\r\n}\r\n\r\nexport function ManyToOne(...param): Function{\r\n    return addDecorater(\"ManyToOne\",DManyToOne,...param);\r\n}\r\n\r\nexport function ManyToMany(...param): Function{\r\n    return addDecorater(\"ManyToMany\",DManyToMany,...param);\r\n}\r\n/*\r\nexport function $DBObject(options?: EntityOptions): Function {\r\n    return function(pclass, ...params) {\r\n    \tvar classname=classes.getClassName(pclass);\r\n        if(!options)\r\n            options={};\r\n        if(!options.name)\r\n            options.name=classname.toLowerCase().replaceAll(\".\",\"_\");\r\n        registry.register(\"$DBObject\", pclass, options);\r\n        Entity(options)(pclass, ...params);//pass to orginal Entitiy\r\n    }\r\n}\r\n*/\r\n/*\r\nexport {PrimaryGeneratedColumn};\r\nexport {JoinColumn};\r\nexport {JoinTable };\r\nexport { Column};\r\nexport {PrimaryColumn};\r\nexport {OneToOne};\r\nexport {OneToMany};\r\nexport {ManyToOne};\r\nexport {ManyToMany};*/\r\nexport {EntityOptions};\r\n//export function Entity(options?: EntityOptions): Function;\r\n//export declare type PrimaryGeneratedColumnType = \"int\" | \"int2\" | \"int4\" | \"int8\" | \"integer\" | \"tinyint\" | \"smallint\" | \"mediumint\" | \"bigint\" | \"dec\" | \"decimal\" | \"fixed\" | \"numeric\" | \"number\" | \"uuid\";\r\n","import { $Class } from \"jassijs/remote/Registry\";\r\nimport { Context } from \"jassijs/remote/RemoteObject\";\r\nimport { Reloader } from \"jassijs/util/Reloader\";\r\n//@ts-ignore force load this class\r\nimport { DBManager } from \"jassijs/server/DBManager\";\r\nimport registry from \"jassijs/remote/Registry\";\r\nimport { Server } from \"jassijs/remote/Server\";\r\n\r\n\r\nclass FileEntry {\r\n    id: string;\r\n    date: number;\r\n    isDirectory?: boolean;\r\n    data: any;\r\n}\r\n@$Class(\"jassijs_localserver.Filessystem\")\r\nexport default class Filessystem {\r\n    private static db: IDBDatabase;\r\n    private static async getDB() {\r\n        if (Filessystem.db)\r\n            return Filessystem.db;\r\n        var req = window.indexedDB.open(\"jassi\", 1);\r\n        req.onupgradeneeded = function (event) {\r\n            var db = event.target[\"result\"];\r\n            var objectStore = db.createObjectStore(\"files\", { keyPath: \"id\" });\r\n        }\r\n        Filessystem.db = await new Promise((resolve) => {\r\n            req.onsuccess = (ev) => { resolve(ev.target[\"result\"]) };\r\n        })\r\n\r\n        return Filessystem.db;\r\n    }\r\n    /**\r\n     * exists a directory?\r\n     * @param path \r\n     */\r\n    async existsDirectory(path: string): Promise<boolean> {\r\n        var test = await this.dirEntry(path);\r\n        return test.length > 0;\r\n    }\r\n    public async dirFiles(dir: string, extensions: string[], ignore: string[] = []): Promise<string[]> {\r\n        var ret = [];\r\n        var all = await this.dirEntry(dir);\r\n        for (let x = 0; x < all.length; x++) {\r\n            let fname = all[x].id;\r\n            var include = true;\r\n            if(jassijs?.options?.Server?.filterSytemfilesInFilemap===true){\r\n                if(fname===\"__default.db\")\r\n                    include = false;\r\n            }\r\n            if (extensions) {\r\n                include = false;\r\n                extensions.forEach((ent) => {\r\n                    if (fname.endsWith(ent))\r\n                        include = true;\r\n                });\r\n            }\r\n            if (ignore) {\r\n                ignore.forEach((ent) => {\r\n                    if (fname === ent)\r\n                        include = false;\r\n                });\r\n\r\n            }\r\n            if (include && !all[x].isDirectory)\r\n                ret.push(fname);\r\n        }\r\n        return ret;\r\n    }\r\n    async dirEntry(curdir = \"\") {\r\n        var db = await Filessystem.getDB();\r\n        let transaction = db.transaction('files', 'readonly');\r\n        const store = transaction.objectStore('files');\r\n        var ret = await store.openCursor();\r\n        var all: FileEntry[] = [];\r\n        await new Promise((resolve) => {\r\n            ret.onsuccess = ev => {\r\n                var el = ev.target[\"result\"];\r\n                if (el) {\r\n                    if (curdir === \"\" || el.value.id === curdir || el.value.id.startsWith(curdir + \"/\"))\r\n                        all.push(el.value);\r\n                    el.continue();\r\n                } else\r\n                    resolve(undefined);\r\n            }\r\n            ret.onerror = ev => {\r\n\r\n                resolve(undefined)\r\n            }\r\n        });\r\n        return all;\r\n    }\r\n    /**\r\n     * @returns  [{name:\"hallo\",date:1566554},{name:\"demo\",files:[]}]\r\n     */\r\n    async dir(curdir = \"\", appendDate = false) {\r\n        var root = { name: \"\", files: [] };\r\n        var all = await this.dirEntry(curdir);\r\n        var keys = {\r\n            \"\": root\r\n        }\r\n        for (let x = 0; x < all.length; x++) {\r\n            var entr = all[x];\r\n            var paths = entr.id.split(\"/\");\r\n            if(jassijs?.options?.Server?.filterSytemfilesInFilemap===true){\r\n                if(entr.id===\"__default.db\")\r\n                    continue;\r\n            }\r\n            var parent = root;\r\n            var currentpath = [];\r\n            for (let p = 0; p < paths.length; p++) {\r\n                let name = paths[p];\r\n                currentpath.push(name);\r\n                let scurrentpath = currentpath.join(\"/\");\r\n                if (p < paths.length - 1) {//the parentfolders\r\n\r\n                    if (!keys[scurrentpath]) {\r\n                        let nf = {\r\n                            name: name,\r\n                            files: []\r\n                        }\r\n                        parent.files.push(nf);\r\n                        keys[scurrentpath] = nf;\r\n                    }\r\n                    parent = keys[scurrentpath];\r\n                } else {\r\n                    if (entr.isDirectory) {\r\n                        if (keys[scurrentpath] === undefined) {\r\n                            let nf = {\r\n                                name: name,\r\n                                files: []\r\n                            }\r\n                            keys[scurrentpath] = nf;\r\n                            parent.files.push(nf);\r\n                        }\r\n                    } else {\r\n                        var newitem: any = {\r\n                            name: name\r\n                        }\r\n                        if (appendDate)\r\n                            newitem.date = entr.date;\r\n                        parent.files.push(newitem)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return root;\r\n    }\r\n    public async createFile(filename: string, content: any) {\r\n        return await this.saveFiles([filename], [content], false);\r\n    }\r\n    async saveFile(filename, content) {\r\n        return await this.saveFiles([filename], [content]);\r\n    }\r\n    async saveFiles(fileNames: string[], contents: any[],  rollbackonerror: boolean = true) {\r\n        //serverside compile\r\n        if (fileNames[0].startsWith(\"$serverside/\")) {\r\n            var allfileNames: string[] = [];\r\n            var allcontents: string[] = [];\r\n            for (var f = 0; f < fileNames.length; f++) {\r\n                var fileName = fileNames[f];\r\n                var content = contents[f];\r\n                if (fileName.endsWith(\".ts\") || fileName.endsWith(\".js\")) {\r\n                    //@ts-ignore\r\n                    var tss = await import(\"jassijs_editor/util/Typescript\");\r\n                    var rets = await tss.default.transpile(fileName, content);\r\n                    allfileNames = allfileNames.concat(rets.fileNames);\r\n                    allcontents = allcontents.concat(rets.contents);\r\n                }\r\n            }\r\n            fileNames = allfileNames;\r\n            contents = allcontents;\r\n        }\r\n\r\n        var db = await Filessystem.getDB();\r\n        var rollbackcontents: string[] = [];\r\n        var jsToReload = [];\r\n        var dbschemaHasChanged = false;\r\n\r\n        for (let x = 0; x < fileNames.length; x++) {\r\n            let fname = fileNames[x];\r\n            if (fname.startsWith(\"js/\")&&fname.endsWith(\".js\"))\r\n                jsToReload.push(fname.substring(3).replace(\".ts\",\".js\"));\r\n            if (contents[x]?.indexOf(\"@$DBObject(\") > -1)\r\n                dbschemaHasChanged = true;\r\n\r\n            let exists = await this.loadFileEntry(fname);\r\n            if (exists) {\r\n                rollbackcontents.push(exists.data);\r\n            } else {\r\n                rollbackcontents.push(undefined);//this file would be killed at revert\r\n            }\r\n            if (contents[x] === undefined)\r\n                await this.remove(fname);//remove file on revert\r\n            else {\r\n                let data = contents[x];\r\n                let transaction = db.transaction('files', 'readwrite');\r\n                const store = transaction.objectStore('files');\r\n                var el = new FileEntry();\r\n                el.id = fname;\r\n                el.data = data;\r\n                el.date = Date.now();\r\n                if (exists)\r\n                    store.put(el);\r\n                else\r\n                    store.add(el);\r\n                await new Promise((resolve) => { transaction.oncomplete = resolve })\r\n            }\r\n        }\r\n        if (fileNames.length === 1 && fileNames[0].endsWith(\"/registry.js\"))//no indexer save recurse\r\n            return;\r\n        var RegistryIndexer = (await import(\"jassijs_localserver/RegistryIndexer\")).RegistryIndexer;\r\n        await new RegistryIndexer().updateRegistry();\r\n        await registry.reload();\r\n        if (rollbackonerror) {\r\n            try {\r\n                await Reloader.instance.reloadJSAll(jsToReload);\r\n                if (dbschemaHasChanged) {\r\n                    var man = await DBManager.destroyConnection();\r\n                    await DBManager.get();\r\n                }\r\n            } catch (err) {\r\n                console.error(err);\r\n                if (dbschemaHasChanged) {\r\n                    await DBManager.destroyConnection();\r\n                }\r\n                var restore = await this.saveFiles(fileNames, rollbackcontents, false);\r\n                if (dbschemaHasChanged) {\r\n                    await DBManager.get();\r\n                }\r\n                return err + \"DB corrupt changes are reverted \" + restore;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    async loadFileEntry(fileName: string): Promise<FileEntry> {\r\n        var db = await Filessystem.getDB();\r\n        let transaction = db.transaction('files', 'readonly');\r\n        const store = transaction.objectStore('files');\r\n        var ret = await store.get(fileName);\r\n        var r: any = await new Promise((resolve) => {\r\n            ret.onsuccess = ev => { resolve(ret.result) }\r\n            ret.onerror = ev => { resolve(undefined) }\r\n        });\r\n\r\n        return r;\r\n    }\r\n    /**\r\n    * deletes a server module (nothing to do on localserver)\r\n    * @param modul - to delete\r\n    */\r\n    public async removeServerModul(modul: string): Promise<string> {\r\n        return \"\";\r\n    }\r\n    /**\r\n    * create a folder\r\n    * @param filename - the name of the new file \r\n    * @param content - then content\r\n    */\r\n    public async createFolder(filename: string): Promise<string> {\r\n        if (filename.startsWith(\"/\"))\r\n            filename = filename.substring(1);\r\n        var test = await this.loadFileEntry(filename);\r\n        if (test)\r\n            return filename + \" allready exists\";\r\n        var db = await Filessystem.getDB();\r\n        let transaction = db.transaction('files', 'readwrite');\r\n        const store = transaction.objectStore('files');\r\n        var el: FileEntry = {\r\n            data: undefined,\r\n            id: filename,\r\n            isDirectory: true,\r\n            date: Date.now()\r\n        }\r\n        store.add(el);\r\n        transaction.onerror = (en) => {\r\n            debugger;\r\n        };\r\n        await new Promise((resolve) => { transaction.oncomplete = resolve })\r\n        return \"\";\r\n    }\r\n    /**\r\n     * create a module\r\n     * @param modulname - the name of the module\r\n  \r\n     */\r\n    public async createModule(modulename: string): Promise<string> {\r\n        if (!(await this.existsDirectory(modulename))) {\r\n            await this.createFolder(modulename);\r\n        }\r\n        if (!(await this.existsDirectory(modulename + \"/remote\"))) {\r\n            await this.createFolder(modulename + \"/remote\");\r\n        }\r\n\r\n        if ((await this.dirEntry(modulename + \"/registry.js\")).length === 0) {\r\n            await this.saveFiles([modulename + \"/registry.js\", \"js/\" + modulename + \"/registry.js\"],\r\n                ['define(\"' + modulename + '/registry\",[\"require\"], function(require) { return {  default: {\t} } } );',\r\n                'define(\"' + modulename + '/registry\",[\"require\"], function(require) {return {  default: {\t} } } );'], false);\r\n        }\r\n        if ((await this.dirEntry(modulename + \"/modul.ts\")).length === 0) {\r\n            await this.saveFiles([modulename + \"/modul.ts\", \"js/\" + modulename + \"/modul.js\"],\r\n                [\"export default {}\",\r\n                    'define([\"require\", \"exports\"], function (require, exports) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = {};});'], false);\r\n        }\r\n        var json = await new Server().loadFile(\"jassijs.json\");\r\n        var ob = JSON.parse(json);\r\n        if (!ob.modules[modulename]) {\r\n            ob.modules[modulename] = modulename;\r\n            await this.saveFile(\"jassijs.json\", JSON.stringify(ob, undefined, \"\\t\"));\r\n        }\r\n        return \"\";\r\n\r\n    }\r\n    async loadFile(fileName: string) {\r\n        var r = await this.loadFileEntry(fileName);\r\n        return (r ? r.data : undefined);\r\n    }\r\n    /**\r\n    * deletes a file or directory \r\n    * @param file - old filename\r\n    */\r\n    public async remove(file: string): Promise<string> {\r\n        var entr = await this.dirEntry(file);\r\n        if (entr.length === 0) {\r\n            return file + \" not exists\";\r\n        }\r\n        var db = await Filessystem.getDB();\r\n        for (let i = 0; i < entr.length; i++) {\r\n            let transaction = db.transaction('files', 'readwrite');\r\n            const store = transaction.objectStore('files');\r\n            store.delete(entr[i].id);\r\n            await new Promise((resolve) => { transaction.oncomplete = resolve })\r\n        }\r\n        //update client jassijs.json if removing client module \r\n        var json = await new Server().loadFile(\"jassijs.json\");\r\n        var ob = JSON.parse(json);\r\n        if (ob.modules[file]) {\r\n            delete ob.modules[file];\r\n            this.saveFile(\"jassijs.json\", JSON.stringify(ob, undefined, \"\\t\"));\r\n        }\r\n        var RegistryIndexer = (await import(\"jassijs_localserver/RegistryIndexer\")).RegistryIndexer;\r\n        await new RegistryIndexer().updateRegistry();\r\n        //entr = await this.dirEntry(file);\r\n        return \"\";\r\n    }\r\n    /**\r\n     * zip a directory\r\n     */\r\n    public async zip(directoryname: string, serverdir: boolean = undefined, context: Context = undefined) {\r\n        //@ts-ignore\r\n        var JSZip = (await import(\"jassijs_localserver/ext/jszip\")).default;\r\n        if (serverdir)\r\n            throw new Error(\"serverdir is unsupported on localserver\");\r\n        var zip = new JSZip();\r\n        var files = await this.dirEntry(directoryname);\r\n        for (let x = 0; x < files.length; x++) {\r\n            if (files[x].isDirectory)\r\n                zip.folder(files[x].id);\r\n            else\r\n                zip.file(files[x].id, files[x].data);\r\n        }\r\n\r\n        var ret = await zip.generateAsync({ type: \"base64\" });\r\n        //var ret = await zip.generateAsync({ type: \"base64\" });\r\n        return ret;\r\n    }\r\n    /**\r\n     * renames a file or directory\r\n     * @param oldfile - old filename\r\n     * @param newfile - new filename\r\n     */\r\n    public async rename(oldfile: string, newfile: string): Promise<string> {\r\n        var oldf = await this.dirEntry(oldfile);\r\n        var newf = await this.dirEntry(newfile);\r\n\r\n        if (oldf.length < 1)\r\n            return oldfile + \" not exists\";\r\n        if (newf.length > 0)\r\n            return newfile + \" already exists\";\r\n        for (let i = 0; i < oldf.length; i++) {\r\n            await this.remove(oldf[i].id);\r\n            oldf[i].id = newfile + oldf[i].id.substring(oldfile.length);\r\n            if (oldf[i].isDirectory)\r\n                await this.createFolder(oldf[i].id);\r\n            else\r\n                await this.createFile(oldf[i].id, oldf[i].data);\r\n        }\r\n        var RegistryIndexer = (await import(\"jassijs_localserver/RegistryIndexer\")).RegistryIndexer;\r\n        await new RegistryIndexer().updateRegistry();\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport async function test2() {\r\n    var fs = new Filessystem();\r\n    var hh = await fs.dir(\"local\");\r\n    /*await fs.createFolder(\"demo\");\r\n    await fs.createFile(\"demo/hallo\", \"\");\r\n    await fs.createFile(\"demo/hallo2\", \"\");\r\n    await fs.rename(\"demo\",\"demo1\");\r\n    var hh=await fs.dirEntry();\r\n    await fs.remove(\"demo1\");*/\r\n    return;\r\n\r\n    await new Filessystem().saveFiles([\"hallo.js\"], [\"alert(2)\"]);\r\n    var s1 = await new Filessystem().remove(\"hallo.js\");\r\n    var test = await new Filessystem().loadFile(\"hallo.js\")\r\n    var s2 = await new Filessystem().remove(\"hallo.js\");\r\n    var s = await new Filessystem().createFolder(\"demo\");\r\n    var s3 = await new Filessystem().remove(\"demo\");\r\n    await new Filessystem().saveFiles([\"local/modul.ts\"], [`export default {\r\n    \"require\":{ \r\n        \r\n    }\r\n}`]);\r\n    await new Filessystem().saveFiles([\"local/registry.js\"], [`//this file is autogenerated don't modify\r\ndefine(\"local/registry\",[\"require\"], function(require) {\r\n return {\r\n  default: {\r\n\t\"local/modul.ts\": {\r\n\t\t\"date\": 1614616375403\r\n\t}\r\n}\r\n }\r\n});`]);\r\n\r\n\r\n}\r\n","//import ts = require(\"typescript\");\r\nimport \"jassijs_editor/util/Typescript\";\r\n//@ts-ignore\r\nimport Filesystem from \"jassijs/server/Filesystem\";\r\nimport { JassiError } from \"jassijs/remote/Classes\";\r\n\r\n\r\n\r\nexport abstract class Indexer {\r\n\r\n    abstract fileExists(name);\r\n    abstract readFile(name);\r\n    abstract getFileTime(name);\r\n    abstract createDirectory(name);\r\n    abstract writeFile(name: string, content: string);\r\n    abstract dirFiles(modul: string, path: string, extensions: string[], ignore: string[]): Promise<string[]>;\r\n\r\n    public async updateModul(root, modul: string, isserver: boolean) {\r\n        var path = root + (root === \"\" ? \"\" : \"/\") + modul;\r\n        //create empty if needed\r\n        var text = \"{}\";\r\n        if (await this.fileExists(path + \"/registry.js\")) {\r\n            text = await this.readFile(path + \"/registry.js\");\r\n\r\n            if (!isserver) {\r\n                text = text.substring(text.indexOf(\"default:\") + 8);\r\n                text = text.substring(0, text.lastIndexOf(\"}\") - 1);\r\n                text = text.substring(0, text.lastIndexOf(\"}\") - 1);\r\n            } else {\r\n                text = text.substring(text.indexOf(\"default=\") + 8);\r\n            }\r\n        }\r\n        var index = JSON.parse(text);\r\n        //remove deleted files\r\n        for (var key in index) {\r\n            if (!(await this.fileExists(root + (root === \"\" ? \"\" : \"/\") + key))) {\r\n                delete index[key];\r\n            }\r\n        }\r\n\r\n        var jsFiles: string[] = await this.dirFiles(modul, path, [\".ts\"], [\"node_modules\"])\r\n        for (let x = 0; x < jsFiles.length; x++) {\r\n            var jsFile = jsFiles[x];\r\n            var fileName = jsFile.substring((root.length + (root === \"\" ? 0 : 1)));\r\n            if (fileName === undefined)\r\n                continue;\r\n            var entry = index[fileName];\r\n            if (entry === undefined) {\r\n                entry = {};\r\n                entry.date = undefined;\r\n                index[fileName] = entry;\r\n            }\r\n            if (await this.fileExists(root + (root === \"\" ? \"\" : \"/\") + fileName)) {\r\n\r\n                var dat = await this.getFileTime(root + (root === \"\" ? \"\" : \"/\") + fileName)\r\n                if (dat !== entry.date) {\r\n                    var text = <string>await this.readFile(root + (root === \"\" ? \"\" : \"/\") + fileName);\r\n                    var sourceFile = ts.createSourceFile('hallo.ts', text, ts.ScriptTarget.ES5, true);\r\n                    var outDecorations = [];\r\n                    entry = {};\r\n                    entry.date = undefined;\r\n                    index[fileName] = entry;\r\n                    this.collectAnnotations(sourceFile, entry);\r\n                    // findex(Filesystem.path + \"/\" + jsFile);\r\n                    entry.date = dat;\r\n                }\r\n            }\r\n        }\r\n        if (!isserver) {//write client\r\n\r\n            var text = JSON.stringify(index, undefined, \"\\t\");\r\n            text = \"//this file is autogenerated don't modify\\n\" +\r\n                'define(\"' + modul + '/registry\",[\"require\"], function(require) {\\n' +\r\n                ' return {\\n' +\r\n                '  default: ' + text + \"\\n\" +\r\n                ' }\\n' +\r\n                '});';\r\n            var jsdir = \"js/\" + path;\r\n            if (Filesystem.path !== undefined)\r\n                jsdir = path.replace(Filesystem.path, Filesystem.path + \"/js\");\r\n            if (!(await this.fileExists(jsdir)))\r\n                await this.createDirectory(jsdir);\r\n            await this.writeFile(jsdir + \"/registry.js\", text);\r\n            await this.writeFile(path + \"/registry.js\", text);\r\n        } else { //write server\r\n            var modules = JSON.parse(await this.readFile(\"./jassijs.json\")).modules;\r\n            for (let smodul in modules) {\r\n                if (modul === smodul) {\r\n                    var text = JSON.stringify(index, undefined, \"\\t\");\r\n                    if (text !== \"{}\") {\r\n                        text = '\"use strict:\"\\n' +\r\n                            \"//this file is autogenerated don't modify\\n\" +\r\n                            'Object.defineProperty(exports, \"__esModule\", { value: true });\\n' +\r\n                            'exports.default=' + text;\r\n                        var jsdir = \"js/\" + modul;\r\n                        if (!(await this.fileExists(jsdir)))\r\n                            await this.createDirectory(jsdir);\r\n                        await this.writeFile(jsdir + \"/registry.js\", text);\r\n                        await this.writeFile(modul + \"/registry.js\", text);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    convertArgument(arg: any) {\r\n        if (arg === undefined)\r\n            return undefined;\r\n        if (arg.kind === ts.SyntaxKind.ObjectLiteralExpression) {\r\n            var ret = {};\r\n            var props = arg.properties;\r\n            if (props !== undefined) {\r\n                for (var p = 0; p < props.length; p++) {\r\n                    ret[props[p].name.text] = this.convertArgument(props[p].initializer);\r\n                }\r\n            }\r\n            return ret;\r\n        } else if (arg.kind === ts.SyntaxKind.StringLiteral) {\r\n            return arg.text;\r\n        } else if (arg.kind === ts.SyntaxKind.ArrayLiteralExpression) {\r\n            let ret = [];\r\n            for (var p = 0; p < arg.elements.length; p++) {\r\n                ret.push(this.convertArgument(arg.elements[p]));\r\n            }\r\n            return ret;\r\n        } else if (arg.kind === ts.SyntaxKind.Identifier) {\r\n            return arg.text;\r\n        } else if (arg.kind === ts.SyntaxKind.TrueKeyword) {\r\n            return true;\r\n        } else if (arg.kind === ts.SyntaxKind.FalseKeyword) {\r\n            return false;\r\n        } else if (arg.kind === ts.SyntaxKind.NumericLiteral) {\r\n            return Number(arg.text);\r\n        } else if (arg.kind === ts.SyntaxKind.ArrowFunction||arg.kind === ts.SyntaxKind.FunctionExpression) {\r\n            return \"function\";\r\n        }\r\n\r\n        throw new JassiError(\"Error typ not found\");\r\n    }\r\n    collectAnnotations(node: ts.Node, outDecorations, depth = 0) {\r\n        //console.log(new Array(depth + 1).join('----'), node.kind, node.pos, node.end);\r\n        if (node.kind === ts.SyntaxKind.ClassDeclaration) {\r\n            if (node.decorators !== undefined) {\r\n                var dec = {};\r\n                var sclass = undefined;\r\n                for (let x = 0; x < node.decorators.length; x++) {\r\n                    var decnode = node.decorators[x];\r\n                    var ex: any = decnode.expression;\r\n                    if (ex.expression === undefined) {\r\n                        dec[ex.text] = [];//Annotation without parameter\r\n                    } else {\r\n                        if (ex.expression.text === \"$Class\")\r\n                            sclass = this.convertArgument(ex.arguments[0]);\r\n                        else {\r\n                            if (dec[ex.expression.text] === undefined) {\r\n                                dec[ex.expression.text] = [];\r\n                            }\r\n                            for (var a = 0; a < ex.arguments.length; a++) {\r\n                                dec[ex.expression.text].push(this.convertArgument(ex.arguments[a]));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (sclass !== undefined)\r\n                    outDecorations[sclass] = dec;\r\n                //@members.value.$Property=[{name:string}]\r\n                for (let x = 0; x < node[\"members\"].length; x++) {\r\n                    var member = node[\"members\"][x];\r\n                    var membername = node[\"members\"][x].name?.escapedText;\r\n                    if (member.decorators !== undefined) {\r\n                        if(!dec[\"@members\"])\r\n                            dec[\"@members\"]={}\r\n                       \r\n                        var decm = {};\r\n                        dec[\"@members\"][membername]=decm;\r\n                        for (let x = 0; x < member.decorators.length; x++) {\r\n                            var decnode = member.decorators[x];\r\n                            var ex: any = decnode.expression;\r\n\r\n                            if (ex.expression === undefined) {\r\n                                decm[ex.text] = [];//Annotation without parameter\r\n                            } else {\r\n\r\n                                if (decm[ex.expression.text] === undefined) {\r\n                                    decm[ex.expression.text] = [];\r\n                                }\r\n                                for (var a = 0; a < ex.arguments.length; a++) {\r\n                                    decm[ex.expression.text].push(this.convertArgument(ex.arguments[a]));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n                \r\n            }\r\n        }\r\n        depth++;\r\n        node.getChildren().forEach(c => this.collectAnnotations(c, outDecorations, depth));\r\n    }\r\n    /*findex(file: string) {\r\n        var text = fs.readFileSync(file).toString();\r\n        var sourceFile = ts.createSourceFile('hallo.ts', text, ts.ScriptTarget.ES5, true);\r\n        var outDecorations = [];\r\n        this.collectAnnotations(sourceFile, outDecorations);\r\n        var h = 9;\r\n    }*/\r\n}\r\n","define(\"jassijs_localserver/Installserver\", [\"jassijs_localserver/Filesystem\", \"jassijs_localserver/DatabaseSchema\"], function (Filesystem, schema) {\r\n    return {\r\n        //search for file in local-DB and undefine this files \r\n        //so this files could be loaded from local-DB\r\n        autostart: async function () {\r\n            var files = await new Filesystem.default().dirFiles(\"\", [\"js\", \"ts\"]);\r\n            files.forEach((fname) => {\r\n                if (!fname.startsWith(\"js/\")) {\r\n                    var name = fname.substring(0, fname.length - 3);\r\n                    requirejs.undef(name);\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n});\r\nrequirejs.undef(\"jassijs/util/DatabaseSchema\");\r\n\r\ndefine(\"jassijs/util/DatabaseSchema\", [\"jassijs_localserver/DatabaseSchema\"], function (to) {\r\n    return to;\r\n});\r\ndefine(\"jassijs/server/DoRemoteProtocol\", [\"jassijs_localserver/LocalProtocol\"], function (locprot) {\r\n    return {\r\n        _execute: async function (protext, request, context) {\r\n            var prot = JSON.parse(protext);\r\n            return await locprot.localExec(prot, context);\r\n        }\r\n    }\r\n})\r\n\r\ndefine(\"jassijs/server/Filesystem\", [\"jassijs_localserver/Filesystem\"], function (fs) {\r\n    return fs\r\n\r\n})\r\ndefine(\"jassijs/server/DBManager\", [\"jassijs_localserver/DBManager\", \"jassijs/remote/Classes\", \"jassijs/remote/Registry\", \"jassijs_localserver/DBManager\", \"jassijs_localserver/TypeORMListener\", \"typeorm\", \"jassijs/remote/Database\"], function (db, Classes_1, Registry_1, dbman, TypeORMListener, to, Database) {\r\n    //create Admin User if doesn't a user exists \r\n    db.DBManager.prototype[\"hasLoaded\"] = async function () {\r\n        var User = await Classes_1.classes.loadClass(\"jassijs.security.User\");\r\n        var us = User.findOne();\r\n        if (us) {\r\n            us = new User();\r\n            us.email = \"admin\";\r\n            us.password = \"jassi\";\r\n            us.isAdmin = true;\r\n            await us.save();\r\n        }\r\n\r\n    }\r\n    db.DBManager.prototype[\"login\"] = async function (context, user, password) {\r\n        try {\r\n            var User = await Classes_1.classes.loadClass(\"jassijs.security.User\");\r\n            var ret = await this.connection().manager.createQueryBuilder().\r\n                select(\"me\").from(User, \"me\").addSelect(\"me.password\").\r\n                andWhere(\"me.email=:email\", { email: user });\r\n\r\n            var auser = await ret.getOne();\r\n            if (!auser || !password)\r\n                return undefined;\r\n            if (auser.password === password) {\r\n                delete auser.password;\r\n                return auser;\r\n            }\r\n        } catch (err) {\r\n            err=err;\r\n        }\r\n        return undefined;\r\n    }\r\n    db.DBManager[\"getConOpts\"] = async function () {\r\n        var dbclasses = []; \r\n        const initSqlJs = window[\"SQL\"];\r\n        const SQL = await window[\"SQL\"]({\r\n            // Required to load the wasm binary asynchronously. Of course, you can host it wherever you want\r\n            // You can omit locateFile completely when running in node\r\n            locateFile: file => `https://sql.js.org/dist/${file}`\r\n        });\r\n\r\n        var dbobjects = await Registry_1.default.getJSONData(\"$DBObject\");\r\n        var dbfiles = [];\r\n        for (var o = 0; o < dbobjects.length; o++) {\r\n            var clname = dbobjects[o].classname;\r\n            try {\r\n                dbfiles.push(dbobjects[o].filename.replace(\".ts\", \"\"));\r\n                dbclasses.push(await Classes_1.classes.loadClass(clname));\r\n            } catch (err) {\r\n                console.log(err);\r\n                throw err;\r\n            }\r\n        }\r\n        db.DBManager.clearMetadata();\r\n        Database.db.fillDecorators();\r\n        var tcl = await Classes_1.classes.loadClass(\"jassijs_localserver.TypeORMListener\");\r\n        to.EventSubscriber()(tcl);\r\n        var Filessystem = await Classes_1.classes.loadClass(\"jassijs_localserver.Filessystem\");\r\n        var data = await new Filessystem().loadFile(\"__default.db\");\r\n        var opt = {\r\n            database: data,\r\n            type: \"sqljs\",\r\n            subscribers: [TypeORMListener.TypeORMListener],\r\n            \"entities\": dbclasses\r\n        };\r\n        return opt;\r\n    }\r\n    return db;\r\n});\r\n//DatabaseSchema","\r\nimport { Context } from \"jassijs/remote/RemoteObject\";\r\nimport { RemoteProtocol } from \"jassijs/remote/RemoteProtocol\";\r\n\r\nRemoteProtocol.prototype.exec = async function (config, ob) {\r\n    var clname = JSON.parse(config.data).classname;\r\n    var local = [\"jassijs.remote.Transaction\", \"northwind.Employees\", \"northwind.Customer\"];\r\n    var classes = (await import(\"jassijs/remote/Classes\")).classes;\r\n    var DBObject = await classes.loadClass(\"jassijs.remote.DBObject\");\r\n    var ret;\r\n    //\r\n    /* if (clname === \"jassijs.remote.Server\") {\r\n         var tst = JSON.parse(config.data);\r\n         if (tst.method === \"dir\") {\r\n             var retserver = JSON.parse(await $.ajax(config));\r\n             var sret = await localExec(JSON.parse(config.data));\r\n             for(let i=0;i<retserver.files.length;i++){\r\n                 if(retserver.files[i].name===\"local\"){\r\n                     //retserver.files.splice(i,1);\r\n                 }\r\n             }\r\n             for(let i=0;i<sret.files.length;i++){\r\n                 if(sret.files[i].name===\"local\")\r\n                     retserver.files.push(sret.files[i]);\r\n             }\r\n             return JSON.stringify(retserver);\r\n         }else if(tst.method===\"saveFiles\"){\r\n             if(tst.parameter[0][0].startsWith(\"local/\")||tst.parameter[0][0].startsWith(\"js/local/\")){\r\n                 var sret = await localExec(JSON.parse(config.data));\r\n                 ret = new RemoteProtocol().stringify(sret);\r\n                 if (ret === undefined)\r\n                     ret = \"$$undefined$$\";\r\n                 return ret;\r\n             }\r\n         } else if(tst.parameter.length>0&&(tst.parameter[0]===\"local\"||tst.parameter[0].startsWith(\"local/\"))) {\r\n             var sret = await localExec(JSON.parse(config.data));\r\n             ret = new RemoteProtocol().stringify(sret);\r\n             if (ret === undefined)\r\n                 ret = \"$$undefined$$\";\r\n             return ret;\r\n         }\r\n \r\n     }\r\n     if (local.indexOf(clname) > -1||clname.startsWith(\"local\")) {*/\r\n    var data = JSON.parse(config.data);\r\n    var debugservermethods = [];//[\"dir\"];//for testing run on server\r\n    if (debugservermethods.indexOf(data.method) > -1) {\r\n        ret = await $.ajax(config);\r\n    } else {\r\n        var sret = await localExec(data);\r\n        ret = new RemoteProtocol().stringify(sret);\r\n        if (ret === undefined)\r\n            ret = \"$$undefined$$\";\r\n    }\r\n    /* } else\r\n         ret = await $.ajax(config);*/\r\n    return ret;\r\n}\r\nexport async function localExec(prot: RemoteProtocol, context: Context = undefined) {\r\n    var classes = (await import(\"jassijs/remote/Classes\")).classes;\r\n    var p = new RemoteProtocol();\r\n\r\n    var C = await classes.loadClass(prot.classname);\r\n    if (context === undefined) {\r\n        \r\n        context = {\r\n            isServer: true,\r\n            request: {\r\n                user: {\r\n                    isAdmin: true,\r\n                    user: 1\r\n                }\r\n            }\r\n        };\r\n        var Cookies = (await import(\"jassijs/util/Cookies\")).Cookies;\r\n        if(Cookies.get(\"simulateUser\")&&Cookies.get(\"simulateUserPassword\")){\r\n            var DBManager:any = await classes.loadClass(\"jassi_localserver.DBManager\");\r\n            var man=await DBManager.get();\r\n            var user=await man.login(context,Cookies.get(\"simulateUser\"),Cookies.get(\"simulateUserPassword\"));\r\n            if(user===undefined){\r\n                throw Error(\"simulated login failed\")\r\n            }else{\r\n                context.request.user.user=user.id;\r\n                context.request.user.isAdmin=user.isAdmin?true:false;\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    if (prot._this === \"static\") {\r\n        try {\r\n            //await checkSimulateUser(request);\r\n            if (prot.parameter === undefined)\r\n                ret = await (C[prot.method](context));\r\n            else\r\n                ret = await (C[prot.method](...prot.parameter, context));\r\n        } catch (ex) {\r\n            console.error(ex.stack);\r\n            var msg = ex.message;\r\n            if (!msg)\r\n                msg = ex;\r\n            if (!ex)\r\n                ex = \"\";\r\n            ret = {\r\n                \"**throw error**\": msg\r\n            }\r\n        }\r\n        //var s = new RemoteProtocol().stringify(ret);\r\n\r\n        return ret;\r\n    } else {\r\n        var obj = new C();\r\n        //if(runAfterCreation){\r\n        //    obj=runAfterCreation(obj);\r\n        //}\r\n        if (prot._this !== undefined)\r\n            Object.assign(obj, prot._this);\r\n        var ret = undefined;\r\n        try {\r\n            //await checkSimulateUser(request);\r\n            if (prot.parameter === undefined)\r\n                ret = await (obj[prot.method](context));\r\n            else\r\n                ret = await (obj[prot.method](...prot.parameter, context));\r\n        } catch (ex) {\r\n            console.error(ex.stack);\r\n            var msg = ex.message;\r\n            if (!msg)\r\n                msg = ex;\r\n            if (!ex)\r\n                ex = \"\";\r\n            ret = {\r\n                \"**throw error**\": msg\r\n            }\r\n        }\r\n        //var s = new RemoteProtocol().stringify(ret);\r\n        return ret;\r\n    }\r\n}\r\n","\r\nimport { Indexer } from \"jassijs_localserver/Indexer\";\r\n\r\n\r\nimport { Server } from \"jassijs/remote/Server\";\r\nimport Filessystem from \"jassijs_localserver/Filesystem\";\r\nimport { $Class } from \"jassijs/remote/Registry\";\r\n\r\n@$Class(\"jassijs_localserver.RegistryIndexer\")\r\nexport class RegistryIndexer extends Indexer {\r\n    private static version=Math.floor(Math.random() * 100000);\r\n    private mapcache: { [modul: string]: any } = {};\r\n    public async updateRegistry() {\r\n        //client modules\r\n        var data = await new Server().loadFile(\"jassijs.json\");\r\n        var modules = JSON.parse(data).modules;\r\n        for (var m in modules) {\r\n            if (await new Filessystem().existsDirectory(modules[m]) || await new Filessystem().existsDirectory(m)) {\r\n                if (modules[m].indexOf(\".js\") === -1) {//.js are internet modules\r\n\r\n                    await this.updateModul(\"\", m, false);\r\n                } else {\r\n\r\n                    await this.updateModul(\"\", m, false);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return;\r\n    }\r\n    async dirFiles(modul: string, path: string, extensions: string[], ignore: string[] = []): Promise<string[]> {\r\n        var tsfiles: string[] = await new Filessystem().dirFiles(path, extensions, ignore);\r\n        //add files from map\r\n        if (this.mapcache[modul] === undefined && jassijs.modules[modul]!==undefined&&jassijs.modules[modul].indexOf(\".js\") > 0) {//read webtsfiles\r\n            let ret = {};\r\n            let mapname = jassijs.modules[modul].split(\"?\")[0] + \".map\";\r\n            if (jassijs.modules[modul].indexOf(\".js?\") > -1)\r\n                mapname = mapname + \"?\" + jassijs.modules[modul].split(\"?\")[1];\r\n            var code = await $.ajax({ url: mapname, dataType: \"text\" })\r\n            var data = JSON.parse(code);\r\n            var files = data.sources;\r\n            for (let x = 0; x < files.length; x++) {\r\n                let fname = files[x].substring(files[x].indexOf(modul + \"/\"));\r\n                ret[fname] = data.sourcesContent[x];\r\n            }\r\n            this.mapcache[modul] = ret;\r\n        }\r\n        if (this.mapcache[modul]) {\r\n            for (var key in this.mapcache[modul]) {\r\n                if (tsfiles.indexOf(key) === -1) {\r\n                    tsfiles.push(key);\r\n                }\r\n\r\n            }\r\n        }\r\n        return tsfiles;\r\n    }\r\n    async writeFile(name: string, content: string) {\r\n        await new Filessystem().saveFile(name, content);\r\n    }\r\n    async createDirectory(name: string) {\r\n        await new Filessystem().createFolder(name);\r\n        return;\r\n    }\r\n    async getFileTime(filename): Promise<number> {\r\n        var entry = await new Filessystem().loadFileEntry(filename);\r\n        if (entry !== undefined)\r\n            return RegistryIndexer.version;\r\n        for (var modul in this.mapcache) {\r\n            if (this.mapcache[modul][filename]) {\r\n                return 0;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    async fileExists(filename): Promise<boolean> {\r\n\r\n        for (var modul in this.mapcache) {\r\n            if (this.mapcache[modul][filename]) {\r\n                return true;\r\n            }\r\n        }\r\n        var test = await new Filessystem().loadFileEntry(filename);\r\n        return test !== undefined;\r\n    }\r\n    async readFile(filename): Promise<any> {\r\n        var ret = await new Filessystem().loadFile(filename);\r\n        if (ret !== undefined)\r\n            return ret;\r\n        for (var modul in this.mapcache) {\r\n            if (this.mapcache[modul][filename]) {\r\n                return this.mapcache[modul][filename];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}","import { Column, PrimaryColumn } from \"jassijs/util/DatabaseSchema\";\r\nimport { Entity} from \"jassijs/util/DatabaseSchema\";\r\nimport { $DBObject } from \"jassijs/remote/DBObject\";\r\nimport { $Class } from \"jassijs/remote/Registry\";\r\n\r\n@$DBObject()\r\n@$Class(\"Testuser\")\r\nexport class Testuser{\r\n     @PrimaryColumn()\r\n    id: number;\r\n    @Column()\r\n    firstname: string;\r\n    @Column()\r\n    lastname: string; \r\n}","import { $Class } from \"jassijs/remote/Registry\";\r\n//@ts-ignore\r\nimport { EntitySubscriberInterface, EventSubscriber, InsertEvent, RemoveEvent, UpdateEvent } from \"typeorm\";\r\nimport Filessystem from \"jassijs_localserver/Filesystem\";\r\nimport { Reloader } from \"jassijs/util/Reloader\";\r\nimport registry from \"jassijs/remote/Registry\";\r\nimport { DBManager } from \"./DBManager\";\r\n\r\n\r\n//listener for code changes\r\nReloader.instance.addEventCodeReloaded(async function (files: string[]) {\r\n    var dbobjects = await registry.getJSONData(\"$DBObject\");\r\n    var reload = false;\r\n    for (var x = 0; x < files.length; x++) {\r\n        var file = files[x];\r\n        dbobjects.forEach((data) => {\r\n            if (data.filename === file+\".ts\")\r\n                reload = true;\r\n        });\r\n    }\r\n    if(reload){\r\n        await DBManager.destroyConnection();\r\n        await DBManager.get();\r\n    }\r\n});\r\n\r\n@EventSubscriber()\r\n@$Class(\"jassijs_localserver.TypeORMListener\")\r\nexport class TypeORMListener implements EntitySubscriberInterface {\r\n    savetimer;\r\n    saveDB(event) {\r\n        if (this.savetimer) {\r\n            clearTimeout(this.savetimer);\r\n            this.savetimer = undefined;\r\n        }\r\n        this.savetimer = setTimeout(() => {\r\n            var data = event.connection.driver.export();\r\n            new Filessystem().saveFile(\"__default.db\", data);\r\n            console.log(\"save DB\");\r\n        }, 300);\r\n\r\n    }\r\n    /**\r\n     * Called after entity is loaded.\r\n     */\r\n    afterLoad(entity: any) {\r\n        // console.log(`AFTER ENTITY LOADED: `, entity);\r\n    }\r\n\r\n    /**\r\n     * Called before post insertion.\r\n     */\r\n    beforeInsert(event: InsertEvent<any>) {\r\n        //console.log(`BEFORE POST INSERTED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called after entity insertion.\r\n     */\r\n    afterInsert(event: InsertEvent<any>) {\r\n        this.saveDB(event);\r\n        //console.log(`AFTER ENTITY INSERTED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called before entity update.\r\n     */\r\n    beforeUpdate(event: UpdateEvent<any>) {\r\n        //console.log(`BEFORE ENTITY UPDATED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called after entity update.\r\n     */\r\n    afterUpdate(event: UpdateEvent<any>) {\r\n        this.saveDB(event);\r\n        //console.log(`AFTER ENTITY UPDATED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called before entity removal.\r\n     */\r\n    beforeRemove(event: RemoveEvent<any>) {\r\n        // console.log(`BEFORE ENTITY WITH ID ${event.entityId} REMOVED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called after entity removal.\r\n     */\r\n    afterRemove(event: RemoveEvent<any>) {\r\n        //  console.log(`AFTER ENTITY WITH ID ${event.entityId} REMOVED: `, event.entity);\r\n        this.saveDB(event);\r\n    }\r\n\r\n    /**\r\n     * Called before transaction start.\r\n     */\r\n    beforeTransactionStart(event) {\r\n        // console.log(`BEFORE TRANSACTION STARTED: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called after transaction start.\r\n     */\r\n    afterTransactionStart(event/*: TransactionStartEvent*/) {\r\n        //console.log(`AFTER TRANSACTION STARTED: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called before transaction commit.\r\n     */\r\n    beforeTransactionCommit(event/*: TransactionCommitEvent*/) {\r\n        // console.log(`BEFORE TRANSACTION COMMITTED: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called after transaction commit.\r\n     */\r\n    afterTransactionCommit(event/*: TransactionCommitEvent*/) {\r\n        //console.log(`AFTER TRANSACTION COMMITTED: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called before transaction rollback.\r\n     */\r\n    beforeTransactionRollback(event/*: TransactionRollbackEvent*/) {\r\n        //   console.log(`BEFORE TRANSACTION ROLLBACK: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called after transaction rollback.\r\n     */\r\n    afterTransactionRollback(event/*: TransactionRollbackEvent*/) {\r\n        // console.log(`AFTER TRANSACTION ROLLBACK: `, event);\r\n    }\r\n\r\n}","export default {\r\n    \"loadbeforestart\":[\"js-sql-parser\",\"typeormbrowser\",\"jassijs_localserver/Installserver\",\"jassijs_localserver/LocalProtocol\"],\r\n    \r\n    \"require\":{ \r\n        paths: {\r\n            \"jszip\":\"https://cdnjs.cloudflare.com/ajax/libs/jszip/3.5.0/jszip\",\r\n            \"js-sql-parser\":\"https://cdn.jsdelivr.net/npm/js-sql-parser@1.4.1/dist/parser/sqlParser.min\",\r\n            \"typeorm\":\"jassijs_localserver/ext/typeorm\",\r\n            \"typeormbrowser\":\"https://uwei.github.io/jassijs/dist/typeorm/typeormbrowser\",\r\n            \"window.SQL\":\"https://sql.js.org/dist/sql-wasm\"\r\n        },\r\n        shim: {\r\n        }\r\n    \r\n    }\r\n}","//this file is autogenerated don't modify\ndefine(\"jassijs_localserver/registry\",[\"require\"], function(require) {\n return {\n  default: {\n\t\"jassijs_localserver/DatabaseSchema.ts\": {\n\t\t\"date\": 1622984213677\n\t},\n\t\"jassijs_localserver/DBManager.ts\": {\n\t\t\"date\": 1624103920275,\n\t\t\"jassi_localserver.DBManager\": {}\n\t},\n\t\"jassijs_localserver/Filesystem.ts\": {\n\t\t\"date\": 1625946455001,\n\t\t\"jassijs_localserver.Filessystem\": {}\n\t},\n\t\"jassijs_localserver/Indexer.ts\": {\n\t\t\"date\": 1627585602318\n\t},\n\t\"jassijs_localserver/LocalProtocol.ts\": {\n\t\t\"date\": 1624139285542\n\t},\n\t\"jassijs_localserver/modul.ts\": {\n\t\t\"date\": 1622998474045\n\t},\n\t\"jassijs_localserver/RegistryIndexer.ts\": {\n\t\t\"date\": 1624137198480,\n\t\t\"jassijs_localserver.RegistryIndexer\": {}\n\t},\n\t\"jassijs_localserver/Testuser.ts\": {\n\t\t\"date\": 1622984213666,\n\t\t\"Testuser\": {\n\t\t\t\"$DBObject\": [],\n\t\t\t\"@members\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"PrimaryColumn\": []\n\t\t\t\t},\n\t\t\t\t\"firstname\": {\n\t\t\t\t\t\"Column\": []\n\t\t\t\t},\n\t\t\t\t\"lastname\": {\n\t\t\t\t\t\"Column\": []\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"jassijs_localserver/TypeORMListener.ts\": {\n\t\t\"date\": 1622998616949,\n\t\t\"jassijs_localserver.TypeORMListener\": {\n\t\t\t\"EventSubscriber\": []\n\t\t}\n\t}\n}\n }\n});","\r\ndefine(\"jassijs_localserver/ext/jszip\", [\"jszip\"], function (JSZip) {\r\n    JSZip.support.nodebuffer=undefined;//we hacked window.Buffer\r\n    return {\r\n        \r\n        default: JSZip\r\n    };\r\n});\r\n\r\n\r\n/*\r\ndefine(\"jassijs_localserver/ext/typeorm-browser\",[\"typeorm\"], function(sql){\r\n\r\n    //jassijs.myRequire(\"lib/skin-win8/ui.fancytree.min.css\");\r\n    //'jquery.fancytree': '//cdn.jsdelivr.net/npm/jquery.fancytree@2.37.0/dist/jquery.fancytree.min',\r\n\r\n});*/","define(\"sha.js\",[],()=>{return {};});\r\ndefine(\"dotenv\",[],()=>{return {};});\r\ndefine(\"chalk\",[],()=>{return {};});\r\ndefine(\"cli-highlight\",[],()=>{return {};});\r\ndefine(\"events\",[],()=>{return {};});\r\ndefine(\"stream\",[],()=>{return {};});\r\ndefine(\"mkdirp\",[],()=>{return {};});\r\ndefine(\"glob\",[],()=>{return {};});\r\ndefine(\"app-root-path\",[],()=>{return {};});\r\ndefine(\"debug\",[],()=>{return {};});\r\ndefine(\"js-yaml\",[],()=>{return {};});\r\ndefine(\"xml2js\",[],()=>{return {};});\r\ndefine(\"path\",[],()=>{return {};});\r\ndefine(\"fs\",[],()=>{return {};});\r\n\r\n//\"buffer\":\"https://cdn.jsdelivr.net/npm/buffer@6.0.3/index\",\r\nwindow.Buffer=class Buffer{\r\n    static isBuffer(ob){\r\n        return false;\r\n    }\r\n}\r\nwindow.global=window;\r\n\r\ndefine(\"typeorm\",[\"typeorm/index\",\"typeorm/platform/PlatformTools\",\"window.SQL\",\"reflect-metadata\"],function(to,pf,sql,buffer){\r\n    pf.PlatformTools.type=\"browser\";\r\n    window.SQL=sql;\r\n    \r\n    return to;\r\n\r\n});\r\n\r\n\r\n/*\r\ndefine(\"jassijs_localserver/ext/typeorm-browser\",[\"typeorm\"], function(sql){\r\n   \r\n    //jassijs.myRequire(\"lib/skin-win8/ui.fancytree.min.css\");\r\n    //'jquery.fancytree': '//cdn.jsdelivr.net/npm/jquery.fancytree@2.37.0/dist/jquery.fancytree.min',\r\n\r\n});*/"]}