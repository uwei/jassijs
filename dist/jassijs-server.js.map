{"version":3,"file":"jassijs-server.js","sourceRoot":"","sources":["../jassijs/registry.js","../jassijs/remote/Classes.ts","../jassijs/remote/FileNode.ts","../jassijs/remote/Serverservice.ts","../jassijs/server/Indexer.ts","../jassijs/server/RegistryIndexer.ts","../jassijs/server/Filesystem.ts","../jassijs/server/Reloader.ts","../jassijs/server/Compile.ts","../jassijs/server/NativeAdapter.ts","../jassijs/remote/Config.ts","../jassijs/remote/Registry.ts","../jassijs/remote/security/Rights.ts","../jassijs/remote/RemoteProtocol.ts","../jassijs/remote/RemoteObject.ts","../jassijs/util/DatabaseSchema.ts","../jassijs/remote/Database.ts","../jassijs/remote/ObjectTransaction.ts","../jassijs/server/DoRemoteProtocol.ts","../jassijs/remote/Transaction.ts","../jassijs/remote/Test.ts","../jassijs/remote/Validator.ts","../jassijs/remote/DBObject.ts","../jassijs/remote/security/ParentRight.ts","../jassijs/remote/security/Right.ts","../jassijs/remote/security/Group.ts","../jassijs/remote/security/User.ts","../jassijs/UserModel.ts","../jassijs/remote/DBObjectQuery.ts","../jassijs/remote/security/Setting.ts","../jassijs/remote/ClientError.ts","../jassijs/remote/DatabaseTools.ts","../jassijs/remote/Extensions.ts","../jassijs/remote/Jassi.ts","../jassijs/remote/Server.ts","../jassijs/remote/Settings.ts","../jassijs/server/DBManager.ts","../jassijs/server/PassportSetup.ts","../jassijs/server/PassportLoginRegister.ts","../jassijs/server/Zip.ts","../jassijs/server/RawBody.ts","../jassijs_report/remote/pdfmakejassi.ts","../jassijs_report/TestServerreport.ts","../jassijs_report/DoServerreport.ts","../jassijs/server/UpdatePackage.ts","../jassijs/server/FileTools.ts","../jassijs/server/JassiServer.ts","../jassijs/remote/DBArray.ts","../jassijs/remote/JassijsGlobal.ts","../jassijs/remote/Modules.ts","../jassijs/remote/hallo.ts","../client/jassijs/server/DBManager.ts","../jassijs/server/ext/jszip.ts","../client/jassijs/server/NativeAdapter.ts","../client/jassijs/server/TypeORMListener.ts","../client/jassijs/server/DBManagerExt.ts","../client/jassijs/server/DatabaseSchema.ts","../client/jassijs/server/DoRemoteProtocol.ts","../client/jassijs/server/RegistryIndexer.ts","../client/jassijs/remote/Serverservice.ts","../client/jassijs/server/Filesystem.ts","../client/jassijs/server/Indexer.ts","../client/jassijs/server/LocalProtocol.ts","../jassijs/server/TypeORMListener.ts","../jassijs/server/DBManagerExt.ts","../client/jassijs/server/Installserver.ts","../client/jassijs/server/Testuser.ts","../client/jassijs/server/ext/EmpyDeclaration.ts","../client/jassijs/server/ext/jszip.ts","../client/jassijs/server/ext/typeorm.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict:\"\n//this file is autogenerated don't modify\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default={\n\t\"jassijs/remote/Classes.ts\": {\n\t\t\"date\": 1682795551717.3792,\n\t\t\"jassijs.remote.JassiError\": {},\n\t\t\"jassijs.remote.Classes\": {}\n\t},\n\t\"jassijs/remote/ClientError.ts\": {\n\t\t\"date\": 1655556930000,\n\t\t\"jassijs.remote.ClientError\": {}\n\t},\n\t\"jassijs/remote/Database.ts\": {\n\t\t\"date\": 1655556796000,\n\t\t\"jassijs.remote.Database\": {}\n\t},\n\t\"jassijs/remote/DatabaseTools.ts\": {\n\t\t\"date\": 1681309880654.3965,\n\t\t\"jassijs.remote.DatabaseTools\": {\n\t\t\t\"@members\": {\n\t\t\t\t\"runSQL\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"jassijs/remote/DBArray.ts\": {\n\t\t\"date\": 1655556796000,\n\t\t\"jassijs.remote.DBArray\": {}\n\t},\n\t\"jassijs/remote/DBObject.ts\": {\n\t\t\"date\": 1681317354018.0388,\n\t\t\"jassijs.remote.DBObject\": {}\n\t},\n\t\"jassijs/remote/DBObjectQuery.ts\": {\n\t\t\"date\": 1623876714000\n\t},\n\t\"jassijs/remote/Extensions.ts\": {\n\t\t\"date\": 1626209336000\n\t},\n\t\"jassijs/remote/FileNode.ts\": {\n\t\t\"date\": 1655556796000,\n\t\t\"jassijs.remote.FileNode\": {}\n\t},\n\t\"jassijs/remote/hallo.ts\": {\n\t\t\"date\": 1622985410000\n\t},\n\t\"jassijs/remote/Jassi.ts\": {\n\t\t\"date\": 1682794538158.105\n\t},\n\t\"jassijs/remote/JassijsGlobal.ts\": {\n\t\t\"date\": 1655549782000\n\t},\n\t\"jassijs/remote/ObjectTransaction.ts\": {\n\t\t\"date\": 1622985414000\n\t},\n\t\"jassijs/remote/Registry.ts\": {\n\t\t\"date\": 1682773797218.1587\n\t},\n\t\"jassijs/remote/RemoteObject.ts\": {\n\t\t\"date\": 1655556866000,\n\t\t\"jassijs.remote.RemoteObject\": {}\n\t},\n\t\"jassijs/remote/RemoteProtocol.ts\": {\n\t\t\"date\": 1655556796000,\n\t\t\"jassijs.remote.RemoteProtocol\": {}\n\t},\n\t\"jassijs/remote/security/Group.ts\": {\n\t\t\"date\": 1681322755236.7244,\n\t\t\"jassijs.security.Group\": {\n\t\t\t\"$DBObject\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"jassijs_group\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"@members\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"ValidateIsInt\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"PrimaryColumn\": []\n\t\t\t\t},\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"ValidateIsString\": [],\n\t\t\t\t\t\"Column\": []\n\t\t\t\t},\n\t\t\t\t\"parentRights\": {\n\t\t\t\t\t\"ValidateIsArray\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true,\n\t\t\t\t\t\t\t\"type\": \"function\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"JoinTable\": [],\n\t\t\t\t\t\"ManyToMany\": [\n\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\"function\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"rights\": {\n\t\t\t\t\t\"ValidateIsArray\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true,\n\t\t\t\t\t\t\t\"type\": \"function\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"JoinTable\": [],\n\t\t\t\t\t\"ManyToMany\": [\n\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\"function\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"users\": {\n\t\t\t\t\t\"ValidateIsArray\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true,\n\t\t\t\t\t\t\t\"type\": \"function\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"ManyToMany\": [\n\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\"function\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"jassijs/remote/security/ParentRight.ts\": {\n\t\t\"date\": 1681581396308.1873,\n\t\t\"jassijs.security.ParentRight\": {\n\t\t\t\"$DBObject\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"jassijs_parentright\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"@members\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"ValidateIsInt\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"PrimaryGeneratedColumn\": []\n\t\t\t\t},\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"ValidateIsString\": [],\n\t\t\t\t\t\"Column\": []\n\t\t\t\t},\n\t\t\t\t\"classname\": {\n\t\t\t\t\t\"ValidateIsString\": [],\n\t\t\t\t\t\"Column\": []\n\t\t\t\t},\n\t\t\t\t\"i1\": {\n\t\t\t\t\t\"ValidateIsNumber\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"Column\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"nullable\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"i2\": {\n\t\t\t\t\t\"ValidateIsNumber\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"Column\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"nullable\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"s1\": {\n\t\t\t\t\t\"ValidateIsString\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"Column\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"nullable\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"s2\": {\n\t\t\t\t\t\"ValidateIsString\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"Column\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"nullable\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"groups\": {\n\t\t\t\t\t\"ValidateIsArray\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true,\n\t\t\t\t\t\t\t\"type\": \"function\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"ManyToMany\": [\n\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\"function\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"jassijs/remote/security/Right.ts\": {\n\t\t\"date\": 1681322767134.66,\n\t\t\"jassijs.security.Right\": {\n\t\t\t\"$DBObject\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"jassijs_right\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"@members\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"ValidateIsInt\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"PrimaryColumn\": []\n\t\t\t\t},\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"ValidateIsString\": [],\n\t\t\t\t\t\"Column\": []\n\t\t\t\t},\n\t\t\t\t\"groups\": {\n\t\t\t\t\t\"ValidateIsArray\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true,\n\t\t\t\t\t\t\t\"type\": \"function\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"ManyToMany\": [\n\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\"function\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"jassijs/remote/security/Rights.ts\": {\n\t\t\"date\": 1655556796000,\n\t\t\"jassijs.security.Rights\": {}\n\t},\n\t\"jassijs/remote/security/Setting.ts\": {\n\t\t\"date\": 1681316435162.0532,\n\t\t\"jassijs.security.Setting\": {\n\t\t\t\"$DBObject\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"jassijs_setting\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"@members\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"ValidateIsInt\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"PrimaryColumn\": []\n\t\t\t\t},\n\t\t\t\t\"data\": {\n\t\t\t\t\t\"ValidateIsString\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"Column\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"nullable\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"jassijs/remote/security/User.ts\": {\n\t\t\"date\": 1681329602964.0217,\n\t\t\"jassijs.security.User\": {\n\t\t\t\"$DBObject\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"jassijs_user\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"@members\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"ValidateIsNumber\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"PrimaryGeneratedColumn\": []\n\t\t\t\t},\n\t\t\t\t\"email\": {\n\t\t\t\t\t\"ValidateIsString\": [],\n\t\t\t\t\t\"Column\": []\n\t\t\t\t},\n\t\t\t\t\"password\": {\n\t\t\t\t\t\"ValidateIsString\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"Column\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"select\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"groups\": {\n\t\t\t\t\t\"ValidateIsArray\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true,\n\t\t\t\t\t\t\t\"type\": \"function\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"JoinTable\": [],\n\t\t\t\t\t\"ManyToMany\": [\n\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\"function\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"isAdmin\": {\n\t\t\t\t\t\"ValidateIsBoolean\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"Column\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"nullable\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"jassijs/remote/Settings.ts\": {\n\t\t\"date\": 1681315774170.6409,\n\t\t\"jassijs.remote.Settings\": {\n\t\t\t\"@members\": {\n\t\t\t\t\"remove\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"save\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"saveAll\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"jassijs/remote/Test.ts\": {\n\t\t\"date\": 1655556930000,\n\t\t\"jassijs.remote.Test\": {}\n\t},\n\t\"jassijs/remote/Transaction.ts\": {\n\t\t\"date\": 1655556866000,\n\t\t\"jassijs.remote.Transaction\": {}\n\t},\n\t\"jassijs/server/Compile.ts\": {\n\t\t\"date\": 1682711291459.0598\n\t},\n\t\"jassijs/server/DBManager.ts\": {\n\t\t\"date\": 1682710550782.2158,\n\t\t\"jassijs/server/DBManager\": {\n\t\t\t\"$Serverservice\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"db\",\n\t\t\t\t\t\"getInstance\": \"function\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t\"jassijs/server/DoRemoteProtocol.ts\": {\n\t\t\"date\": 1682362433279.5454\n\t},\n\t\"jassijs/server/Filesystem.ts\": {\n\t\t\"date\": 1682794700454.372,\n\t\t\"jassijs.server.Filesystem\": {\n\t\t\t\"$Serverservice\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"filesystem\",\n\t\t\t\t\t\"getInstance\": \"function\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t\"jassijs/server/Indexer.ts\": {\n\t\t\"date\": 1682792930299.4324\n\t},\n\t\"jassijs/server/JassiServer.ts\": {\n\t\t\"date\": 1682449512016.267\n\t},\n\t\"jassijs/server/PassportLoginRegister.ts\": {\n\t\t\"date\": 1680946666515.8162\n\t},\n\t\"jassijs/server/PassportSetup.ts\": {\n\t\t\"date\": 1680946687665.4827\n\t},\n\t\"jassijs/server/RawBody.ts\": {\n\t\t\"date\": 1654195782000\n\t},\n\t\"jassijs/server/RegistryIndexer.ts\": {\n\t\t\"date\": 1682793076438.2163\n\t},\n\t\"jassijs/server/Zip.ts\": {\n\t\t\"date\": 1622984046000\n\t},\n\t\"jassijs/UserModel.ts\": {\n\t\t\"date\": 1622984046000\n\t},\n\t\"jassijs/util/DatabaseSchema.ts\": {\n\t\t\"date\": 1611490792000\n\t},\n\t\"jassijs/remote/Validator.ts\": {\n\t\t\"date\": 1681322647267.7717\n\t},\n\t\"jassijs/remote/Server.ts\": {\n\t\t\"date\": 1682794608034.317,\n\t\t\"jassijs.remote.Server\": {\n\t\t\t\"@members\": {\n\t\t\t\t\"dir\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"zip\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"loadFiles\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"loadFile\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"saveFiles\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"saveFile\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"testServersideFile\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"removeServerModul\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"delete\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"rename\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"createFile\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"createFolder\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t},\n\t\t\t\t\"createModule\": {\n\t\t\t\t\t\"ValidateFunctionParameter\": []\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"jassijs/remote/Serverservice.ts\": {\n\t\t\"date\": 1682715263974.073\n\t},\n\t\"jassijs/index.d.ts\": {\n\t\t\"date\": 1681918735844.9463\n\t},\n\t\"jassijs/server/UpdatePackage.ts\": {\n\t\t\"date\": 1682701331180.3745\n\t},\n\t\"jassijs/remote/Config.ts\": {\n\t\t\"date\": 1682795184566.359\n\t},\n\t\"jassijs/server/NativeAdapter.ts\": {\n\t\t\"date\": 1682711333963.896\n\t},\n\t\"jassijs/server/FileTools.ts\": {\n\t\t\"date\": 1682792900059.5854\n\t},\n\t\"jassijs/server/Reloader.ts\": {\n\t\t\"date\": 1682793104106.3633\n\t},\n\t\"jassijs/server/DBManagerExt.ts\": {\n\t\t\"date\": 1682717755128.099\n\t},\n\t\"jassijs/server/TypeORMListener.ts\": {\n\t\t\"date\": 1682718172595.0825,\n\t\t\"jassijs.server.TypeORMListener\": {\n\t\t\t\"EventSubscriber\": []\n\t\t}\n\t},\n\t\"jassijs/server/DatabaseSchema.ts\": {\n\t\t\"date\": 1682241708158.535\n\t},\n\t\"jassijs/server/ext/EmpyDeclaration.ts\": {\n\t\t\"date\": 1682275347821.4524\n\t},\n\t\"jassijs/server/ext/jszip.ts\": {\n\t\t\"date\": 1657714030000\n\t},\n\t\"jassijs/server/Installserver.ts\": {\n\t\t\"date\": 1682613879220.7644\n\t},\n\t\"jassijs/server/LocalProtocol.ts\": {\n\t\t\"date\": 1682365334193.8733\n\t},\n\t\"jassijs/server/Testuser.ts\": {\n\t\t\"date\": 1655556794000,\n\t\t\"Testuser\": {\n\t\t\t\"$DBObject\": [],\n\t\t\t\"@members\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"PrimaryColumn\": []\n\t\t\t\t},\n\t\t\t\t\"firstname\": {\n\t\t\t\t\t\"Column\": []\n\t\t\t\t},\n\t\t\t\t\"lastname\": {\n\t\t\t\t\t\"Column\": []\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","\r\nimport registry from \"jassijs/remote/Registry\";\r\n\r\n\r\n@$Class(\"jassijs.remote.JassiError\")\r\nexport class JassiError extends Error{\r\n    constructor(msg:string){\r\n        super(msg);\r\n    }\r\n} \r\n\r\nfunction $Class(longclassname: string): Function {\r\n    return function (pclass) {\r\n        registry.register(\"$Class\", pclass, longclassname);\r\n    }\r\n}\r\n/**\r\n* manage all registered classes ->jassijs.register(\"classes\")\r\n* @class jassijs.base.Classes\r\n*/\r\n@$Class(\"jassijs.remote.Classes\")\r\nexport class Classes {\r\n    private _cache: { [service: string]: new (...args: any[]) => any };\r\n    private funcRegister;\r\n    constructor() {\r\n        this._cache = {};\r\n\r\n        this.funcRegister = registry.onregister(\"$Class\", this.register.bind(this));\r\n    }\r\n\r\n    destroy() {\r\n        registry.offregister(\"$Class\", this.funcRegister);\r\n    }\r\n    /**\r\n     * load the a class\r\n     * @param classname - the class to load\r\n     */\r\n\r\n    async loadClass(classname: string) {\r\n        var cl = await registry.getJSONData(\"$Class\", classname);\r\n        if (cl === undefined) {\r\n            try {\r\n                //@ts-ignore\r\n                if (require.main) {//nodes load project class from module\r\n                    //@ts-ignore \r\n                    await Promise.resolve().then(() => require.main.require(classname.replaceAll(\".\", \"/\")));\r\n                } else {\r\n                    await import(classname.replaceAll(\".\", \"/\"));\r\n                }\r\n            } catch (err) {\r\n                err = err;\r\n            }\r\n        } else {\r\n            if (cl === undefined || cl.length === 0) {\r\n                throw new JassiError(\"Class not found:\" + classname);\r\n            }\r\n \r\n            var file = cl[0].filename;\r\n            //@ts-ignore\r\n            if (window.document === undefined) {\r\n                var pack = file.split(\"/\"); \r\n                if (pack.length < 2 || pack[1] === \"server\") {\r\n                   // throw new JassiError(\"Server classes could not be loaded: \" + classname );\r\n                }\r\n            }\r\n            //@ts-ignore\r\n            if (require.main) { //nodes load project class from module\r\n                //@ts-ignore\r\n                var imp = await Promise.resolve().then(() => require.main.require(file.replace(\".ts\", \"\")));\r\n            } else {\r\n                var imp = await import(file.replace(\".ts\", \"\"));\r\n            }\r\n        }\r\n        return this.getClass(classname);\r\n    }\r\n    /**\r\n    * get the class of the given classname\r\n    * @param {string} - the classname\r\n    * @returns {class} - the class\r\n    */\r\n    getClass(classname: string) {\r\n        return this._cache[classname];\r\n        /* var ret=this.getPackage(classname);\r\n         \r\n         if(ret!==undefined&&ret.prototype!==undefined && ret.prototype.constructor === ret)\r\n             return ret;\r\n         else\r\n             return undefined; */\r\n    }\r\n    /**\r\n    * get the name of the given class\r\n    * @param {class} _class - the class (prototype)\r\n    * @returns {string} name of the class\r\n    */\r\n    getClassName(_class): string {\r\n        if (_class === undefined)\r\n            return undefined;\r\n        if (_class.constructor?._classname)\r\n            return _class.constructor?._classname;\r\n        if (_class.prototype?.constructor?._classname)\r\n            return _class.prototype?.constructor?._classname;\r\n        return undefined;\r\n    }\r\n\r\n    register(data: new (...args: any[]) => any, name: string) {\r\n        //data.prototype._classname=name;\r\n        this._cache[name] = data;\r\n    }\r\n    /*\r\n     register(name:string,data:new(...args: any[])=>any){\r\n \r\n         data.prototype._classname=name;\r\n         this._cache[name]=data;\r\n \r\n \r\n     }*/\r\n};\r\n\r\nlet classes = new Classes();\r\nexport { classes };\r\n\r\nexport async function test(t){\r\n    var cl=classes.getClass(\"jassijs.ui.Button\");\r\n    t.expectEqual(cl===await classes.loadClass(\"jassijs.ui.Button\"));\r\n    t.expectEqual(classes.getClassName(cl)===\"jassijs.ui.Button\");\r\n}","import { $Class } from \"jassijs/remote/Registry\";;\r\n\r\n@$Class(\"jassijs.remote.FileNode\")\r\nexport class FileNode {\r\n    name: string;\r\n    fullpath?: string;\r\n    parent?: FileNode;\r\n    files?: FileNode[];\r\n    date?: any;\r\n    flag?: string;\r\n    constructor(fullpath: string = undefined) {\r\n        if (fullpath) {\r\n            this.fullpath = fullpath;\r\n            this.name = fullpath.split(\"/\")[fullpath.split(\"/\").length - 1];\r\n        }\r\n    }\r\n    isDirectory?() {\r\n        return this.files !== undefined;\r\n    }\r\n    resolveChilds?(all?: { [path: string]: FileNode }): { [path: string]: FileNode } {\r\n        if (all === undefined)\r\n            all = {};\r\n        //var ret:FileNode[]=[];\r\n\r\n        if (this.files !== undefined) {\r\n            for (let x = 0; x < this.files.length; x++) {\r\n                all[this.files[x].fullpath] = this.files[x];\r\n                this.files[x].resolveChilds(all);\r\n            }\r\n        }\r\n        return all;\r\n    }\r\n}","//@ts-ignore\r\n\r\nimport \"jassijs/remote/Classes\";\r\nimport { classes } from \"jassijs/remote/Classes\";\r\nimport registry from \"jassijs/remote/Registry\";\r\n\r\nexport class ServerserviceProperties {\r\n    name: string;\r\n    getInstance:(()=>Promise<any>) \r\n}\r\nvar runningServerservices = {};\r\nvar beforeServiceLoadHandler=[];\r\nexport function beforeServiceLoad(func:(name:string,props:ServerserviceProperties)=>void){\r\n    beforeServiceLoadHandler.push(func);\r\n}\r\ndeclare global{ \r\n    interface Serverservice{\r\n\r\n    }\r\n}\r\n\r\nvar serverservices: Serverservice = <any>new Proxy(runningServerservices, {\r\n    get(target, prop, receiver) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var khsdf=runningServerservices;\r\n            if (target[prop]) { \r\n                resolve(target[prop]); \r\n            } else {\r\n                var all = await registry.getJSONData(\"$Serverservice\");\r\n                for (var x = 0; x < all.length; x++) { \r\n                    var serv = all[x];\r\n                    var name = serv.params[0].name;\r\n                    if (name === prop) { \r\n                        var classname = serv.classname;\r\n                        var cl = await registry.getJSONData(\"$Class\", classname);\r\n                        //@ts-ignore\r\n                        if (require.main) {//nodes load project class from module\r\n                            /*for (var jfile in require.cache) {\r\n                                if(jfile.replaceAll(\"\\\\\",\"/\").endsWith(serv.filename.substring(0,serv.filename.length-2)+\"js\")){\r\n                                    delete require.cache[jfile];\r\n                                }\r\n                            }*/\r\n                            //@ts-ignore\r\n                            await Promise.resolve().then(() => require.main.require(classname.replaceAll(\".\", \"/\")));\r\n                        } else {\r\n                            await classes.loadClass(classname); //await import(classname.replaceAll(\".\", \"/\"));\r\n                        } \r\n                        var props:ServerserviceProperties=registry.getData(\"$Serverservice\",classname)[0].params[0];\r\n                        for(var x=0;x<beforeServiceLoadHandler.length;x++){\r\n                            await beforeServiceLoadHandler[x](<string>prop,props);\r\n                        }\r\n                        var instance= props.getInstance();\r\n                       \r\n                        target[prop]=instance;\r\n                        resolve(instance);  \r\n                        return;\r\n                           \r\n                    }\r\n                    \r\n                }\r\n            }\r\n\r\n            reject(\"serverservice not found:\" + <string>prop);\r\n        });\r\n    }\r\n});  \r\n\r\nexport function $Serverservice(properties: ServerserviceProperties): Function {\r\n    return function (pclass) {\r\n        registry.register(\"$Serverservice\", pclass, properties);\r\n    }\r\n}\r\n \r\n\r\nvar doNotReloadModule=true;\r\nexport { serverservices,doNotReloadModule,runningServerservices};\r\n\r\n\r\n","//synchronize-server-client\r\nimport { JassiError } from \"jassijs/remote/Classes\";\r\nimport { config } from \"jassijs/remote/Config\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\nimport { ts } from 'jassijs/server/NativeAdapter';\r\n\r\n\r\nexport abstract class Indexer {\r\n\r\n    abstract fileExists(name);\r\n    abstract readFile(name);\r\n    abstract getFileTime(name);\r\n    abstract createDirectory(name);\r\n    abstract writeFile(name: string, content: string);\r\n    abstract dirFiles(modul: string, path: string, extensions: string[], ignore: string[]): Promise<string[]>;\r\n\r\n    public async updateModul(root, modul: string, isserver: boolean) {\r\n        var path = root + (root === \"\" ? \"\" : \"/\") + modul;\r\n        //create empty if needed\r\n        var text = \"{}\";\r\n        if (await this.fileExists(path + \"/registry.js\")) {\r\n            text = await this.readFile(path + \"/registry.js\");\r\n \r\n            if (!isserver) {\r\n                text = text.substring(text.indexOf(\"default:\") + 8);\r\n                text = text.substring(0, text.lastIndexOf(\"}\") - 1);\r\n                text = text.substring(0, text.lastIndexOf(\"}\") - 1);\r\n            } else {\r\n                text = text.substring(text.indexOf(\"default=\") + 8);\r\n            }\r\n        }\r\n        try {\r\n            var index = JSON.parse(text);\r\n        } catch { \r\n            console.log(\"error read modul \" + modul + \"- create new\");\r\n            index = {};\r\n        }\r\n\r\n        //remove deleted files\r\n        for (var key in index) {\r\n            if (!(await this.fileExists(root + (root === \"\" ? \"\" : \"/\") + key))) {\r\n                delete index[key];\r\n            }\r\n        }\r\n\r\n        var jsFiles: string[] = await this.dirFiles(modul, path, [\".ts\"], [\"node_modules\"])\r\n        for (let x = 0; x < jsFiles.length; x++) {\r\n            var jsFile = jsFiles[x];\r\n            var fileName = jsFile.substring((root.length + (root === \"\" ? 0 : 1)));\r\n            if (fileName === undefined)\r\n                continue;\r\n            var entry = index[fileName];\r\n            if (entry === undefined) {\r\n                entry = {};\r\n                entry.date = undefined;\r\n                index[fileName] = entry;\r\n            }\r\n            if (await this.fileExists(root + (root === \"\" ? \"\" : \"/\") + fileName)) {\r\n\r\n                var dat = await this.getFileTime(root + (root === \"\" ? \"\" : \"/\") + fileName)\r\n                if (dat !== entry.date) {\r\n                    var text = <string>await this.readFile(root + (root === \"\" ? \"\" : \"/\") + fileName);\r\n                    var sourceFile = ts.createSourceFile('hallo.ts', text, ts.ScriptTarget.ES5, true);\r\n                    var outDecorations = [];\r\n                    entry = {};\r\n                    entry.date = undefined;\r\n                    index[fileName] = entry;\r\n                    this.collectAnnotations(sourceFile, entry);\r\n                    // findex(Filesystem.path + \"/\" + jsFile);\r\n                    entry.date = dat;\r\n                }\r\n            }\r\n        }\r\n        if (!isserver) {//write client\r\n\r\n            var text = JSON.stringify(index, undefined, \"\\t\");\r\n            text = \"//this file is autogenerated don't modify\\n\" +\r\n                'define(\"' + modul + '/registry\",[\"require\"], function(require) {\\n' +\r\n                ' return {\\n' +\r\n                '  default: ' + text + \"\\n\" +\r\n                ' }\\n' +\r\n                '});';\r\n            var jsdir = \"js/\" + path;\r\n            var fpath=(await (serverservices.filesystem)).path;\r\n            if (fpath !== undefined)\r\n                jsdir = path.replace(fpath, fpath + \"/js\");\r\n            if (!(await this.fileExists(jsdir)))\r\n                await this.createDirectory(jsdir);\r\n            await this.writeFile(jsdir + \"/registry.js\", text);\r\n            await this.writeFile(path + \"/registry.js\", text);\r\n        } else { //write server\r\n            var modules = config.server.modules;\r\n            for (let smodul in modules) {\r\n                if (modul === smodul) {\r\n                    var text = JSON.stringify(index, undefined, \"\\t\");\r\n                    if (text !== \"{}\") { \r\n                        text = '\"use strict:\"\\n' +\r\n                            \"//this file is autogenerated don't modify\\n\" +\r\n                            'Object.defineProperty(exports, \"__esModule\", { value: true });\\n' +\r\n                            'exports.default=' + text;\r\n                        var jsdir = \"js/\" + modul;\r\n                        if (!(await this.fileExists(jsdir)))\r\n                            await this.createDirectory(jsdir);\r\n                        await this.writeFile(jsdir + \"/registry.js\", text);\r\n                        await this.writeFile(modul + \"/registry.js\", text);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    convertArgument(arg: any) {\r\n        if (arg === undefined)\r\n            return undefined;\r\n        if (arg.kind === ts.SyntaxKind.ObjectLiteralExpression) {\r\n            var ret = {};\r\n            var props = arg.properties;\r\n            if (props !== undefined) {\r\n                for (var p = 0; p < props.length; p++) {\r\n                    ret[props[p].name.text] = this.convertArgument(props[p].initializer);\r\n                }\r\n            }\r\n            return ret;\r\n        } else if (arg.kind === ts.SyntaxKind.StringLiteral) {\r\n            return arg.text;\r\n        } else if (arg.kind === ts.SyntaxKind.ArrayLiteralExpression) {\r\n            let ret = [];\r\n            for (var p = 0; p < arg.elements.length; p++) {\r\n                ret.push(this.convertArgument(arg.elements[p]));\r\n            }\r\n            return ret;\r\n        } else if (arg.kind === ts.SyntaxKind.Identifier) {\r\n            return arg.text;\r\n        } else if (arg.kind === ts.SyntaxKind.TrueKeyword) {\r\n            return true;\r\n        } else if (arg.kind === ts.SyntaxKind.FalseKeyword) {\r\n            return false;\r\n        } else if (arg.kind === ts.SyntaxKind.NumericLiteral) {\r\n            return Number(arg.text);\r\n        } else if (arg.kind === ts.SyntaxKind.ArrowFunction || arg.kind === ts.SyntaxKind.FunctionExpression) {\r\n            return \"function\";\r\n        }\r\n\r\n        throw new JassiError(\"Error typ not found\");\r\n    }\r\n    collectAnnotations(node: ts.Node, outDecorations, depth = 0) {\r\n        //console.log(new Array(depth + 1).join('----'), node.kind, node.pos, node.end);\r\n        if (node.kind === ts.SyntaxKind.ClassDeclaration) {\r\n            if (node.decorators !== undefined) {\r\n                var dec = {};\r\n                var sclass = undefined;\r\n                for (let x = 0; x < node.decorators.length; x++) {\r\n                    var decnode = node.decorators[x];\r\n                    var ex: any = decnode.expression;\r\n                    if (ex.expression === undefined) {\r\n                        dec[ex.text] = [];//Annotation without parameter\r\n                    } else {\r\n                        if (ex.expression.text === \"$Class\")\r\n                            sclass = this.convertArgument(ex.arguments[0]);\r\n                        else {\r\n                            if (dec[ex.expression.text] === undefined) {\r\n                                dec[ex.expression.text] = [];\r\n                            }\r\n                            for (var a = 0; a < ex.arguments.length; a++) {\r\n                                dec[ex.expression.text].push(this.convertArgument(ex.arguments[a]));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (sclass !== undefined)\r\n                    outDecorations[sclass] = dec;\r\n                //@members.value.$Property=[{name:string}]\r\n                for (let x = 0; x < node[\"members\"].length; x++) {\r\n                    var member = node[\"members\"][x];\r\n                    var membername = node[\"members\"][x].name?.escapedText;\r\n                    if (member.decorators !== undefined) {\r\n                        if (!dec[\"@members\"])\r\n                            dec[\"@members\"] = {}\r\n\r\n                        var decm = {};\r\n                        dec[\"@members\"][membername] = decm;\r\n                        for (let x = 0; x < member.decorators.length; x++) {\r\n                            var decnode = member.decorators[x];\r\n                            var ex: any = decnode.expression;\r\n\r\n                            if (ex.expression === undefined) {\r\n                                decm[ex.text] = [];//Annotation without parameter\r\n                            } else {\r\n                                if (ex.expression.text === \"$Property\") {\r\n                                    //do nothing;\r\n                                }else{\r\n                                    if (decm[ex.expression.text] === undefined) {\r\n                                        decm[ex.expression.text] = [];\r\n                                    }\r\n                                    for (var a = 0; a < ex.arguments.length; a++) {\r\n                                        decm[ex.expression.text].push(this.convertArgument(ex.arguments[a]));\r\n                                    }\r\n                                } \r\n                            }\r\n                        }  \r\n                        if(Object.keys(dec[\"@members\"][membername]).length===0){\r\n                            delete dec[\"@members\"][membername];\r\n                        }\r\n                    }\r\n                    \r\n\r\n                }\r\n\r\n            }\r\n        }\r\n        depth++;\r\n        node.getChildren().forEach(c => this.collectAnnotations(c, outDecorations, depth));\r\n    }\r\n    /*findex(file: string) {\r\n        var text = fs.readFileSync(file).toString();\r\n        var sourceFile = ts.createSourceFile('hallo.ts', text, ts.ScriptTarget.ES5, true);\r\n        var outDecorations = [];\r\n        this.collectAnnotations(sourceFile, outDecorations);\r\n        var h = 9;\r\n    }*/\r\n}\r\n","//synchronize-server-client\r\nimport { Indexer } from \"jassijs/server/Indexer\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\nimport { exists, myfs } from \"jassijs/server//NativeAdapter\";\r\nimport { config } from \"jassijs/remote/Config\";\r\n\r\n\r\nexport class ServerIndexer extends Indexer {\r\n    public async updateRegistry() {\r\n        //client modules\r\n        var path = (await serverservices.filesystem).path\r\n        var modules = config.modules;\r\n        for (var m in modules) {\r\n            if ((await exists(path + \"/\" + modules[m]) && !modules[m].endsWith(\".js\") && modules[m].indexOf(\".js?\")) === -1) //.js are internet modules\r\n                await this.updateModul(path, m, false);\r\n        }\r\n        //server modules\r\n        modules = config.server.modules;\r\n        for (var m in modules) {\r\n            if (await exists(\"./\" + modules[m]) && !modules[m].endsWith(\".js\")) //.js are internet modules\r\n                await this.updateModul(\".\", m, true);\r\n        }\r\n        return;\r\n    }\r\n    async dirFiles(modul: string, path: string, extensions: string[], ignore: string[] = []): Promise<string[]> {\r\n       \r\n        var jsFiles: string[] = await (await serverservices.filesystem).dirFiles(path, extensions, ignore);\r\n        return jsFiles;\r\n    }\r\n    async writeFile(name: string, content: string) {\r\n        if (!name.startsWith(\"./\"))\r\n            name = \"./\"+name ;\r\n        await myfs.writeFile(name, content);\r\n    }\r\n    async createDirectory(name: string) {\r\n        if (!name.startsWith(\"./\"))\r\n        name = \"./\"+name ;\r\n        await myfs.mkdir(name, { recursive: true });\r\n        return;\r\n    }\r\n    async getFileTime(filename): Promise<number> {\r\n        if (!filename.startsWith(\"./\"))\r\n        filename = \"./\"+filename ;\r\n        var stats = await myfs.stat(filename);\r\n        return stats.mtimeMs;\r\n    }\r\n    async fileExists(filename): Promise<boolean> {\r\n        if (!filename.startsWith(\"./\"))\r\n        filename = \"./\"+filename ;\r\n        return await exists(filename);\r\n    }\r\n    async readFile(filename): Promise<any> {\r\n        if (!filename.startsWith(\"./\"))\r\n        filename = \"./\"+filename ;\r\n        return myfs.readFile(filename, 'utf-8');\r\n    }\r\n}","//synchronize-server-client\r\nimport { FileNode } from 'jassijs/remote/FileNode';\r\n\r\nimport { ServerIndexer } from './RegistryIndexer';\r\nimport registry, { $Class } from 'jassijs/remote/Registry';\r\nimport { $Serverservice, runningServerservices, serverservices } from '../remote/Serverservice';\r\nimport { dozip, myfs, exists, reloadJSAll, transpile } from './NativeAdapter';\r\nimport { config } from 'jassijs/remote/Config';\r\n\r\n\r\nvar ignore = [\"phpMyAdmin\", \"lib\", \"tmp\", \"_node_modules\"]\r\ndeclare global {\r\n    interface Serverservice {\r\n        filesystem: Promise<Filesystem>;\r\n    }\r\n}\r\n@$Serverservice({ name: \"filesystem\", getInstance: async () => { return new Filesystem() } })\r\n@$Class(\"jassijs.server.Filesystem\")\r\nexport default class Filesystem {\r\n    static allModules: { [name: string]: any[] } = {};\r\n    public path = \"./client\";\r\n    _pathForFile(fileName: string, fromServerdirectory: boolean = undefined) {\r\n        if (fileName.startsWith(\"/\"))\r\n            fileName = fileName.substring(1);\r\n        var path = this.path + \"/\" + fileName;\r\n        if (fromServerdirectory)\r\n            path = \"./\" + fileName.replace(\"$serverside/\", \"\");\r\n        return path;\r\n    }\r\n    /*   _getDirectory(file:string,main:FileNode[]):FileNode[]{\r\n           var paths:string[]=file.split(\"/\");\r\n           var parent=main;\r\n           for(let p=0;p<paths.length-1;p++){\r\n               for(let x=0;x<parent.length;x++){\r\n                   if(parent[x].name===paths[p]){\r\n                       parent=parent[x].files;\r\n                       continue;\r\n                   }\r\n               }\r\n           }\r\n           return parent;\r\n       }*/\r\n    async dir(curdir = \"\", appendDate = false, parentPath = this.path, parent: FileNode = undefined): Promise<FileNode> {\r\n        try {\r\n\r\n            var _this = this;\r\n            var modules = config.server.modules;\r\n            if (parent === undefined) {\r\n                parent = { name: \"\", files: [] };\r\n            }\r\n            //var parent:FileNode[]=_this._getDirectory(file,results);\r\n\r\n            var list: string[] = await myfs.readdir(parentPath + (curdir === \"\" ? \"\" : (\"/\" + curdir)));\r\n            for (var xx = 0; xx < list.length; xx++) {\r\n                var filename = list[xx];\r\n                var file = curdir + (curdir === \"\" ? \"\" : '/') + filename;\r\n                if (file !== \"js\" && file !== \"tmp\") {//compiled js\r\n\r\n                    var stat = await myfs.stat(parentPath + \"/\" + file);\r\n                    if (stat && stat.isDirectory()) {\r\n                        var newDir = { name: filename, files: [] };\r\n                        parent.files.push(newDir)\r\n                        /* Recurse into a subdirectory */\r\n                        if (ignore.indexOf(file) === -1)\r\n                            await _this.dir(file, appendDate, parentPath, newDir);\r\n                    } else {\r\n                        let dat = \"\";\r\n                        let toAdd: FileNode = { name: filename };\r\n                        if (appendDate === true)\r\n                            toAdd.date = (await myfs.stat(parentPath + \"/\" + file)).mtimeMs.toString();\r\n                        // if (file.toLowerCase().endsWith(\".ts\"))\r\n                        parent.files.push(toAdd);\r\n                        /* if (file.toLowerCase().endsWith(\".js\")) {\r\n                             if (!await exists(file.replace(\".js\", \".ts\"))) {\r\n                                 parent.files.push(toAdd);\r\n                             }\r\n                         }\r\n                         if (file.toLowerCase().endsWith(\".json\"))\r\n                             parent.files.push(toAdd);*/\r\n                    }\r\n                }\r\n            };\r\n            //add files in node modules\r\n            if (parent.name === \"\" && parentPath === \"./client\") {\r\n                for (var key in modules) {\r\n                    if (await exists(\"./node_modules/\" + key + \"/client\")) {\r\n                        var addFiles = await this.dir(\"client\", appendDate, \"./node_modules/\" + key);\r\n                        var temp = {};\r\n                        for (var x = 0; x < parent.files.length; x++) {\r\n                            var entr = parent.files[x];\r\n                            temp[entr.name] = entr;\r\n                        }\r\n                        for (var x = 0; x < addFiles.files.length; x++) {\r\n                            if (temp[addFiles.files[x].name] === undefined) {\r\n                                parent.files.push(addFiles.files[x]);\r\n                                //addFiles.files[x].isNode_module=true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return parent;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n    public async loadFile(fileName: string) {\r\n        var fromServerdirectory = fileName.startsWith(\"$serverside/\");\r\n        let file = this._pathForFile(fileName, fromServerdirectory);\r\n        return await myfs.readFile(file, 'utf-8');\r\n\r\n    }\r\n    public async loadFiles(fileNames: string[]) {\r\n        var ret = {};\r\n\r\n        for (var x = 0; x < fileNames.length; x++) {\r\n\r\n            ret[fileNames[x]] = await myfs.readFile(this._pathForFile(fileNames[x]), 'utf-8');\r\n            /* await myfs.readFile(path+\"/\"+fileName, {encoding: 'utf-8'}, function(err,data){\r\n                if (!err) {\r\n                    response.send( data);\r\n              //    response.writeHead(200, {'Content-Type': 'text/html'});\r\n                //  response.write(data);\r\n                }else{\r\n                  return response.send(err);\r\n                }\r\n              });*/\r\n        }\r\n        return ret;\r\n        //  return ret;\r\n    }\r\n    public async dirFiles(dir: string, extensions: string[], ignore: string[] = []): Promise<string[]> {\r\n        var results = [];\r\n        if (!await exists(dir))\r\n            return results;\r\n        var list = await myfs.readdir(dir);\r\n        var _this = this;\r\n        for (let l = 0; l < list.length; l++) {\r\n            let file = list[l];\r\n            if (ignore.indexOf(file) !== -1)\r\n                continue;\r\n            file = dir + '/' + file;\r\n\r\n            var stat = await myfs.stat(file);\r\n            if (stat && stat.isDirectory()) {\r\n                /* Recurse into a subdirectory */\r\n                var arr = await _this.dirFiles(file, extensions);\r\n                results = results.concat(arr);\r\n            } else {\r\n                /* Is a file */\r\n                for (var x = 0; x < extensions.length; x++) {\r\n                    if (file.toLowerCase().endsWith(extensions[x]) && results.indexOf(file) === -1) {\r\n                        results.push(file);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return results;\r\n    }\r\n\r\n\r\n\r\n    public async zip(directoryname: string, serverdir: boolean = undefined): Promise<string> {\r\n        return await dozip(directoryname, serverdir);\r\n    }\r\n    //Reset ORM config\r\n    /**\r\n     * create a folder\r\n     * @param foldername - the name of the new file \r\n     */\r\n    public async createFolder(foldername: string): Promise<string> {\r\n        var newpath = this._pathForFile(foldername);\r\n        if (await exists(newpath))\r\n            return foldername + \" allready await exists\";\r\n        try {\r\n            await myfs.mkdir(newpath, { recursive: true })\r\n        } catch (ex) {\r\n            return ex.message;\r\n        }\r\n        return \"\";\r\n    }\r\n    /**\r\n     * create a module\r\n     * @param modulname - the name of the module\r\n  \r\n     */\r\n    public async createModule(modulename: string): Promise<string> {\r\n        var newpath = this._pathForFile(modulename);\r\n        try {\r\n            //create folder\r\n            if (!await exists(newpath))\r\n                await myfs.mkdir(newpath, { recursive: true });\r\n            //create remotefolder\r\n            //if (!await exists(newpath + \"/remote\"))\r\n            //    await myfs.mkdir(newpath + \"/remote\", { recursive: true });\r\n            if (!await exists(newpath + \"/modul.ts\")) {\r\n                await this.saveFiles([modulename + \"/modul.js\", \"js/\" + modulename + \"/modul.js\"], [\r\n                    \"export default {}\",\r\n                    'define([\"require\", \"exports\"], function (require, exports) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = {};});'\r\n                ]);\r\n            }\r\n\r\n            if (!await exists(newpath + \"/registry.js\")) {\r\n                await this.saveFiles([modulename + \"/registry.js\", \"js/\" + modulename + \"/registry.js\"], [\r\n                    'define(\"' + modulename + '/registry\",[\"require\"], function(require) {return {  default: {\t} } } );',\r\n                    'define(\"' + modulename + '/registry\",[\"require\"], function(require) {return {  default: {\t} } } );',\r\n                ]);\r\n            }\r\n            /* if (!await exists(\"./\" + modulename))\r\n                 await myfs.mkdir(\"./\" + modulename, { recursive: true });\r\n             if (!await exists(\"./js/\" + modulename))\r\n                 await myfs.mkdir(\"./js/\" + modulename, { recursive: true });\r\n             if (!await exists(\"./\" + modulename + \"/remote\"))\r\n                 await myfs.mkdir(\"./\" + modulename + \"/remote\", { recursive: true });\r\n             if (!await exists(\"./\" + modulename + \"/registry.js\")) {\r\n                 await myfs.writeFile(\"./\" + modulename + \"/registry.js\", 'Object.defineProperty(exports, \"__esModule\", { value: true });exports.default={}');\r\n                 await myfs.writeFile(\"./js/\" + modulename + \"/registry.js\", 'Object.defineProperty(exports, \"__esModule\", { value: true });exports.default={}');\r\n \r\n             }*/\r\n\r\n\r\n            //update client jassijs.json\r\n            if (!config.modules[modulename])\r\n                config.jsonData.modules[modulename] = modulename;\r\n            await config.saveJSON();\r\n            //this.createRemoteModulIfNeeded(modulename);\r\n\r\n\r\n        } catch (ex) {\r\n            return ex.message;\r\n        }\r\n        return \"\";\r\n\r\n    }\r\n    /**\r\n     * create a file\r\n     * @param filename - the name of the new file \r\n     * @param content - then content\r\n     */\r\n    public async createFile(filename: string, content: string): Promise<string> {\r\n        var newpath = this._pathForFile(filename);\r\n        var parent = this.getDirectoryname(newpath);\r\n\r\n        if (await exists(newpath))\r\n            return filename + \" allready await exists\";\r\n        try {\r\n            if (!await exists(parent))\r\n                await myfs.mkdir(parent, { recursive: true });\r\n\r\n            await myfs.writeFile(newpath, content)\r\n        } catch (ex) {\r\n            return ex.message;\r\n        }\r\n        return \"\";\r\n    }\r\n    /**\r\n     * renames a file or directory\r\n     * @param oldfile - old filename\r\n     * @param newfile - new filename\r\n     */\r\n    public async rename(oldfile: string, newfile: string): Promise<string> {\r\n        var oldpath = this._pathForFile(oldfile);\r\n        var newpath = this._pathForFile(newfile);\r\n        if (!await exists(oldpath))\r\n            return oldfile + \" not await exists\";\r\n        if (await exists(newpath))\r\n            return newfile + \" already await exists\";\r\n        try {\r\n            /*  if(fs.lstatSync(oldpath).isDirectory()\r\n                 await myfs.rmdir((oldpath, newpath);\r\n              else*/\r\n            await myfs.rename(oldpath, newpath);\r\n        } catch (ex) {\r\n            return ex.message;\r\n        }\r\n        await new ServerIndexer().updateRegistry();\r\n        return \"\";\r\n    }\r\n    /**\r\n    * deletes a server module\r\n    * @param modul - to delete\r\n    */\r\n    public async removeServerModul(modul: string): Promise<string> {\r\n        delete config.jsonData.server.modules[modul];\r\n        await config.saveJSON();\r\n        if (await exists(modul)) {\r\n            await myfs.rmdir(modul, { recursive: true });\r\n        }\r\n        return \"\";\r\n    }\r\n    /**\r\n    * deletes a file or directory \r\n    * @param file - old filename\r\n    */\r\n    public async remove(file: string): Promise<string> {\r\n        var path = this._pathForFile(file);\r\n        if (!await exists(path))\r\n            return file + \" not await exists\";\r\n        try {\r\n            if ((await myfs.stat(path)).isDirectory()) {\r\n\r\n                //update client jassijs.json if removing client module \r\n                if (config.modules[file]) {\r\n                    delete config.jsonData.modules[file];\r\n                    await config.saveJSON();\r\n                }\r\n                await myfs.rmdir(path, { recursive: true });\r\n            } else\r\n                await myfs.unlink(path);\r\n        } catch (ex) {\r\n            return ex.message;\r\n        }\r\n        await new ServerIndexer().updateRegistry();\r\n        return \"\";\r\n    }\r\n    /**\r\n     * create modul in ./jassijs.json\r\n     * @param modul \r\n     */\r\n    async createRemoteModulIfNeeded(modul: string) {\r\n        if (!config.jsonData.server.modules[modul]) {\r\n            config.jsonData.server.modules[modul] = modul;\r\n            await config.saveJSON();\r\n        }\r\n    }\r\n    getDirectoryname(ppath) {\r\n        var path = ppath.replaceAll(\"\\\\\", \"/\");\r\n        return path.substring(0, path.lastIndexOf(\"/\"));\r\n    }\r\n    /**\r\n     * save files + \r\n     * transpile remote files and \r\n     * reload the remote files in server if needed \r\n     * update db schema\r\n     * the changes would be reverted if there are errors\r\n     * @param fileNames \r\n     * @param contents \r\n     * @returns \"\" or the error\r\n     */\r\n    public async saveFiles(fileNames: string[], contents: string[], rollbackonerror: boolean = true): Promise<string> {\r\n        var ret: string = \"\";\r\n        var rollbackcontents: string[] = [];\r\n        var modules = config.server.modules;\r\n        var remoteFiles: string[] = [];\r\n        for (var x = 0; x < fileNames.length; x++) {\r\n            let fileName = fileNames[x];\r\n            var fromServerdirectory = fileName.startsWith(\"$serverside/\");\r\n            var path = this.getDirectoryname(this._pathForFile(fileName, fromServerdirectory));// require('path').dirname(this._pathForFile(fileName,fromServerdirectory));\r\n            //check if file is node_module\r\n            for (var key in modules) {\r\n                if (((path + \"/\").startsWith(\"./client/\" + key + \"/\")) && await exists(\"./node_modules/\" + key)) {\r\n                    return \"packages in node_modules could not be saved\";\r\n                }\r\n            }\r\n\r\n            try {\r\n\r\n                await myfs.mkdir(path, { recursive: true });\r\n            } catch (err) {\r\n\r\n            }\r\n            if (await exists(this._pathForFile(fileName, fromServerdirectory))) {\r\n                rollbackcontents.push(await myfs.readFile(this._pathForFile(fileName, fromServerdirectory), 'utf-8'));\r\n            } else {\r\n                rollbackcontents.push(undefined);//this file would be killed at revert\r\n            }\r\n            if (contents[x] === undefined)\r\n                await myfs.unlink(this._pathForFile(fileName, fromServerdirectory));//remove file on revert\r\n            else {\r\n                await myfs.writeFile(this._pathForFile(fileName, fromServerdirectory), contents[x]);\r\n                //transpile remoteCode for Server\r\n                let spath = fileName.split(\"/\");\r\n                if ((fromServerdirectory || (spath.length > 1 && spath[1].toLowerCase() === \"remote\")) && fileName.toLowerCase().endsWith(\".ts\")) {\r\n                    var fneu = fileName.replace(\"$serverside/\", \"\");\r\n                    let rpath = this.getDirectoryname(\"./\" + fneu);\r\n                    try {\r\n                        await myfs.mkdir(rpath, { recursive: true });\r\n                    } catch (err) {\r\n                    }\r\n                    await myfs.writeFile(\"./\" + fneu, contents[x]);\r\n                    if (spath.length > 1 && spath[0] !== \"$serverside\")\r\n                        await this.createRemoteModulIfNeeded(spath[0]);\r\n                    transpile(fneu, fromServerdirectory);\r\n                }\r\n            }\r\n        }\r\n        await new ServerIndexer().updateRegistry();\r\n        var remotecodeincluded = false;\r\n        for (var f = 0; f < fileNames.length; f++) {\r\n            var fileName = fileNames[f];\r\n            if (contents[f] === undefined)\r\n                continue;\r\n            var spath = fileName.split(\"/\");\r\n            var fromServerdirectory = fileName.startsWith(\"$serverside/\");\r\n            \r\n            if (fromServerdirectory || (spath.length > 1 && spath[1].toLowerCase() === \"remote\") && fileName.toLowerCase().endsWith(\".ts\")) {\r\n                var remotecodeincluded = true;\r\n                remoteFiles.push(fileName.substring(0, fileName.length - 3));\r\n\r\n                // }\r\n            }\r\n\r\n\r\n        };\r\n\r\n        try {\r\n            if (remotecodeincluded) {\r\n                await reloadJSAll(remoteFiles, async () => {\r\n                    if (runningServerservices[\"db\"]) {\r\n                        (await serverservices.db).renewConnection();\r\n                    }\r\n                });\r\n            }\r\n        } catch (err) {\r\n            var restore = await this.saveFiles(fileNames, rollbackcontents, false);\r\n            console.error(err.stack);\r\n            return err + \"DB corrupt changes are reverted \" + restore;\r\n        }\r\n        if (remotecodeincluded) {\r\n            await registry.reload();\r\n        }\r\n        if (remotecodeincluded && rollbackonerror) {//verify DB-Schema\r\n            try {\r\n                await serverservices.db;\r\n            } catch (err) {\r\n                var restore = await this.saveFiles(fileNames, rollbackcontents, false);\r\n                console.error(err.stack);\r\n                return err + \"DB corrupt changes are reverted \" + restore;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    public async saveFile(fileName: string, content: string) {\r\n        try {\r\n            var fdir = this.getDirectoryname(this._pathForFile(fileName));\r\n            // var fdir = path.substring(0,path.lastIndexOf(\"/\"));//fpath.dirname(path).split(fpath.sep).pop();\r\n            await myfs.mkdir(fdir, { recursive: true });\r\n        } catch (err) {\r\n\r\n        }\r\n        await myfs.writeFile(this.path + \"/\" + fileName, content)\r\n        /*\r\n        if(fileName.endsWith(\".ts\")){\r\n            new Compile().transpile(fileName,function(done){\r\n                var kk=Compile.lastModifiedTSFiles[0]; \r\n                if(Compile.lastModifiedTSFiles.indexOf(fileName)>-1){\r\n                    var pos=Compile.lastModifiedTSFiles.indexOf(fileName);\r\n                    Compile.lastModifiedTSFiles.splice(pos, 1);\r\n                }\r\n                response.send(done)\r\n                \r\n            });\r\n            return;\r\n             }*/\r\n        await new ServerIndexer().updateRegistry();\r\n        //TODO $this->updateRegistry();\r\n    }\r\n}\r\n","import { config } from \"jassijs/remote/Config\";\r\nimport Filesystem from \"jassijs/server/Filesystem\";\r\nimport { myfs } from \"jassijs/server/NativeAdapter\";\r\n\r\nexport class Reloader {\r\n\r\n    async reloadJSAll(filenames: string[], afterUnload: () => {}=undefined) {\r\n        //reload Modules\r\n\r\n        var modules = config.server.modules;\r\n        //var root = require.main[\"path\"]+\"\\\\\";  //not work on heroku\r\n        var root: string = new Filesystem().getDirectoryname(require.main.filename).replaceAll(\"\\\\\", \"/\");\r\n        root = root + (root.endsWith(\"/js\") ? \"/\" : \"/js/\");\r\n        // root = root.substring(0, root.length - \"jassijs/remote/Classes.js\".length);\r\n        var jfiles = [];\r\n        for (var modul in modules) {//undef all modules\r\n            for (var jfile in require.cache) {\r\n                if (jfile.indexOf(\"TestServerreport\") > -1)\r\n                    jfile = jfile;\r\n                if (jfile.replaceAll(\"\\\\\", \"/\").indexOf(\"/\" + modul + \"/remote/\") > -1)/* ||\r\n                     (fromServerdirectory && jfile.replaceAll(\"\\\\\", \"/\").replaceAll(\"$serverside/\", \"\").\r\n                         endsWith(\"/js/\" + fileName.replaceAll(\"$serverside/\", \"\").replace(\".ts\", \".js\"))))*/ {\r\n                    //save Modules\r\n\r\n                    var p = jfile.substring(root.length).replaceAll(\"\\\\\", \"/\");\r\n                    if (jfile.indexOf(\"node_modules\") > -1) {//jassi modules\r\n                        p = jfile.split(\"node_modules\")[1].substring(1).replaceAll(\"\\\\\", \"/\");;\r\n                    }\r\n                    p = p.substring(0, p.length - 3);\r\n                    //console.log(jfile+\"->\"+p);\r\n                    if (Filesystem.allModules[p] === undefined) {\r\n                        Filesystem.allModules[p] = [];\r\n                    }\r\n\r\n                    //save all modules\r\n                    var mod = await Promise.resolve().then(() => require.main.require(p));\r\n                    if (Filesystem.allModules[p].indexOf(mod) === -1)\r\n                        Filesystem.allModules[p].push(mod);\r\n\r\n                    jfiles.push(jfile);\r\n\r\n                }\r\n            }\r\n        }\r\n        for (let k = 0; k < jfiles.length; k++) {\r\n            let jfile = jfiles[k];\r\n            if (require.cache[jfile].exports.doNotReloadModule) {\r\n\r\n            } else\r\n                delete require.cache[jfile];\r\n        }\r\n        if(afterUnload!==undefined)\r\n            await afterUnload();\r\n        for (var key in Filesystem.allModules) {//load and migrate modules\r\n            var all = Filesystem.allModules[key];\r\n            var mod = await Promise.resolve().then(() => require.main.require(key));\r\n\r\n            for (var a = 0; a < all.length; a++) {\r\n\r\n                for (key in mod) {\r\n                    all[a][key] = mod[key];\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n}","//import ts = require('typescript');\r\n//import ts = require('typescript');\r\nimport * as ts from \"typescript\";\r\nimport fs = require('fs');\r\nimport { JassiError } from \"jassijs/remote/Classes\";\r\nimport Filesystem from \"jassijs/server/Filesystem\";\r\nvar rpath = require('path')\r\n\r\n//var chokidar = require('chokidar');\r\nvar path = \"./../public_html\";\r\nconst formatHost: ts.FormatDiagnosticsHost = {\r\n  getCanonicalFileName: path => path,\r\n  getCurrentDirectory: ts.sys.getCurrentDirectory,\r\n  getNewLine: () => ts.sys.newLine\r\n};\r\nvar events = require('events');\r\n/**\r\n * compile\r\n */\r\nexport class Compile {\r\n\r\n  public static lastModifiedTSFiles: string[] = [];\r\n  lastCompiledTSFiles: string[] = [];\r\n\r\n  private static clientWatcherIsRunning: boolean = false;\r\n  public static eventEmitter = new events.EventEmitter();\r\n  constructor() {\r\n\r\n  }\r\n  /*\r\n  test(response) {\r\n    const host: ts.ParseConfigFileHost = ts.sys as any;\r\n    // Fix after https://github.com/Microsoft/TypeScript/issues/18217\r\n    //host.onUnRecoverableConfigFileDiagnostic = printDiagnostic;\r\n    const parsedCmd = ts.getParsedCommandLineOfConfigFile(path + \"/tsconfig.json\", undefined, host);\r\n    const { options, fileNames } = parsedCmd;\r\n    var data = this.compile([path + \"/jassijs/base/Registry.ts\"], options);\r\n   \r\n    response.send(data);\r\n  }\r\n  compile(fileNames: string[], options: ts.CompilerOptions): string[] {\r\n    var ret = [];\r\n    let program = ts.createProgram(fileNames, options);\r\n    let emitResult = program.emit();\r\n\r\n    let allDiagnostics = ts\r\n      .getPreEmitDiagnostics(program)\r\n      .concat(emitResult.diagnostics);\r\n\r\n    allDiagnostics.forEach(diagnostic => {\r\n      if (diagnostic.file) {\r\n        let { line, character } = diagnostic.file.getLineAndCharacterOfPosition(\r\n          diagnostic.start!\r\n        );\r\n        let message = ts.flattenDiagnosticMessageText(\r\n          diagnostic.messageText,\r\n          \"\\n\"\r\n        );\r\n        ret.push(`${diagnostic.file.fileName} (${line + 1},${character + 1}): ${message}`);\r\n        // console.log(\r\n        // `${diagnostic.file.fileName} (${line + 1},${character + 1}): ${message}`\r\n        //);\r\n      } else {\r\n        ret.push(`${ts.flattenDiagnosticMessageText(diagnostic.messageText, \"\\n\")}`);\r\n        //        console.log(\r\n        //        `${ts.flattenDiagnosticMessageText(diagnostic.messageText, \"\\n\")}`\r\n        //    );\r\n      }\r\n    });\r\n\r\n    let exitCode = emitResult.emitSkipped ? 1 : 0;\r\n    ret.push(`Process exiting with code '${exitCode}'.`);\r\n    //console.log(`Process exiting with code '${exitCode}'.`);\r\n    //process.exit(exitCode);\r\n    return ret;\r\n  }\r\n\r\n  runWatcher() {\r\n    const configPath = ts.findConfigFile(\r\n      path + \"/\",\r\n      ts.sys.fileExists,\r\n      \"tsconfig.json\"\r\n    );\r\n    if (!configPath) {\r\n      throw new JassiError(\"Could not find a valid 'tsconfig.json'.\");\r\n    }\r\n    const createProgram = ts.createSemanticDiagnosticsBuilderProgram;\r\n    const host = ts.createWatchCompilerHost(\r\n      configPath,\r\n      {},\r\n      ts.sys,\r\n      createProgram,\r\n      this.reportDiagnostic.bind(this),\r\n      this.reportWatchStatusChanged.bind(this)\r\n    );\r\n\r\n    const origCreateProgram = host.createProgram;\r\n    host.createProgram = (\r\n      rootNames: ReadonlyArray<string>,\r\n      options,\r\n      host,\r\n      oldProgram\r\n    ) => {\r\n      console.log(\"** We're about to create the program! **\");\r\n      return origCreateProgram(rootNames, options, host, oldProgram);\r\n    };\r\n    const origPostProgramCreate = host.afterProgramCreate;\r\n    var test = host.trace;\r\n    //onWatchStatusChange\r\n    //readFile\r\n    //trace\r\n    host.trace = function (s: string) {\r\n      s = s;\r\n    }\r\n    host.afterProgramCreate = program => {\r\n      console.log(\"** We finished making the program! **\");\r\n      origPostProgramCreate!(program);\r\n    };\r\n\r\n    // `createWatchProgram` creates an initial program, watches files, and updates\r\n    // the program over time.\r\n    ts.createWatchProgram(host);\r\n  }\r\n  reportDiagnostic(diagnostic: ts.Diagnostic) {\r\n    console.error(\r\n      \"Error\",\r\n      diagnostic.code,\r\n      \":\",\r\n      ts.flattenDiagnosticMessageText(\r\n        diagnostic.messageText,\r\n        formatHost.getNewLine()\r\n      )\r\n    );\r\n  }\r\n  checkNewCompiledFiles(response) {\r\n    var ret = { date: 0, files: [] };\r\n    ret.files = this.lastCompiledTSFiles;\r\n    this.lastCompiledTSFiles = [];\r\n    response.send(JSON.stringify(ret));\r\n    //start the watcher to compile the client code\r\n    var _this = this;\r\n    if (Compile.clientWatcherIsRunning === false) {\r\n      Compile.clientWatcherIsRunning = true;\r\n      this.runWatcher();\r\n      var clientTsHasChanged = function (files, text) {\r\n        for (let f = 0; f < files.length; f++) {\r\n          _this.lastCompiledTSFiles.push(files[f].replace(\".ts\", \".js\").replace(\"\\\\\", \"/\"));\r\n        }\r\n        console.log(\"client changed\" + files + \" \" + text);\r\n      };\r\n      Compile.eventEmitter.addListener(\"compiled\", clientTsHasChanged);\r\n    }\r\n  }\r\n\r\n  reportWatchStatusChanged(diagnostic: ts.Diagnostic) {\r\n    let s = ts.formatDiagnostic(diagnostic, formatHost);\r\n    if (diagnostic.code === 6194) {\r\n      Compile.eventEmitter.emit('compiled', Compile.lastModifiedTSFiles, s);\r\n      Compile.lastModifiedTSFiles = [];\r\n      //console.info(Compile.lastModifiedTSFiles);\r\n    }\r\n    console.info(s);\r\n  }*/\r\n  async transpile(fileName: string,inServerdirectory:boolean=undefined) {\r\n    let spath = fileName.split(\"/\");\r\n    if (!inServerdirectory&&spath.length < 2 && spath[1] !== \"remote\") {\r\n      throw new JassiError(\"fileName must startswith remote\");\r\n    }\r\n    var path = \".\";   \r\n    var data = fs.readFileSync(path + \"/\" + fileName, { encoding: 'utf-8' });\r\n\r\n    var module = fileName.replace(\".ts\", \"\");\r\n    const host: ts.ParseConfigFileHost = ts.sys as any;\r\n\r\n    const parsedCmd = ts.getParsedCommandLineOfConfigFile(\"./tsconfig.json\", undefined, host);\r\n    const { options } = parsedCmd;\r\n    var outPath = \"js\";\r\n    var fdir = outPath + \"/\" + fileName;\r\n    fdir = fdir.substring(0, fdir.lastIndexOf(\"/\"));\r\n    fs.mkdirSync(fdir, { recursive: true });\r\n\r\n    var prefix = \"\";\r\n    for (let x = 0; x < fileName.split(\"/\").length; x++) {\r\n      prefix = \"../\" + prefix;\r\n    }\r\n    var content = ts.transpileModule(data, {\r\n      compilerOptions: options,\r\n      fileName: prefix + fileName\r\n    });\r\n    var pathname = rpath.dirname(fileName);\r\n    if (!fs.existsSync(pathname)) {\r\n      fs.mkdirSync(pathname, { recursive: true });\r\n    }\r\n    if(!inServerdirectory)\r\n      fs.copyFileSync(new Filesystem().path +\"/\"+ fileName, fileName);\r\n    fs.writeFileSync(outPath + \"/\" + fileName.replace(\".ts\", \".js\"), content.outputText);\r\n    fs.writeFileSync(outPath + \"/\" + fileName.replace(\".ts\", \".js.map\"), content.sourceMapText);\r\n    \r\n  }\r\n}","import fs = require('fs');\r\nimport myfs=fs.promises;\r\nimport ts = require(\"typescript\");\r\n\r\nimport JSZip = require(\"jszip\");\r\nimport { JassiError } from 'jassijs/remote/Classes';\r\nimport Filesystem from './Filesystem';\r\nimport { Reloader } from './Reloader';\r\nimport { Compile } from './Compile';\r\n\r\n\r\nexport{ts};\r\nclass Stats{\r\n    mtimeMs:number;\r\n    isDirectory:()=>true;\r\n\r\n}\r\nclass FS{\r\n    async readdir(folder:string):Promise<string[]>{\r\n        return [\"\"];\r\n    };\r\n    async readFile(file:string,format:string):Promise<string>{\r\n        return \"\";\r\n    };\r\n    async stat(file:string):Promise<Stats>{\r\n        return new Stats();\r\n    };\r\n   \r\n    createWriteStream(...any):any{\r\n        throw new JassiError(\"Not supported\");\r\n    }\r\n    async mkdir(file:string,option:{recursive?:boolean}){\r\n\r\n    };\r\n    async writeFile(file:string,data:string){\r\n\r\n    };\r\n    async rename(oldPath:string,newPath:string){\r\n\r\n    }\r\n    async unlink(file:string){\r\n        \r\n    }\r\n    async copyFile(src:string,dest:string){\r\n        throw new JassiError(\"Not supported\");\r\n    }\r\n    watch(...any){\r\n        throw new JassiError(\"Not supported\");\r\n    };\r\n \r\n    async rmdir(dirName,options:{ recursive?: boolean }){\r\n\r\n    }\r\n}\r\n//var myfs=new FS();\r\nexport {myfs};\r\nexport async function exists(filename:string):Promise<boolean>{\r\n    return fs.existsSync(filename);\r\n}\r\nvar zipid=0;\r\nasync function writeZip(zip: JSZip, outfile: string) {\r\n    return new Promise((ready) => {\r\n\r\n        var out =  fs.createWriteStream(outfile);\r\n        zip.generateNodeStream({ type: 'nodebuffer', streamFiles: true }).\r\n            pipe(out).on('finish', () => {\r\n                ready(undefined);\r\n            }).on('error', (err) => {\r\n                ready(err);\r\n            });\r\n\r\n    });\r\n}\r\nexport async function dozip(directoryname: string, serverdir: boolean = undefined): Promise<string> {\r\n    var root = new Filesystem().path;\r\n    if (serverdir) {\r\n        root = \".\";\r\n    }\r\n    if(! fs.existsSync(\"./tmp\")){\r\n         fs.mkdirSync(\"./tmp\");\r\n    }\r\n\r\n    let filename = directoryname.split(\"/\")[directoryname.split(\"/\").length - 1] + zipid++;\r\n    await this.zipFolder(root + \"/\" + directoryname, \"./tmp/\" + filename + \".zip\");\r\n    var data =  fs.readFileSync(\"./tmp/\" + filename + \".zip\"); //,'binary');\r\n    fs.unlinkSync(\"./tmp/\" + filename + \".zip\");\r\n    //let buff = new Buffer(data);\r\n    let ret = data.toString('base64');\r\n    return ret;\r\n}\r\n\r\nasync function zipFolder(folder: string, outfile: string, parent: JSZip = undefined) {\r\n\r\n    var isRoot = parent === undefined;\r\n    if (parent === undefined)\r\n        parent = new JSZip();\r\n    var _this = this;\r\n    //var parent:FileNode[]=_this._getDirectory(file,results);\r\n    var list: string[] =  fs.readdirSync(folder);\r\n\r\n    for (var x = 0; x < list.length; x++) {\r\n        var filename = list[x];\r\n        var file = folder + \"/\" + filename;\r\n        var stat =  fs.statSync(file);\r\n        if (stat && stat.isDirectory()) {\r\n            var newFolder = parent.folder(filename);\r\n             await _this.zipFolder(file, outfile, newFolder);\r\n        } else {\r\n            var data =  fs.readFileSync(file, \"binary\");\r\n            parent.file(filename, data, { binary: true });\r\n        }\r\n    }\r\n    if (isRoot) {\r\n        var d = await this.writeZip(parent, outfile);\r\n        return d;\r\n    }\r\n    return parent;\r\n}\r\n\r\nexport async function reloadJSAll(filenames: string[], afterUnload: () => {}) {\r\n    return new Reloader().reloadJSAll(filenames,afterUnload);\r\n}\r\n\r\nexport async function   transpile(fileName: string,inServerdirectory:boolean=undefined) {\r\n    await new Compile().transpile(fileName,inServerdirectory);\r\n}","\r\n\r\n\r\nexport class Config{\r\n    require:Function;\r\n    isServer:boolean;\r\n    modules:{[modul:string]:string};\r\n    server:{\r\n        modules:{[modul:string]:string};\r\n    };\r\n    jsonData:any;\r\n    clientrequire:(...any)=>any;\r\n    serverrequire:(...any)=>any;\r\n    constructor(){\r\n        if(!window.document){\r\n            this.isServer=true;\r\n            var fs=require(\"fs\"); \r\n            this.init(fs.readFileSync('./client/jassijs.json', 'utf-8'));\r\n         }\r\n    }\r\n    init(configtext:string){\r\n        this.jsonData= JSON.parse(configtext);\r\n        this.modules=this.jsonData.modules;\r\n        this.server=<any>{\r\n            modules:this.jsonData.server.modules\r\n        }\r\n    }\r\n    async reload(){\r\n        if(!window.document){\r\n            this.isServer=true;\r\n            var fs=require(\"fs\");\r\n            this.init(fs.readFileSync('./client/jassijs.json', 'utf-8'));\r\n        }else{\r\n           var myfs= (await import(\"jassijs/server/NativeAdapter\")).myfs;\r\n           this.init(await myfs.readFile('./client/jassijs.json','utf-8'));\r\n        }\r\n    }\r\n    async saveJSON(){\r\n        var myfs= (await import(\"jassijs/server/NativeAdapter\")).myfs;\r\n        await myfs.writeFile('./client/jassijs.json',JSON.stringify(this.jsonData, undefined, \"\\t\"));\r\n        this.init(await myfs.readFile('./client/jassijs.json'));\r\n\r\n    }\r\n}\r\nvar config=new Config();\r\nexport {config};","\r\nimport \"reflect-metadata\";\r\nimport { config } from \"./Config\";\r\n\r\n\r\n\r\nexport function $Class(longclassname: string): Function {\r\n    return function (pclass) {\r\n        registry.register(\"$Class\", pclass, longclassname);\r\n    }\r\n}\r\nexport function $register(servicename: string, ...params): Function {\r\n    return function (pclass) {\r\n        registry.register(servicename, pclass, params);\r\n    }\r\n}\r\n\r\nif (Reflect[\"_metadataorg\"] === undefined) {\r\n    Reflect[\"_metadataorg\"] = Reflect[\"metadata\"];\r\n    if (Reflect[\"_metadataorg\"] === undefined)\r\n        Reflect[\"_metadataorg\"] = null;\r\n}\r\n\r\n//@ts-ignore\r\nReflect[\"metadata\"] = function (o, property, ...args): Function {\r\n    return function (target: any, propertyKey: string, descriptor: PropertyDescriptor, ...fargs) {\r\n        //delegation to \r\n\r\n        if (Reflect[\"_metadataorg\"] !== null) {\r\n            var func = Reflect[\"_metadataorg\"](o, property, ...args);\r\n            func(target, propertyKey, descriptor, ...fargs);\r\n        }\r\n        if (o === \"design:type\") {\r\n            registry.registerMember(\"design:type\", target, propertyKey, property);\r\n        }\r\n    }\r\n}\r\n\r\nclass DataEntry {\r\n    oclass: new (...args: any[]) => any;\r\n    params: any[];\r\n}\r\n\r\nclass JSONDataEntry {\r\n    classname: string;\r\n    params: any[];\r\n    filename: string;\r\n}\r\n\r\n\r\n/**                       \r\n* Manage all known data registered by jassijs.register\r\n* the data is downloaded by /registry.json\r\n* registry.json is updated by the server on code upload \r\n* @class jassijs.base.Registry \r\n*/\r\nexport class Registry {\r\n    private _nextID: number;\r\n    public jsondata: { [service: string]: { [classname: string]: JSONDataEntry } } = undefined;\r\n    public data: { [service: string]: { [classname: string]: DataEntry } } = {};\r\n    public dataMembers: { [service: string]: { [classname: string]: { [membername: string]: any[] } } } = {};\r\n    public jsondataMembers: { [service: string]: { [classname: string]: { [membername: string]: any[] } } } = {};\r\n    private isLoading: any;\r\n    _eventHandler: { [service: string]: any[] } = {};\r\n    constructor() {\r\n        this._nextID = 10;\r\n        this.isLoading = this.reload();\r\n    }\r\n    getData(service: string, classname: string = undefined): DataEntry[] {\r\n        var olddata = this.data[service];\r\n        if (olddata === undefined)\r\n            return [];\r\n        var ret = [];\r\n        if (classname !== undefined) {\r\n            if (olddata[classname] !== undefined) {\r\n                ret.push(olddata[classname]);\r\n            }\r\n        } else {\r\n            for (var key in olddata) {\r\n                ret.push(olddata[key]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    onregister(service: string, callback: (oclass: new (...args: any[]) => any, ...params) => void) {\r\n        var events = this._eventHandler[service];\r\n        if (events === undefined) {\r\n            events = [];\r\n            this._eventHandler[service] = events;\r\n        }\r\n        events.push(callback);\r\n        //push already registered events\r\n        var olddata = this.data[service];\r\n        for (var key in olddata) {\r\n            var dataentry = olddata[key];\r\n            callback(dataentry.oclass, ...dataentry.params);\r\n        }\r\n        return callback;\r\n    }\r\n    offregister(service: string, callback: (oclass: new (...args: any[]) => any, ...params) => void) {\r\n        var events = this._eventHandler[service];\r\n        var pos = events.indexOf(callback);\r\n        if (pos >= 0)\r\n            events.splice(pos, 1);\r\n    }\r\n    /** \r\n     * register an anotation\r\n     * Important: this function should only used from an annotation, because the annotation is saved in\r\n     *            index.json and could be read without loading the class\r\n     **/\r\n    register(service: string, oclass: new (...args: any[]) => any, ...params) {\r\n        var sclass = oclass.prototype.constructor._classname;\r\n        if (sclass === undefined && service !== \"$Class\") {\r\n            throw new Error(\"@$Class member is missing or must be set at last\");\r\n            return;\r\n        }\r\n        if (service === \"$Class\") {\r\n            sclass = params[0];\r\n            oclass.prototype.constructor._classname = params[0];\r\n        }\r\n        if (this.data[service] === undefined) {\r\n            this.data[service] = {};\r\n        }\r\n        this.data[service][sclass] = { oclass, params };\r\n        //the array could be modified so we need a copy\r\n        var events = this._eventHandler[service] === undefined ? undefined : [].concat(this._eventHandler[service]);\r\n\r\n        if (events !== undefined) {\r\n            for (var x = 0; x < events.length; x++) {\r\n                events[x](oclass, ...params);\r\n            }\r\n        }\r\n        if (service === \"$Class\") {\r\n            //console.log(\"load \" + params[0]);\r\n\r\n\r\n            //finalize temporary saved registerd members\r\n            let tempMem = oclass.prototype.$$tempRegisterdMembers$$;\r\n            if (tempMem === undefined)\r\n                //@ts-ignore\r\n                tempMem = oclass.$$tempRegisterdMembers$$;\r\n            if (tempMem !== undefined) {\r\n                //this.dataMembers = oclass.prototype.$$tempRegisterdMembers$$;\r\n                for (var sservice in tempMem) {\r\n                    var pservice = tempMem[sservice];\r\n                    if (this.dataMembers[sservice] === undefined) {\r\n                        this.dataMembers[sservice] = {};\r\n                    }\r\n                    this.dataMembers[sservice][sclass] = <any>pservice;\r\n                }\r\n                delete oclass.prototype.$$tempRegisterdMembers$$;\r\n                //@ts-ignore\r\n                delete oclass.$$tempRegisterdMembers$$;\r\n            }\r\n        }\r\n    }\r\n    getMemberData(service: string): {\r\n        [classname: string]: {\r\n            [membername: string]: any[]\r\n        }\r\n    } {\r\n\r\n        return this.dataMembers[service];\r\n\r\n    }\r\n    getJSONMemberData(service: string): {\r\n        [classname: string]: {\r\n            [membername: string]: any[]\r\n        }\r\n    } {\r\n\r\n        return this.jsondataMembers[service];\r\n\r\n    }\r\n    /** \r\n     * register an anotation\r\n     * Important: this function should only used from an annotation\r\n     **/\r\n    registerMember(service: string, oclass: any/*new (...args: any[]) => any*/, membername: string, ...params) {\r\n        var m = oclass;\r\n        if (oclass.prototype !== undefined)\r\n            m = oclass.prototype;\r\n        //the classname is not already known so we temporarly store the data in oclass.$$tempRegisterdMembers$$\r\n        //and register the member in register(\"$Class\",....)\r\n        if (m.$$tempRegisterdMembers$$ === undefined) {\r\n            m.$$tempRegisterdMembers$$ = {};\r\n        }\r\n        if (m.$$tempRegisterdMembers$$[service] === undefined) {\r\n            m.$$tempRegisterdMembers$$[service] = {};\r\n        }\r\n\r\n        if (m.$$tempRegisterdMembers$$[service][membername] === undefined) {\r\n            m.$$tempRegisterdMembers$$[service][membername] = [];\r\n        }\r\n        m.$$tempRegisterdMembers$$[service][membername].push(params);\r\n    }\r\n    /**\r\n    * with every call a new id is generated - used to create a free id for the dom\r\n    * @returns {number} - the id\r\n    */\r\n    nextID() {\r\n        this._nextID = this._nextID + 1;\r\n        return this._nextID.toString();\r\n    }\r\n    /**\r\n    * Load text with Ajax synchronously: takes path to file and optional MIME type\r\n    * @param {string} filePath - the url\r\n    * @returns {string} content\r\n    *//*\r\n    loadFile(filePath)\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            let response = null;\r\n            xhr.addEventListener(\"readystatechange\", function() {\r\n              if (this.readyState === xhr.DONE) {\r\n                response = this.responseText;\r\n                if (response) {\r\n                  //response = JSON.parse(response);\r\n                  resolve(response);\r\n                }\r\n              }\r\n            });\r\n            xhr.open(\"GET\",filePath, true);\r\n            xhr.send();\r\n            xhr.overrideMimeType(\"application/json\");\r\n            xhr.onerror = function(error) {\r\n              reject({\r\n                error: \"Some error\"\r\n              })\r\n            }\r\n          });\r\n    }*/\r\n    private async loadText(url): Promise<string> {\r\n        return new Promise((resolve) => {\r\n            //@ts-ignore\r\n            let oReq = new XMLHttpRequest();\r\n            oReq.open(\"GET\", url);\r\n            oReq.onerror = () => {\r\n                resolve(undefined);\r\n            };\r\n            oReq.addEventListener(\"load\", () => {\r\n                if (oReq.status === 200)\r\n                    resolve(oReq.responseText);\r\n                else\r\n                    resolve(undefined);\r\n\r\n            });\r\n            oReq.send();\r\n        });\r\n    }\r\n    /**\r\n     * reload the registry\r\n     */\r\n    async reload() {\r\n        this.jsondata = { $Class: {} };\r\n        this.jsondataMembers = {};\r\n        var _this = this;\r\n\r\n        var modultext = \"\";\r\n        //@ts-ignore\r\n        if (window?.document === undefined) { //on server\r\n  \r\n            //@ts-ignore \r\n            var fs = await import('fs');\r\n            var Filesystem=await import(\"jassijs/server/Filesystem\");\r\n            var modules = config.server.modules;\r\n            for (let modul in modules) {\r\n                try {\r\n\r\n                    try {\r\n                        //@ts-ignore\r\n                        delete require.cache[require.resolve(modul + \"/registry\")];\r\n                    } catch {\r\n                        //@ts-ignore\r\n                        var s = (require.main[\"path\"] + \"/\" + modul + \"/registry\").replaceAll(\"\\\\\", \"/\") + \".js\";\r\n                        //@ts-ignore\r\n                        delete require.cache[s];\r\n                        //@ts-ignore\r\n                        delete require.cache[s.replaceAll(\"/\", \"\\\\\")];\r\n                    }\r\n                    //@ts-ignore\r\n                    var data = (await require.main.require(modul + \"/registry\")).default;\r\n                    this.initJSONData(data);\r\n\r\n                } catch {\r\n                    console.error(\"failed load registry \" + modul + \"/registry.js\");\r\n                }\r\n\r\n\r\n            }\r\n\r\n        } else { //on client\r\n            var all = {};\r\n            var modules=config.modules;\r\n            var myrequire;\r\n            if(require.defined(\"jassijs/server/Installserver\")){\r\n                myrequire=<any>config.serverrequire;\r\n                modules=config.server.modules;\r\n            }else{\r\n                myrequire=<any>config.clientrequire;\r\n            }\r\n            for (let modul in modules) {\r\n                if (!modules[modul].endsWith(\".js\") && modules[modul].indexOf(\".js?\") === -1)\r\n                    myrequire.undef(modul + \"/registry\");\r\n                {\r\n                    var m = modul;\r\n                    all[modul] = new Promise((resolve, reject) => {\r\n                        //@ts-ignore\r\n                        myrequire([m + \"/registry\"], function (ret) {\r\n                            resolve(ret.default);\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n            for (let modul in modules) {\r\n                var data = await all[modul];\r\n                _this.initJSONData(data);\r\n            }\r\n        }\r\n\r\n        /* for (let modul in modules) {\r\n        \r\n                    //requirejs.undef(\"js/\"+modul+\"/registry.js\");\r\n                    all[modul] = fs.readFileSync(\"./../client/\"+modul+\"/registry.js\", 'utf-8');\r\n                }\r\n                for (let modul in modules) {\r\n                    var data = await all[modul].default;\r\n                    _this.initJSONData(data);\r\n                }\r\n        */\r\n        //var reg = await this.reloadRegistry();\r\n        //_this.initJSONData(reg);\r\n        /*     requirejs.undef(\"text!../../../../registry.json?bust=\"+window[\"jassiversion\"]);\r\n         require([\"text!../../../../registry.json?bust=\"+window[\"jassiversion\"]], function(registry){\r\n             _this.init(registry);  \r\n         });*/\r\n    }\r\n    /**\r\n    * loads entries from json string\r\n    * @param {string} json - jsondata\r\n    */\r\n    initJSONData(json) {\r\n\r\n        if (json === undefined)\r\n            return;\r\n        var vdata: { [file: string]: { [classname: string]: { [service: string]: any } } } = json;\r\n        for (var file in vdata) {\r\n            var vfiles = vdata[file];\r\n            for (var classname in vfiles) {\r\n                if (classname === \"date\")\r\n                    continue;\r\n                this.jsondata.$Class[classname] = {\r\n                    classname: classname,\r\n                    params: [classname],\r\n                    filename: file\r\n                }\r\n                var theclass = vfiles[classname];\r\n                for (var service in theclass) {\r\n                    if (service === \"@members\") {\r\n                         //public jsondataMembers: { [service: string]: { [classname: string]: { [membername: string]: any[] } } } = {};\r\n                        var mems=theclass[service];\r\n                        for(let mem in mems){\r\n                            let scs=mems[mem];\r\n                            for(let sc in scs){\r\n                                if(!this.jsondataMembers[sc])\r\n                                    this.jsondataMembers[sc]={};\r\n                                if(!this.jsondataMembers[sc][classname])\r\n                                    this.jsondataMembers[sc][classname]={};\r\n                                if(this.jsondataMembers[sc][classname][mem]===undefined)\r\n                                this.jsondataMembers[sc][classname][mem]=[];\r\n                                this.jsondataMembers[sc][classname][mem].push(scs[sc]);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (this.jsondata[service] === undefined)\r\n                            this.jsondata[service] = {};\r\n                        var entr = new JSONDataEntry();\r\n                        entr.params = theclass[service];\r\n                       \r\n                        entr.classname = classname;//vfiles.$Class === undefined ? undefined : vfiles.$Class[0];\r\n                        entr.filename = file;\r\n                        this.jsondata[service][entr.classname] = entr;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param service - the service for which we want informations\r\n     */\r\n    async getJSONData(service: string, classname: string = undefined): Promise<JSONDataEntry[]> {\r\n       // if (this.isLoading)\r\n            await this.isLoading;\r\n       /* if (this.jsondata === undefined) {\r\n            this.isLoading = this.reload();\r\n            await this.isLoading;\r\n        }\r\n        this.isLoading = undefined;*/\r\n        var ret = [];\r\n        var odata = this.jsondata[service];\r\n        if (odata === undefined)\r\n            return ret;\r\n        if (classname !== undefined)\r\n            return odata[classname] === undefined ? undefined : [odata[classname]];\r\n        for (var clname in odata) {\r\n            if (classname === undefined || classname === clname)\r\n                ret.push(odata[clname]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    getAllFilesForService(service: string, classname: string = undefined): string[] {\r\n\r\n        var data = this.jsondata[service];\r\n        var ret: string[] = [];\r\n        for (var clname in data) {\r\n            var test = data[clname];\r\n            if (classname == undefined || test.classname === classname)\r\n                ret.push(test.filename);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadAllFilesForEntries(entries: JSONDataEntry[]) {\r\n        var files = [];\r\n        for (let x = 0; x < entries.length; x++) {\r\n            if (files.indexOf(entries[x].filename) === -1)\r\n                files.push(entries[x].filename);\r\n        }\r\n        await this.loadAllFiles(files);\r\n    }\r\n    /**\r\n     * load all files that registered the service\r\n     * @param {string} service - name of the service\r\n     * @param {function} callback - called when loading is finished\r\n     */\r\n    async loadAllFilesForService(service: string) {\r\n        var services = this.getAllFilesForService(service);\r\n        await this.loadAllFiles(services);\r\n    }\r\n    /**\r\n     * load all files \r\n     * @param {string} files - the files to load\r\n     */\r\n    async loadAllFiles(files: string[]) {\r\n        //   var services = this.getAllFilesForService(service);\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            var dependency = [];\r\n            for (var x = 0; x < files.length; x++) {\r\n                var name = files[x];\r\n                if (name.endsWith(\".ts\"))\r\n                    name = name.substring(0, name.length - 3);\r\n                dependency.push(name);\r\n            }\r\n            var req: any = require;\r\n            req(dependency, function () {\r\n                resolve(undefined);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nvar registry = new Registry();\r\nexport default registry;\r\nexport function migrateModul(oldModul, newModul) {\r\n    if(newModul.registry){\r\n        newModul.registry._nextID = oldModul.registry._nextID;\r\n        newModul.registry.entries = oldModul.registry.entries;\r\n    }\r\n}\r\n//jassijs.registry=registry;\r\n","import { $Class } from \"jassijs/remote/Registry\";\r\nimport registry from \"jassijs/remote/Registry\";\r\nimport { Context, RemoteObject } from \"jassijs/remote/RemoteObject\";\r\n\r\nexport class RightProperties{\r\n    name:string;\r\n    description?:string;\r\n}\r\nexport class ParentRightProperties{\r\n    name:string;\r\n    description?:{ \r\n        text:string\r\n        [parametername:string]:string\r\n    };\r\n    //e.g.\"id>=:i1 and id<=:i2\"\r\n    sqlToCheck:string;\r\n}\r\nexport function $Rights(rights:RightProperties[]): Function {\r\n    return function (pclass) {\r\n        registry.register(\"$Rights\", pclass, rights);\r\n    }\r\n}\r\nexport function $ParentRights(rights:[ParentRightProperties]): Function {\r\n    return function (pclass) {\r\n        registry.register(\"$ParentRights\", pclass, rights);\r\n    }\r\n}\r\nexport function $CheckParentRight():Function{\r\n    return function(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\r\n            registry.registerMember(\"$CheckParentRight\",target,propertyKey,undefined);\r\n    }\r\n}\r\n\r\n@$Class(\"jassijs.security.Rights\")\r\nexport class Rights extends RemoteObject{\r\n    private _isAdmin:boolean;\r\n    async isAdmin(context:Context=undefined):Promise<boolean>{\r\n        \r\n        if (!context?.isServer) {\r\n            if(this._isAdmin!==undefined)\r\n                return this._isAdmin;\r\n            return await this.call(this,this.isAdmin,context);\r\n        } else {\r\n            //@ts-ignore\r\n            var req = context.request;\r\n            return req.user.isAdmin;\r\n        }\r\n    }\r\n\r\n}\r\nvar rights=new Rights();\r\nexport default rights;","import { $Class } from \"jassijs/remote/Registry\";\r\nimport { classes, JassiError } from \"jassijs/remote/Classes\";\r\n\r\n\r\n\r\n@$Class(\"jassijs.remote.RemoteProtocol\")\r\nexport class RemoteProtocol {\r\n    static counter = 0;\r\n    classname: string;\r\n    _this: any;\r\n    parameter: any[];\r\n    method: string;\r\n    /** \r\n     * converts object to jsonstring\r\n     * if class is registerd in classes then the class is used\r\n     * if id is used then recursive childs are possible\r\n     * @param obj \r\n     */\r\n    stringify(obj) {\r\n        var ref = [];\r\n\r\n        return JSON.stringify(obj, function (key, value) {\r\n            var val: any = {};\r\n            var clname = value === null ? undefined : classes.getClassName(value);\r\n            var k = clname;\r\n            if (k !== undefined) {\r\n                val.__clname__ = clname;\r\n\r\n                //if (value.id !== undefined)\r\n                //\tk = k + \":\" + (value.id === undefined ? RemoteProtocol.counter++ : value.id);\r\n                //the object was seen the we save a ref\r\n                if (ref.indexOf(value) >= 0) {\r\n                    val.__ref__ = ref.indexOf(value);\r\n\r\n                } else {\r\n                    Object.assign(val, value);\r\n                    ref.push(value);\r\n                    val.__refid__ = ref.length - 1;\r\n                }\r\n\r\n\r\n            } else {\r\n                val = value;\r\n            }\r\n\r\n\r\n            return val;\r\n        });\r\n    }\r\n\r\n    public static async simulateUser(user: string = undefined, password: string = undefined) {\r\n        var rights = (await import(\"jassijs/remote/security/Rights\")).default;\r\n        //\tif(await rights.isAdmin()){\r\n        //\t\tthrow new Error(\"not an admin\")\r\n        //\t}\r\n        //@ts-ignore\r\n        var Cookies = (await import(\"jassijs/util/Cookies\")).Cookies;\r\n        if (user === undefined) {\r\n            \r\n            Cookies.remove(\"simulateUser\", {});\r\n            Cookies.remove(\"simulateUserPassword\", {});\r\n        } else {\r\n            Cookies.set(\"simulateUser\", user, {});\r\n            Cookies.set(\"simulateUserPassword\", password, {});\r\n        }\r\n\r\n    }\r\n    async exec(config, object) {\r\n        return await new Promise((resolve,reject)=>{\r\n            //@ts-ignore\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('POST', config.url, true);\r\n            xhr.setRequestHeader(\"Content-Type\", \"text\");\r\n\r\n            xhr.onload = function (data) {\r\n                if(this.status===200)\r\n                    resolve(this.responseText);\r\n                else\r\n                    reject(this);\r\n            };\r\n    \r\n            xhr.send(config.data);\r\n            xhr.onerror=function (data) {\r\n               reject(data);\r\n            };\r\n        }\r\n        );\r\n     //return await $.ajax(config, object);\r\n    }\r\n    /**\r\n   * call the server\r\n   */\r\n    async call() {\r\n        if (jassijs.isServer)\r\n            throw new JassiError(\"should be called on client\");\r\n        var sdataObject = undefined;\r\n        var url = \"remoteprotocol?\" + Date.now();\r\n        var _this = this;\r\n        var redirect = undefined;\r\n        var config = {\r\n            url: url,\r\n            type: 'post',\r\n            dataType: \"text\",\r\n            data: this.stringify(this),\r\n        }\r\n        var ret;\r\n        try {\r\n            ret = await this.exec(config, this._this);\r\n        } catch (ex) {\r\n            if (ex.status === 401 || (ex.responseText && ex.responseText.indexOf(\"jwt expired\") !== -1)) {\r\n                redirect = new Promise((resolve) => {\r\n                    //@ts-ignore\r\n                    import(\"jassijs/base/LoginDialog\").then((lib) => {\r\n                        lib.doAfterLogin(resolve, _this);\r\n                    });\r\n                });\r\n            } else {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        if (redirect !== undefined)\r\n            return await redirect;\r\n        if (ret === \"$$undefined$$\")\r\n            return undefined;\r\n        var retval = await this.parse(ret);\r\n        if (retval[\"**throw error**\"] !== undefined) {\r\n            throw new JassiError(retval[\"**throw error**\"]);\r\n        }\r\n        return retval;\r\n    }\r\n\r\n    /**\r\n     * converts jsonstring to an object\r\n     */\r\n    async parse(text: string) {\r\n        var ref = {};\r\n        if (text === undefined)\r\n            return undefined;\r\n        if (text === \"\")\r\n            return \"\";\r\n        //first get all classnames\t\r\n        var allclassnames = [];\r\n\r\n        JSON.parse(text, function (key, value) {\r\n            if (value === null || value === undefined)\r\n                return value;\r\n            if (value.__clname__ !== null && value.__clname__ !== undefined && allclassnames.indexOf(value.__clname__) === -1) {\r\n                allclassnames.push(value.__clname__);\r\n            }\r\n\r\n            return value;\r\n        });\r\n\r\n        //all classes must be loaded\r\n        for (var x = 0; x < allclassnames.length; x++) {\r\n            await classes.loadClass(allclassnames[x]);\r\n        }\r\n        return JSON.parse(text, function (key, value) {\r\n            var val = value;\r\n            if (value === null || value === undefined)\r\n                return value;\r\n            if (value.__ref__ !== undefined) {\r\n                val = ref[value.__ref__];\r\n                if (val === undefined) {\r\n                    //TODO import types from js\r\n                    //create dummy\r\n                    var type = classes.getClass(value.__clname__);\r\n                    //@ts-ignore\r\n                    var test = type._createObject === undefined ? undefined : type._createObject(val);\r\n                    if (test !== undefined)\r\n                        val = test;\r\n                    else\r\n                        val = new type();\r\n                    ref[value.__ref__] = val;\r\n                }\r\n            } else {\r\n                if (value.__clname__ !== undefined) {\r\n                    if (value.__refid__ !== undefined && ref[value.__refid__] !== undefined) {//there is a dummy\r\n                        val = ref[value.__refid__];\r\n                    } else {\r\n                        //TODO import types from js\r\n                        var type = classes.getClass(value.__clname__);\r\n                        //@ts-ignore\r\n                        var test = type._createObject === undefined ? undefined : type._createObject(value);\r\n                        if (test !== undefined)\r\n                            val = test;\r\n                        else\r\n                            val = new type();\r\n                        if (value.__refid__ !== undefined) {\r\n                            ref[value.__refid__] = val;\r\n                        }\r\n                    }\r\n                    Object.assign(val, value);\r\n                    delete val.__refid__;\r\n                    delete val.__clname__;\r\n                }\r\n            }\r\n            //Date conversation\r\n            var datepattern = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\r\n            if (typeof value === 'string') {\r\n                var a = datepattern.exec(value);\r\n                if (a)\r\n                    return new Date(value);\r\n            }\r\n            return val;\r\n        });\r\n    }\r\n    async test() {\r\n        var a: any = new A();\r\n        var b: any = new B();\r\n        a.b = b;\r\n        a.name = \"max\";\r\n        a.id = 9;\r\n        b.a = a;\r\n        b.id = 7;\r\n        var s = this.stringify(a);\r\n        var test = await this.parse(s);\r\n    }\r\n}\r\n\r\n\r\nclass A {\r\n    name: \"hallo\"\r\n}\r\n//jassijs.register(\"classes\", \"de.A\", A);\r\nclass B {\r\n    hh: \"du\"\r\n\r\n}\r\n//jassijs.register(\"classes\", \"de.B\", B);","import { $Class } from \"jassijs/remote/Registry\";\r\nimport { classes, JassiError } from \"jassijs/remote/Classes\";\r\nimport {RemoteProtocol} from \"jassijs/remote/RemoteProtocol\";\r\n\r\nexport class Context{\r\n\tisServer:boolean;\r\n\t[key:string]:any;\r\n}\r\n@$Class(\"jassijs.remote.RemoteObject\")\r\nexport class RemoteObject{ \r\n\tpublic static async call(method:(...ars:any)=>any,...parameter){\r\n\t  \r\n\t\tif(jassijs.isServer)\r\n\t\t\tthrow new JassiError(\"should be called on client\");\r\n\t\tvar prot=new RemoteProtocol();\r\n\t\tvar context=parameter[parameter.length-1];\r\n\t\tprot.classname=classes.getClassName(this);\r\n\t\tprot._this= \"static\";  \r\n\t\tprot.parameter=parameter;\r\n\t\tprot.method=method.name;\r\n\t\tprot.parameter.splice(parameter.length-1,1);\r\n\r\n\t\tvar ret;\r\n\t\tif(context?.transactionitem){\r\n\t\t\tret=await context.transactionitem.transaction.wait(context.transactionitem,prot);\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t\t//let Transaction= (await import(\"jassijs/remote/Transaction\")).Transaction;\r\n\t\t//var trans=Transaction.cache.get(_this);\r\n\r\n\t\t//if(trans&&trans[method.name]){\r\n\t\t//\tthrow \"not implemented\"\r\n\t\t//\tret=await trans[method.name][0]._push(undefined,prot.method,prot,trans[method.name][1]);\r\n\t\t//}\r\n\r\n\t\tret= await prot.call();\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tpublic async call(_this,method:(...ars:any)=>any,...parameter){\r\n\t\tif(jassijs.isServer)\r\n\t\t\tthrow new JassiError( \"should be called on client\");\r\n\t\tvar prot=new RemoteProtocol();\r\n\t\tvar context=parameter[parameter.length-1];\r\n\t\tprot.classname=classes.getClassName(this);\r\n\t\tprot._this=_this;\r\n\t\tprot.parameter=parameter;\r\n\t\tprot.method=method.name;\r\n\t\tprot.parameter.splice(parameter.length-1,1);\r\n\t\tvar ret;\r\n\t\t//let context=(await import(\"jassijs/remote/Context\")).Context;\r\n\t\t//let Transaction= (await import(\"jassijs/remote/Transaction\")).Transaction;\r\n\t\t//var trans=Transaction.cache.get(_this);\r\n\t\t//var trans=context.get(\"transaction\");\r\n\t\tif(context?.transactionitem){\r\n\t\t\tret=await context.transactionitem.transaction.wait(context.transactionitem,prot);\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t    ret= await prot.call();\r\n\t\treturn ret;\r\n\t}\r\n}","import { Entity, EntityOptions,PrimaryGeneratedColumn, JoinColumn, JoinTable, Column, PrimaryColumn, OneToOne, OneToMany, ManyToOne, ManyToMany } from \"typeorm\";\r\n\r\nexport {Entity};\r\nexport {PrimaryGeneratedColumn};\r\nexport {JoinColumn};\r\nexport {JoinTable };\r\nexport { Column};\r\nexport {PrimaryColumn};\r\nexport {OneToOne};\r\nexport {OneToMany};\r\nexport {ManyToOne};\r\nexport {ManyToMany};\r\nexport {EntityOptions};\r\n//export function Entity(options?: EntityOptions): Function;\r\n//export declare type PrimaryGeneratedColumnType = \"int\" | \"int2\" | \"int4\" | \"int8\" | \"integer\" | \"tinyint\" | \"smallint\" | \"mediumint\" | \"bigint\" | \"dec\" | \"decimal\" | \"fixed\" | \"numeric\" | \"number\" | \"uuid\";\r\n","\r\nimport { $Class } from \"jassijs/remote/Registry\";\r\nimport { classes } from \"./Classes\";\r\nexport class TypeDef{\r\n\tfields:{[fieldname:string]:{[decorater:string]:any[]}}={};\r\n    getRelation(fieldname):{type:string,oclass}{\r\n        var ret=undefined;\r\n        var test=this.fields[fieldname];\r\n        for(let key in test){\r\n            if(key===\"OneToOne\"||key===\"OneToMany\"||key===\"ManyToOne\"||key===\"ManyToMany\"){\r\n                return {type:key,oclass:test[key][0]()};\r\n                 \r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n@$Class(\"jassijs.remote.Database\")\r\nexport class Database{\r\n    private constructor(){\r\n        ;\r\n    }\r\n    typeDef:Map<object,TypeDef>=new Map();\r\n    decoratorCalls:Map<object,any[]>=new Map();\r\n    private removeOld(oclass){\r\n        var name=classes.getClassName(oclass);\r\n        this.typeDef.forEach((value,key)=>{\r\n            var testname=classes.getClassName(key);\r\n            if(testname===name&&key!==oclass)\r\n                this.typeDef.delete(key);\r\n        });\r\n        this.decoratorCalls.forEach((value,key)=>{\r\n            var testname=classes.getClassName(key);\r\n            if(testname===name&&key!==oclass){\r\n                this.decoratorCalls.delete(key);\r\n            }\r\n        });\r\n    }\r\n    _setMetadata(constructor,field:string,decoratername:string,fieldprops:any[],decoraterprops:any[],delegate){\r\n        var def:TypeDef=this.typeDef.get(constructor);\r\n        if(def===undefined){\r\n            def=new TypeDef();\r\n            \r\n            this.decoratorCalls.set(constructor,[]);\r\n            this.typeDef.set(constructor,def);//new class\r\n        }\r\n        if(field===\"this\"){\r\n            this.removeOld(constructor);\r\n        }\r\n        /*if(delegate===undefined){\r\n            debugger;\r\n        }*/\r\n        this.decoratorCalls.get(constructor).push([delegate,fieldprops,decoraterprops]);\r\n        var afield=def.fields[field];\r\n        if(def.fields[field]===undefined){\r\n        \tafield={};\r\n        \tdef.fields[field]=afield;\r\n        }\r\n        afield[decoratername]=fieldprops;\r\n    }\r\n    fillDecorators(){\r\n        this.decoratorCalls.forEach((allvalues,key)=>{\r\n            allvalues.forEach((value)=>{\r\n                value[0](...value[1])(...value[2]);\r\n            });\r\n        });\r\n    }\r\n    getMetadata(sclass):TypeDef{\r\n        return this.typeDef.get(sclass);\r\n    }\r\n}\r\n//@ts-ignore\r\nvar db:Database=new Database();\r\nexport {db};\r\n","import { Context } from \"jassijs/remote/RemoteObject\";\r\nimport { TransactionItem } from \"jassijs/remote/Transaction\";\r\n\r\n\r\n\r\nexport class ObjectTransaction {\r\n    public statements: TransactionItem[] = [];\r\n    saveresolve:any[];\r\n    private functionsFinally: (() => any)[] = [];\r\n    transactionResolved(context:Context){\r\n        //var session = getNamespace('objecttransaction');\r\n        var test: TransactionItem =context.objecttransactionitem; // session.get(\"objecttransaction\");\r\n        if (test)\r\n             test.resolve = true;\r\n    }\r\n    addFunctionFinally(functionToAdd: () => any) {\r\n        this.functionsFinally.push(functionToAdd);\r\n        \r\n       \r\n        \r\n    }\r\n    checkFinally(){\r\n        let canFinally = true;\r\n        this.statements.forEach((ent) => {\r\n            if (ent.result === \"**unresolved**\")\r\n                canFinally = false;\r\n            if (ent.result[\"then\"]&&!ent[\"resolve\"]) {//Promise, which is not resolved by addFunctionFinally\r\n                canFinally=false;\r\n            }\r\n        });\r\n        if (canFinally) {\r\n            this.finally();\r\n        }\r\n    }\r\n    async finally() {\r\n        for (let x = 0; x < this.functionsFinally.length; x++) {\r\n            await this.functionsFinally[x]();\r\n        }\r\n    }\r\n}","import registry from \"jassijs/remote/Registry\";\r\nimport { classes, JassiError } from \"jassijs/remote/Classes\";\r\n\r\n\r\n\r\nimport { Context } from \"jassijs/remote/RemoteObject\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\n\r\nexport function remoteProtocol(request, response) {\r\n\r\n    execute(request, response);\r\n}\r\nasync function checkSimulateUser(context: Context, request) {\r\n\r\n    var rights = (await import(\"jassijs/remote/security/Rights\")).default;\r\n    var test = request.cookies[\"simulateUser\"];\r\n    if (request.cookies[\"simulateUser\"] !== undefined && request.cookies[\"simulateUserPassword\"] !== undefined && context.request.user.isAdmin) {\r\n        var db = await serverservices.db;\r\n\r\n        var user = await db.login(context, context.request.cookies[\"simulateUser\"], context.request.cookies[\"simulateUserPassword\"]);\r\n        if (!user) {\r\n            console.log(\"simulateUser not found\");\r\n            return;\r\n        }\r\n\r\n        request.user.user = user.id;\r\n        request.user.isAdmin = (user.isAdmin === null ? false : user.isAdmin);\r\n        if (!user)\r\n            throw new JassiError(\"simulateUser not logged in\");\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\nasync function execute(request, res) {\r\n    var RemoteProtocol = (await import(\"jassijs/remote/RemoteProtocol\")).RemoteProtocol;\r\n\r\n    var context: Context = {\r\n        isServer: true,\r\n        request: request\r\n    }\r\n    var val = await _execute(request.rawBody, request, context);\r\n    var s = new RemoteProtocol().stringify(val);\r\n    if (s === undefined)\r\n        s = \"$$undefined$$\";\r\n\r\n    res.send(s);\r\n\r\n}\r\nexport async function _execute(protext: string, request, context: Context): Promise<string> {\r\n    // await new Promise((resolve)=>{docls(request,response,resolve)});\r\n\r\n    var RemoteProtocol = (await import(\"jassijs/remote/RemoteProtocol\")).RemoteProtocol;\r\n\r\n\r\n    var prot = new RemoteProtocol();\r\n    var vdata = await prot.parse(protext);\r\n    Object.assign(prot, vdata);\r\n\r\n    var files = registry.getAllFilesForService(\"$Class\", prot.classname);\r\n\r\n    if (files === undefined || files.length === 0) {\r\n        return \"file for \" + prot.classname + \" not found\";\r\n    }\r\n    var file: string = files[0];\r\n    var path = file.split(\"/\");\r\n    if (path.length < 2 || path[1] !== \"remote\")\r\n        throw new JassiError(\"only remote packages can be loadeded\");\r\n    file = file.replace(\".ts\", \"\");\r\n    //var ret = await import(file);\r\n    var C= await classes.loadClass(prot.classname);\r\n    ///await Promise.resolve().then(() => require.main.require(file));\r\n    //var C = classes.getClass(prot.classname);\r\n    if (prot._this === \"static\") {\r\n        try {\r\n            await checkSimulateUser(context, request);\r\n            if (prot.parameter === undefined)\r\n                ret = await (C[prot.method](context));\r\n            else\r\n                ret = await (C[prot.method](...prot.parameter, context));\r\n        } catch (ex) {\r\n            console.error(ex.stack);\r\n            var msg = ex.message;\r\n            if (!msg)\r\n                msg = ex;\r\n            if (!ex)\r\n                ex = \"\";\r\n            ret = {\r\n                \"**throw error**\": msg\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    } else {\r\n        var obj = new C();\r\n\r\n        if (prot._this !== undefined)\r\n            Object.assign(obj, prot._this);\r\n        var ret = undefined;\r\n        try {\r\n            await checkSimulateUser(context, request);\r\n            if (prot.parameter === undefined)\r\n                ret = await (obj[prot.method](context));\r\n            else\r\n                ret = await (obj[prot.method](...prot.parameter, context));\r\n        } catch (ex) {\r\n            if(!(ex instanceof JassiError)){\r\n                console.error(ex.stack);\r\n            }\r\n            var msg = ex.message;\r\n            if (!msg)\r\n                msg = ex;\r\n            if (!ex)\r\n                ex = \"\";\r\n            ret = {\r\n                \"**throw error**\": msg\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n}\r\n","import { $Class } from \"jassijs/remote/Registry\";\r\nimport { Context, RemoteObject } from \"jassijs/remote/RemoteObject\";\r\nimport { RemoteProtocol } from \"jassijs/remote/RemoteProtocol\";\r\n\r\n\r\n\r\n//var serversession;\r\n\r\n\r\n\r\nexport class TransactionItem {\r\n    transaction:Transaction;\r\n    obj: any;\r\n    method: (...args) => any;\r\n    params: any[];\r\n    promise: Promise<any>;\r\n    result: any = \"**unresolved**\";\r\n    remoteProtocol: RemoteProtocol;\r\n    resolve;\r\n}\r\n@$Class(\"jassijs.remote.Transaction\")\r\nexport class Transaction extends RemoteObject {\r\n    private statements: TransactionItem[] = [];\r\n    private ready;\r\n    private context = new Context();\r\n  \r\n    async execute(): Promise<any[]> {\r\n        //  return this.context.register(\"transaction\", this, async () => {\r\n        for (var x = 0; x < this.statements.length; x++) {\r\n            var it = this.statements[x];\r\n            var context:Context={\r\n                isServer:false,\r\n                transaction:this,\r\n                transactionitem:it\r\n            }\r\n            it.promise = it.obj[it.method.name](...it.params,context);\r\n            it.promise.then((val) => {\r\n                it.result = val;//promise returned or resolved out of Transaction\r\n            })\r\n        }\r\n        let _this = this;\r\n        await new Promise((res) => {\r\n            _this.ready = res;\r\n        })\r\n        var ret = [];\r\n        for (let x = 0; x < this.statements.length; x++) {\r\n            var res = await this.statements[x].promise;\r\n            ret.push(res);\r\n        }\r\n        return ret;\r\n        //  });\r\n\r\n    }\r\n    async wait(transactionItem:TransactionItem,prot: RemoteProtocol): Promise<any> {\r\n        transactionItem.remoteProtocol = prot;\r\n        //if all transactions are placed then do the request\r\n        var foundUnplaced = false;\r\n        for (let x = 0; x < this.statements.length; x++) {\r\n            let it = this.statements[x];\r\n            if (it.result === \"**unresolved**\" && it.remoteProtocol === undefined)\r\n                foundUnplaced = true;\r\n        }\r\n        if (foundUnplaced === false) {\r\n            this.sendRequest();\r\n        }\r\n        let _this = this;\r\n        return new Promise((res) => {\r\n\r\n            transactionItem.resolve = res;\r\n        });//await this.statements[id].result;//wait for result - comes with Request\r\n    }\r\n  \r\n    private async sendRequest(context: Context = undefined) {\r\n        if (!context?.isServer) {\r\n            var prots = [];\r\n            for (let x = 0; x < this.statements.length; x++) {\r\n                let st = this.statements[x];\r\n                if (st.result !== \"**unresolved**\")\r\n                    prots.push(undefined);\r\n                else\r\n                    prots.push(st.remoteProtocol.stringify(st.remoteProtocol));\r\n            }\r\n            var sic = this.statements;\r\n            this.statements = prots;\r\n            var ret = await this.call(this, this.sendRequest, context);\r\n            this.statements = sic;\r\n            for (let x = 0; x < this.statements.length; x++) {\r\n                this.statements[x].resolve(ret[x]);\r\n            }\r\n            this.ready();\r\n            //ret is not what we want - perhaps there is a modification\r\n            /* let ret2=[];\r\n             for(let x=0;x<this.statements.length;x++){\r\n                 ret2.push(await this.statements[x].promise);\r\n             }\r\n             this.resolve(ret);*/\r\n            return true;\r\n        } else {\r\n            //@ts-ignore\r\n\r\n\r\n            //@ts-ignore\r\n            var ObjectTransaction = (await import(\"jassijs/remote/ObjectTransaction\")).ObjectTransaction;\r\n            var ot = new ObjectTransaction();\r\n            ot.statements = [];\r\n            let ret = [];\r\n            for (let x = 0; x < this.statements.length; x++) {\r\n                var stat: any = {\r\n                    result: \"**unresolved**\"\r\n\r\n                }\r\n                ot.statements.push(stat);\r\n            }\r\n            for (let x = 0; x < this.statements.length; x++) {\r\n                ret.push( this.doServerStatement(this.statements, ot, x, context));\r\n            }\r\n            for(let x=0;x<ret.length;x++){\r\n                ret[x]=await ret[x];\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n\r\n    }\r\n    private async doServerStatement(statements, ot/*:ObjectTransaction*/, num: number, context) {\r\n        //@ts-ignore\r\n        var _execute = (await import(\"jassijs/server/DoRemoteProtocol\"))._execute;\r\n        var _this = this;\r\n        var newcontext: any = {};\r\n        Object.assign(newcontext, context);\r\n        newcontext.objecttransaction = ot;\r\n        newcontext.objecttransactionitem = ot.statements[num];\r\n        //@ts-ignore\r\n        ot.statements[num].result = _execute(<string>_this.statements[num], context.request, newcontext);\r\n\r\n        return ot.statements[num].result;\r\n\r\n    }\r\n    public add(obj: any, method: (...args) => any, ...params) {\r\n\r\n        var ti = new TransactionItem();\r\n        ti.method = method;\r\n        ti.obj = obj;\r\n        ti.params = params;\r\n        ti.transaction=this;\r\n        \r\n        this.statements.push(ti);\r\n    }\r\n\r\n}","import { $Class } from \"jassijs/remote/Registry\";\r\n\r\n@$Class(\"jassijs.remote.Test\")\r\nexport class Test {\r\n\r\n    /**\r\n     * fails if the condition is false\r\n     * @parameter condition \r\n     **/\r\n    expectEqual(condition: boolean) {\r\n        if (!condition)\r\n            throw new Error(\"Test fails\");\r\n    }\r\n    /**\r\n     * fails if the func does not throw an error\r\n     * @parameter func - the function that should failed\r\n     **/\r\n    expectError(func) {\r\n        try {\r\n\r\n            if (func.toString().startsWith(\"async \")) {\r\n                var errobj;\r\n                try {\r\n                    throw new Error(\"test fails\");\r\n                } catch (err) {\r\n                    errobj = err;\r\n                }\r\n                func().then(() => {\r\n                    throw errobj;\r\n                }).catch((err) => {\r\n                    if (err.message === \"test fails\")\r\n                        throw errobj;\r\n                    var k = 1;//io\r\n                });\r\n                return;\r\n            } else {\r\n                func();\r\n            }\r\n        } catch {\r\n            return;//io\r\n        }\r\n        throw new Error(\"test fails\");\r\n    }\r\n    /**\r\n    * fails if the func does not throw an error\r\n    * @parameter func - the function that should failed\r\n    **/\r\n    async expectErrorAsync(func) {\r\n        var errors = false;\r\n        try {\r\n            var errobj;\r\n\r\n            await func().then((e) => {\r\n\r\n            }).catch((e) => {\r\n                errors = true;\r\n            });\r\n        } catch {\r\n            errors = true;\r\n        }\r\n        if (!errors)\r\n            throw new Error(\"test fails\");\r\n    }\r\n}","import \"reflect-metadata\";\r\nimport { Test } from \"jassijs/remote/Test\";\r\n\r\nconst paramMetadataKey = Symbol(\"paramMetadataKey\");\r\n\r\nexport class ValidationOptions {\r\n    message?: string;\r\n}\r\n\r\nexport function registerValidation(name: string, options: ValidationOptions, func: (target: any, propertyName: string, value: any, options: any) => string) {\r\n    return (target, propertyKey: string, parameterIndex: number) => {\r\n        //@ts-ignore\r\n        let params = Reflect.getOwnMetadata(paramMetadataKey, target, propertyKey) || {};\r\n        if (params[parameterIndex] === undefined)\r\n            params[parameterIndex] = {};\r\n        params[parameterIndex][name] = {\r\n            func,\r\n            options\r\n        }\r\n        //@ts-ignore\r\n        Reflect.defineMetadata(paramMetadataKey, params, target, propertyKey);\r\n    };\r\n}\r\n\r\nfunction translateMessage(msg: string, rule: string, property: string, target, value, options: ValidationOptions) {\r\n    if (msg === undefined)\r\n        return undefined;\r\n    var ret: string = options?.message ? options?.message : msg;\r\n    ret = ret.replaceAll(\"{rule}\", rule).replaceAll(\"{property}\", property).replaceAll(\"{target}\", target).replaceAll(\"{value}\", value);\r\n    if (options) {\r\n        for (var key in options) {\r\n            ret = ret.replaceAll(\"{\" + key + \"}\", options[key]);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport class ValidationError {\r\n    value: object;\r\n    target: object;\r\n    property: string;\r\n    message: string;\r\n    constructor(value, target, property: string, message: string) {\r\n        this.value = value;\r\n        this.target = target;\r\n        this.property = property;\r\n        this.message = message;\r\n    }\r\n}\r\nclass ValidateOptions {\r\n    /**\r\n     * e.g. {ValidateInt:{optional:false}} delegates optional:false to all ValidateInt rules\r\n     * e.g. {ALL:{optional:false}} delegates optional:false to all Validators rules}\r\n     */\r\n    delegateOptions?: { [ValidatorClassName: string]: any };\r\n}\r\nexport function validate(obj, options: ValidateOptions = undefined, raiseError: boolean = undefined): ValidationError[] {\r\n    var ret: ValidationError[] = [];\r\n    var target = obj.__proto__;\r\n    for (var propertyName in obj) {\r\n        //@ts-ignore\r\n        let params = Reflect.getOwnMetadata(paramMetadataKey, target, propertyName);\r\n        if (params) {\r\n            for (var p in params) {\r\n                for (var rule in params[p]) {\r\n                    //@ts-ignore\r\n                    var val = obj[propertyName];\r\n                    var func = params[p][rule].func;\r\n\r\n                    var opts = Object.assign({}, params[p][rule].options);\r\n                    if (options?.delegateOptions?.ALL) {\r\n                        opts = Object.assign(opts, options?.delegateOptions?.ALL);\r\n                    }\r\n                    if (options?.delegateOptions&&options?.delegateOptions[rule]) {\r\n                        opts = Object.assign(opts, options?.delegateOptions[rule]);\r\n                    }\r\n                    var err = func(target, propertyName, val, opts);\r\n                    var test = translateMessage(err, rule, propertyName, obj, val, params[p][rule].options);\r\n                    if (test !== undefined)\r\n                        ret.push(new ValidationError(val, target, propertyName, test));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (raiseError && ret.length > 0) {\r\n        var sret = [];\r\n        ret.forEach((err) => sret.push(\"ValidationError \" + err.property + \": \" + err.message));\r\n        throw new Error(sret.join(\"\\r\\n\"));\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport class ValidationIsArrayOptions extends ValidationOptions {\r\n    optional?: boolean;\r\n    type?: (type?: any) => any;\r\n    alternativeJsonProperties?: string[];\r\n}\r\n\r\nexport function ValidateIsArray(options?: ValidationIsArrayOptions): Function {\r\n    return registerValidation(\"ValidateIsArray\", options,\r\n        (target: any, propertyName: string, val: any, options) => {\r\n            if ((val === undefined || val === null) && options?.optional === true)\r\n                return undefined;\r\n            if (!Array.isArray(val))\r\n                return \"value {value} is not an array\";\r\n            if (options?.type) { \r\n                for (var x = 0; x < val.length; x++) {\r\n                    var tp=options.type();\r\n                    if (val[x] !== undefined && !(val[x] instanceof tp)) {\r\n                        if (typeof val[x] === 'string' && tp == String)\r\n                            continue;\r\n                        if (typeof val[x] === 'number' && tp == Number)\r\n                            continue;\r\n                        if (typeof val[x] === 'boolean' && tp == Boolean)\r\n                            continue;\r\n                        if (options?.alternativeJsonProperties) {\r\n                            for (var x = 0; x < options.alternativeJsonProperties.length; x++) {\r\n                                var key = options.alternativeJsonProperties[x];\r\n                                if (val[x][key] === undefined)\r\n                                    return propertyName + \" is not array of type \" + tp.name;\r\n                            }\r\n                        } else\r\n                            return \"value {value} is not an array ot type \" + tp.name;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport class ValidationIsBooleanOptions extends ValidationOptions {\r\n    optional?: boolean;\r\n    type?: any;\r\n}\r\nexport function ValidateIsBoolean(options?: ValidationIsBooleanOptions): Function {\r\n    return registerValidation(\"ValidateIsBoolean\", options,\r\n        (target: any, propertyName: string, val: any, options) => {\r\n            if ((val === undefined || val === null) && options?.optional === true)\r\n                return undefined;\r\n            if (typeof val !== 'boolean')\r\n                return propertyName + \" is not a Boolean\";\r\n        }\r\n    )\r\n}\r\n\r\nexport class ValidationIsDateOptions extends ValidationOptions {\r\n    optional?: boolean;\r\n}\r\nexport function ValidateIsDate(options?: ValidationIsDateOptions): Function {\r\n    return registerValidation(\"ValidateIsDate\", options,\r\n        (target: any, propertyName: string, val: any, options) => {\r\n            if ((val === undefined || val === null) && options?.optional === true)\r\n                return undefined;\r\n            if (!(val instanceof Date && !isNaN(val.valueOf())))\r\n                return propertyName + \" is not a date\"\r\n        }\r\n    )\r\n}\r\n\r\nexport function ValidateFunctionParameter(): Function {\r\n    return (target, propertyName, descriptor: PropertyDescriptor, options) => {\r\n        let method = descriptor.value;\r\n        if (method === undefined)\r\n            throw new Error(\"sdfgsdfgsfd\");\r\n        const funcname = method.name;\r\n        const { [funcname]: newfunc } = {//we need named function!\r\n            [funcname]: function () {\r\n                //@ts-ignore\r\n                let params = Reflect.getOwnMetadata(paramMetadataKey, target, propertyName);\r\n                if (params) {\r\n                    for (var p in params) {\r\n                        for (var rule in params[p]) {\r\n                            //@ts-ignore\r\n                            var arg = (p > arguments.length) ? undefined : arguments[p];\r\n                            var val = arguments[p];\r\n                            var func = params[p][rule].func;\r\n                            var opt = params[p][rule].options;\r\n                            var err = func(target, \"parameter \" + p, val, opt);\r\n                            var test = translateMessage(err, rule, propertyName, target, val, params[p][rule].options);\r\n                            if (test !== undefined)\r\n                                throw new Error(test);\r\n                        }\r\n                    }\r\n                }\r\n                return method.apply(this, arguments);\r\n            }\r\n        }\r\n        descriptor.value = newfunc;\r\n    };\r\n}\r\nexport class ValidationIsInOptions extends ValidationOptions {\r\n    optional?: boolean;\r\n    in: any[];\r\n}\r\nexport function ValidateIsIn(options?: ValidationIsInOptions): Function {\r\n    return registerValidation(\"ValidateIsIn\", options,\r\n        (target: any, propertyName: string, val: any, options:ValidationIsInOptions) => {\r\n            if ((val === undefined || val === null) && options?.optional === true)\r\n                return undefined;\r\n            if(options.in.indexOf(val)===-1)\r\n                return propertyName + \" is not valid\";\r\n        }\r\n    )\r\n}\r\nexport class ValidationIsInstanceOfOptions extends ValidationOptions {\r\n    optional?: boolean;\r\n    type: (type?: any) => any;\r\n    /**\r\n     * [\"id\"] means an object {id:9} is also a valid type\r\n     */\r\n    alternativeJsonProperties?: string[];\r\n}\r\nexport function ValidateIsInstanceOf(options?: ValidationIsInstanceOfOptions): Function {\r\n    return registerValidation(\"ValidateIsInstanceOf\", options,\r\n        (target: any, propertyName: string, val: any, options) => {\r\n            if ((val === undefined || val === null) && options?.optional === true)\r\n                return undefined;\r\n            var tp=options.type();\r\n            if (!(val instanceof tp)) {\r\n                if (options?.alternativeJsonProperties) {\r\n                    for (var x = 0; x < options.alternativeJsonProperties.length; x++) {\r\n                        var key = options.alternativeJsonProperties[x];\r\n                        if (val[key] === undefined)\r\n                            return propertyName + \" is not of type \" + tp.name;\r\n                    }\r\n                } else\r\n                    return propertyName + \" is not of type \" + tp.name;\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport class ValidationIsIntOptions extends ValidationOptions {\r\n    optional?: boolean;\r\n}\r\nexport function ValidateIsInt(options?: ValidationIsIntOptions): Function {\r\n    return registerValidation(\"ValidateIsInt\", options,\r\n        (target: any, propertyName: string, val: any, options) => {\r\n            if ((val === undefined || val === null) && options?.optional === true)\r\n                return undefined;\r\n            if (!Number.isInteger(val))\r\n                return propertyName + \" is not an Integer\";\r\n        }\r\n    )\r\n}\r\n\r\nexport class ValidationMaxOptions extends ValidationOptions {\r\n    max: number;\r\n}\r\nexport function ValidateMax(options: ValidationMaxOptions): Function {\r\n    return registerValidation(\"ValidateMax\", options,\r\n        (target: any, propertyName: string, val: any, options) => {\r\n            if (options?.max && val > options?.max)\r\n                return \"value {value} is not longer then {max}\"\r\n        }\r\n    )\r\n}\r\nexport class ValidationMinOptions extends ValidationOptions {\r\n    min: number;\r\n}\r\nexport function ValidateMin(options: ValidationMinOptions): Function {\r\n    return registerValidation(\"ValidateMin\", options,\r\n        (target: any, propertyName: string, val: any, options) => {\r\n            if (options?.min && val < options?.min)\r\n                return \"value {value} is not smaller then {min}\"\r\n        }\r\n    )\r\n}\r\n\r\nexport class ValidationIsNumberOptions extends ValidationOptions {\r\n    optional?: boolean;\r\n}\r\nexport function ValidateIsNumber(options?: ValidationIsNumberOptions): Function {\r\n    return registerValidation(\"ValidateIsNumber\", options,\r\n        (target: any, propertyName: string, val: any, options) => {\r\n            if ((val === undefined || val === null) && options?.optional === true)\r\n                return undefined;\r\n            if (!(typeof val === 'number' && isFinite(val)))\r\n                return propertyName + \" is not a Number\";\r\n        }\r\n    )\r\n}\r\n\r\nexport class ValidationIsStringOptions extends ValidationOptions {\r\n    optional?: boolean;\r\n}\r\nexport function ValidateIsString(options?: ValidationIsIntOptions): Function {\r\n    return registerValidation(\"ValidateIsInt\", options,\r\n        (target: any, propertyName: string, val: any, options) => {\r\n            if ((val === undefined || val === null) && options?.optional === true)\r\n                return undefined;\r\n            if (typeof val !== 'string' && !(val instanceof String))\r\n                return propertyName + \" is not a String\";\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass TestSample {\r\n    @ValidateIsInt({ message: \"r:{rule} p:{property} v:{value}\" })\r\n    @ValidateMax({ max: 10, message: \"{max}\" })\r\n    @ValidateMin({ min: 5, message: \"{value} is smaller then {min}\" })\r\n    id: number;\r\n    @ValidateFunctionParameter()\r\n    async call(@ValidateIsInt() num, @ValidateIsString({ optional: true }) text = undefined) {\r\n        return num;\r\n    }\r\n\r\n    @ValidateIsString({ optional: true, message: \"no string\" })\r\n    str;\r\n\r\n    @ValidateIsInstanceOf({ type: t=>TestSample })\r\n    test: any = this;\r\n\r\n    @ValidateIsArray({ type: t=>TestSample })\r\n    testarr: any = [this];\r\n\r\n    @ValidateIsNumber()\r\n    num: any = 9.1;\r\n\r\n    @ValidateIsBoolean()\r\n    bol: any = true;\r\n\r\n    @ValidateIsIn({in:[1,\"2\",\"3\"]})\r\n    inprop:any=1;\r\n}\r\n\r\nexport async function test(test: Test) {\r\n\r\n    var obj = new TestSample();\r\n    obj.id = 8;\r\n    var hh = validate(obj);\r\n    test.expectEqual(validate(obj).length === 0);\r\n    //@ts-ignore\r\n    obj.id = \"8\";\r\n    test.expectEqual(validate(obj)[0].message === \"r:ValidateIsInt p:id v:8\");\r\n    test.expectEqual(await obj.call(8) === 8);\r\n    test.expectError(() => obj.call(\"8\"));\r\n    obj.id = 0;\r\n    test.expectEqual(validate(obj)[0].message === \"0 is smaller then 5\");\r\n    obj.id = 20;\r\n    test.expectEqual(validate(obj)[0].message === \"10\");\r\n    obj.str = 20;\r\n    obj.id = 8;\r\n    var hdh = validate(obj)[0].message;\r\n    test.expectError(() => validate(obj, undefined, true));\r\n    test.expectEqual(validate(obj)[0].message === \"no string\");\r\n    test.expectEqual(await obj.call(8, \"ok\") === 8);\r\n    test.expectError(() => obj.call(\"8\", 8));\r\n    test.expectEqual(await obj.call(8, \"ok\") === 8);\r\n    obj.str = \"kk\";\r\n    test.expectEqual(validate(obj).length === 0);\r\n    obj.num = \"1.2\";\r\n    test.expectError(() => validate(obj, undefined, true));\r\n    obj.num = 1.2;\r\n    obj.testarr = 8;\r\n    test.expectError(() => validate(obj, undefined, true));\r\n    obj.testarr = [8];\r\n    test.expectError(() => validate(obj, undefined, true));\r\n    obj.testarr = [];\r\n    test.expectEqual(validate(obj).length === 0);\r\n\r\n    obj.bol = \"\";\r\n    test.expectError(() => validate(obj, undefined, true));\r\n    obj.bol = true;\r\n    test.expectEqual(validate(obj).length === 0);\r\n\r\n    obj.test = { kk: 9 };\r\n    test.expectError(() => validate(obj, undefined, true));\r\n    obj.test = { id: 9 };\r\n    test.expectEqual(validate(obj, {\r\n        delegateOptions: {\r\n            ValidateIsInstanceOf: { alternativeJsonProperties: [\"id\"] }\r\n        }\r\n    }).length === 0);\r\n    obj.test = obj;\r\n    obj.testarr = [{ id: 8 }];\r\n    test.expectError(() => validate(obj, undefined, true));\r\n\r\n    test.expectEqual(validate(obj, {\r\n        delegateOptions: {\r\n            ValidateIsArray: { alternativeJsonProperties: [\"id\"] }\r\n        }\r\n    }).length === 0);\r\n    obj.testarr=[];\r\n    test.expectEqual(validate(obj).length === 0);\r\n    obj.inprop=5;\r\n    test.expectError(() => validate(obj, undefined, true));\r\n    obj.inprop=\"2\";\r\n    test.expectEqual(validate(obj).length === 0);\r\n\r\n   \r\n}\r\n\r\ninterface MyOB {\r\n    hallo();\r\n\r\n}\r\nvar l: MyOB;\r\n\r\n\r\n","import { $Class } from \"jassijs/remote/Registry\";\r\nimport { classes, JassiError } from \"jassijs/remote/Classes\";\r\nimport { Context, RemoteObject } from \"jassijs/remote/RemoteObject\";\r\nimport registry from \"jassijs/remote/Registry\";\r\nlet cl = classes;//force Classes\r\nimport { Entity, EntityOptions } from \"jassijs/util/DatabaseSchema\";\r\nimport { db } from \"jassijs/remote/Database\";\r\nimport { Transaction } from \"jassijs/remote/Transaction\";\r\nimport { validate, ValidationError, ValidationOptions } from \"jassijs/remote/Validator\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\n\r\nexport function $DBObject(options?: EntityOptions): Function {\r\n    return function (pclass, ...params) {\r\n        var classname = classes.getClassName(pclass);\r\n        if (!options)\r\n            options = {};\r\n        if (!options.name)\r\n            options.name = classname.toLowerCase().replaceAll(\".\", \"_\");\r\n        registry.register(\"$DBObject\", pclass, options);\r\n        Entity(options)(pclass, ...params);//pass to orginal Entitiy\r\n    }\r\n}\r\nexport class MyFindManyOptions {\r\n    relations?: string[];\r\n    [sampleproperty: string]: any;\r\n    /**\r\n     * \r\n     * where e.g. id>5\r\n     */\r\n    where?: string;\r\n    /**\r\n     * e.g. where:\"id>:param\" ,whereParams:{param:5}\r\n     */\r\n    whereParams?: any;\r\n    /**\r\n   * Offset (paginated) where from entities should be taken.\r\n   */\r\n    skip?: number;\r\n    /**\r\n     * Limit (paginated) - max number of entities should be taken.\r\n     */\r\n    take?: number;\r\n    /**\r\n    * Order, in which entities should be ordered.\r\n    */\r\n    order?: {\r\n        [field: string]: \"ASC\" | \"DESC\" | 1 | -1;\r\n    };\r\n}\r\n/**\r\n* base class for all database entfities\r\n* all objects which use the jassijs.db must implement this\r\n* @class DBObject\r\n*/\r\n@$Class(\"jassijs.remote.DBObject\")\r\nexport class DBObject extends RemoteObject {\r\n    id: number | string;\r\n    private static cache: { [classname: string]: { [id: string]: DBObject } } = {};\r\n    private static _init = DBObject._initFunc();\r\n    //clear cache on reload\r\n    private static _initFunc() {\r\n\r\n        registry.onregister(\"$Class\", (data: new (...args: any[]) => any, name: string) => {\r\n            delete DBObject.cache[name];\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n    public isAutoId() {\r\n        var h = db;\r\n        var def = db.getMetadata(this.constructor)?.fields;\r\n        return def.id.PrimaryGeneratedColumn !== undefined;\r\n    }\r\n    public static getFromCache(classname: string, id: number | string): DBObject {\r\n        if (!DBObject.cache[classname])\r\n            return undefined;\r\n        return DBObject.cache[classname][id.toString()];\r\n    }\r\n    public async validate(options=undefined,throwError=false):Promise<ValidationError[]>{\r\n        var ret=validate(this,options,throwError);\r\n        return ret;\r\n    }\r\n    private static addToCache(ob) {\r\n        if (ob === undefined)\r\n            return undefined;\r\n        var clname = classes.getClassName(ob);\r\n        var cl = DBObject.cache[clname];\r\n        if (cl === undefined) {\r\n            cl = {};\r\n            DBObject.cache[clname] = cl;\r\n        }\r\n        cl[ob.id] = ob;\r\n    }\r\n    public static clearCache(classname: string) {\r\n        DBObject.cache[classname] = {};\r\n    }\r\n    public removeFromCache() {\r\n\r\n        var clname = classes.getClassName(this);\r\n        if (!DBObject.cache[clname])\r\n            return;\r\n        delete DBObject.cache[clname][this.id.toString()];\r\n    }\r\n    public static _createObject(ob) {\r\n        if (ob === undefined)\r\n            return undefined;\r\n        var cl = DBObject.cache[ob.__clname__];\r\n        if (cl === undefined) {\r\n            cl = {};\r\n            DBObject.cache[ob.__clname__] = cl;\r\n        }\r\n        var ret = cl[ob.id];\r\n        if (ret === undefined) {\r\n            ret = new (classes.getClass(ob.__clname__))();\r\n            cl[ob.id] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n    //public id:number;\r\n\r\n    /**\r\n     * replace all childs objects with {id:}\r\n     */\r\n    private _replaceObjectWithId(obj: any): any {\r\n        var ret = {}\r\n        if (obj === undefined)\r\n            return undefined;\r\n        for (var key in obj) {\r\n            ret[key] = obj[key];\r\n            if (ret[key] !== undefined && ret[key] !== null && ret[key].id !== undefined) {\r\n                ret[key] = { id: ret[key].id };\r\n            }\r\n            if (Array.isArray(ret[key])) {\r\n                ret[key] = [];\r\n                for (var i = 0; i < obj[key].length; i++) {\r\n                    ret[key].push(obj[key][i]);\r\n                    if (ret[key][i] !== undefined && ret[key][i] !== null && ret[key][i].id !== undefined) {\r\n                        ret[key][i] = { id: ret[key][i].id };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n    * save the object to jassijs.db\r\n    */\r\n    async save(context: Context = undefined) {\r\n        await this.validate({\r\n        delegateOptions: {\r\n            ValidateIsInstanceOf: { alternativeJsonProperties: [\"id\"] },\r\n            ValidateIsArray: { alternativeJsonProperties: [\"id\"] }\r\n        }\r\n        });\r\n        if (!context?.isServer) {\r\n            if (this.id !== undefined) {\r\n                var cname = classes.getClassName(this);\r\n                /* var cl = DBObject.cache[cname];\r\n                 if (cl === undefined) {\r\n                     cl = {};\r\n                     DBObject.cache[cname] = cl;\r\n                 }*/\r\n                var cached = DBObject.getFromCache(cname, this.id);\r\n                if (cached === undefined) {\r\n                    DBObject.addToCache(this);//must be cached before inserting, so the new properties are introduced to the existing\r\n                    if (this.isAutoId())\r\n                        throw new JassiError(\"autoid - load the object  before saving or remove id\");\r\n                    else\r\n                        return await this.call(this, this._createObjectInDB, context);\r\n                    //}//fails if the Object is saved before loading \r\n                } else {\r\n                    if (cached !== this) {\r\n                        throw new JassiError(\"the object must be loaded before save\");\r\n                    }\r\n                }\r\n                DBObject.addToCache(this);\r\n                //                cl[this.id] = this;//Update cache on save\r\n                var newob = this._replaceObjectWithId(this);\r\n                var id = await this.call(newob, this.save, context);\r\n                this.id = id;\r\n                return this;\r\n            } else {\r\n                if (!this.isAutoId()) {\r\n                    throw new JassiError(\"error while saving the Id is not set\");\r\n                } else {\r\n                    var newob = this._replaceObjectWithId(this);\r\n                    var h = await this.call(newob, this._createObjectInDB, context);\r\n                    this.id = h;\r\n                    DBObject.addToCache(this);\r\n                    //                \t DBObject.cache[classes.getClassName(this)][this.id]=this;\r\n                    return this;\r\n                }\r\n            }\r\n        } else {\r\n            return (await serverservices.db).save(context, this);\r\n        }\r\n    }\r\n    async _createObjectInDB(context: Context = undefined) {\r\n        if (!context?.isServer) {\r\n            throw new JassiError(\"createObject could oly be called on server\");\r\n\r\n        } else {\r\n            return (await serverservices.db).insert(context, this);\r\n        }\r\n    }\r\n    static async findOne(options = undefined, context: Context = undefined): Promise<DBObject> {\r\n        if (!context?.isServer) {\r\n            return await this.call(this.findOne, options, context);\r\n        } else {\r\n            return (await serverservices.db).findOne(context, this, options);\r\n        }\r\n    }\r\n    static async find(options: MyFindManyOptions = undefined, context: Context = undefined): Promise<DBObject[]> {\r\n        if (!context?.isServer) {\r\n            return await this.call(this.find, options, context);\r\n        } else {\r\n            return (await serverservices.db).find(context, this, options);\r\n        }\r\n    }\r\n    /**\r\n    * reload the object from jassijs.db\r\n    */\r\n    async remove(context: Context = undefined) {\r\n        if (!context?.isServer) {\r\n            //@ts-ignore\r\n            var cl = DBObject.cache[classes.getClassName(this)];\r\n            if (cl !== undefined) {\r\n                delete cl[this.id];\r\n            }\r\n\r\n            return await this.call({ id: this.id }, this.remove, context);\r\n        } else {\r\n            //@ts-ignore\r\n            return (await serverservices.db).remove(context, this);\r\n        }\r\n    }\r\n\r\n    _getObjectProperty(dummy) {\r\n\r\n    }\r\n    _setObjectProperty(dummy, dumm1) {\r\n\r\n    }\r\n}\r\n\r\nexport async function test() {\r\n    var h = db.getMetadata(classes.getClass(\"de.Kunde\"));\r\n    // debugger;\r\n}\r\n","import { $DBObject, DBObject } from \"jassijs/remote/DBObject\";\r\nimport { $Class } from \"jassijs/remote/Registry\";\r\nimport {JoinTable, Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToMany, ManyToOne, OneToMany } from \"jassijs/util/DatabaseSchema\";\r\nimport { Group } from \"jassijs/remote/security/Group\";\r\nimport { ValidateIsArray, ValidateIsInt, ValidateIsNumber, ValidateIsString } from \"jassijs/remote/Validator\";\r\n\r\n \r\n//import \"jassijs/ext/enableExtension.js?de.Kunde\";\r\n@$DBObject({name:\"jassijs_parentright\"})\r\n@$Class(\"jassijs.security.ParentRight\")\r\n \r\nexport class ParentRight extends DBObject  {\r\n    @ValidateIsInt({optional:true})\r\n    @PrimaryGeneratedColumn()\r\n    declare id: number;\r\n\r\n    @ValidateIsString()\r\n    @Column() \r\n    name:string;\r\n\r\n    @ValidateIsString()\r\n    @Column()\r\n    classname:string;\r\n\r\n    @ValidateIsNumber({optional:true})\r\n    @Column({nullable:true})\r\n    i1:number;\r\n\r\n    @ValidateIsNumber({optional:true})\r\n    @Column({nullable:true})\r\n    i2:number;\r\n\r\n    @ValidateIsString({optional:true})\r\n    @Column({nullable:true})\r\n    s1:string;\r\n\r\n    @ValidateIsString({optional:true})\r\n    @Column({nullable:true})\r\n    s2:string;\r\n\r\n    @ValidateIsArray({optional:true,type:type=>Group})\r\n    @ManyToMany(type=>Group,ob=>ob.parentRights)\r\n    groups:Group[]\r\n}","import { $DBObject, DBObject } from \"jassijs/remote/DBObject\";\r\nimport { $Class } from \"jassijs/remote/Registry\";\r\nimport {JoinTable, Entity, PrimaryColumn, Column, OneToOne, ManyToMany, ManyToOne, OneToMany } from \"jassijs/util/DatabaseSchema\";\r\nimport { Group } from \"jassijs/remote/security/Group\";\r\nimport { ValidateIsArray, ValidateIsInt, ValidateIsString } from \"jassijs/remote/Validator\";\r\n\r\n//import \"jassijs/ext/enableExtension.js?de.Kunde\";\r\n@$DBObject({name:\"jassijs_right\"})\r\n@$Class(\"jassijs.security.Right\")\r\n\r\nexport class Right extends DBObject  {\r\n    @ValidateIsInt({optional:true})\r\n    @PrimaryColumn()\r\n    declare id: number;\r\n\r\n    @ValidateIsString()\r\n    @Column()\r\n    name:string;\r\n\r\n    @ValidateIsArray({optional:true,type:type=>Group})\r\n    @ManyToMany(type=>Group,ob=>ob.rights)\r\n    groups:Group[]\r\n}","import { $DBObject, DBObject } from \"jassijs/remote/DBObject\";\r\nimport { $Class } from \"jassijs/remote/Registry\";\r\nimport { JoinTable,Entity, PrimaryColumn, Column, OneToOne, ManyToMany, ManyToOne, OneToMany } from \"jassijs/util/DatabaseSchema\";\r\nimport { ParentRight } from \"jassijs/remote/security/ParentRight\";\r\nimport { User } from \"jassijs/remote/security/User\";\r\nimport { Right } from \"jassijs/remote/security/Right\";\r\nimport { ValidateIsArray, ValidateIsInt, ValidateIsString } from \"jassijs/remote/Validator\";\r\n\r\n\r\n\r\n//import \"jassijs/ext/enableExtension.js?de.Kunde\";\r\n@$DBObject({name:\"jassijs_group\"})\r\n@$Class(\"jassijs.security.Group\")\r\n\r\nexport class Group extends DBObject  {\r\n \r\n    @ValidateIsInt({optional:true})\r\n    @PrimaryColumn()\r\n    declare id: number;\r\n\r\n    @ValidateIsString()\r\n    @Column()\r\n    name:string;\r\n\r\n    @ValidateIsArray({optional:true,type:type=>ParentRight})\r\n    @JoinTable()\r\n    @ManyToMany(type=>ParentRight,ob=>ob.groups)\r\n    parentRights:ParentRight[];\r\n\r\n    @ValidateIsArray({optional:true,type:type=>Right})\r\n    @JoinTable()\r\n    @ManyToMany(type=>Right,ob=>ob.groups)\r\n    rights:Right[];\r\n\r\n    @ValidateIsArray({optional:true,type:type=>User})\r\n    @ManyToMany(type=>User,ob=>ob.groups)\r\n    users:User[];\r\n    \r\n}","import { $DBObject, DBObject } from \"jassijs/remote/DBObject\";\r\nimport { $Class } from \"jassijs/remote/Registry\";\r\nimport {  PrimaryGeneratedColumn,JoinTable,Entity, PrimaryColumn, Column, OneToOne, ManyToMany, ManyToOne, OneToMany } from \"jassijs/util/DatabaseSchema\";\r\nimport { Group } from \"jassijs/remote/security/Group\";\r\nimport { ParentRight } from \"jassijs/remote/security/ParentRight\";\r\nimport { Context } from \"jassijs/remote/RemoteObject\";\r\nimport { ValidateIsArray, ValidateIsBoolean, ValidateIsNumber, ValidateIsString } from \"jassijs/remote/Validator\";\r\n\r\n \r\n\r\n@$DBObject({name:\"jassijs_user\"})\r\n@$Class(\"jassijs.security.User\")\r\n\r\nexport class User extends DBObject  {\r\n\t@ValidateIsNumber({optional:true})\r\n    @PrimaryGeneratedColumn()\r\n    declare id: number;\r\n\t\r\n\t@ValidateIsString()\r\n    @Column()\r\n    email:string;\r\n\t\r\n\t@ValidateIsString({optional:true})\r\n    @Column({select: false})\r\n    password:string;\r\n\r\n\t@ValidateIsArray({optional:true,type:type=>Group})\r\n    @JoinTable()\r\n    @ManyToMany(type=>Group,ob=>ob.users)\r\n\tgroups:Group[];\r\n\r\n\t@ValidateIsBoolean({optional:true})\r\n\t@Column({nullable:true})\r\n    isAdmin:boolean;\r\n    \r\n\tstatic async  findWithRelations(){\r\n\t\treturn this.find({relations:[\"*\"]});\r\n\t}\r\n     /**\r\n    * reload the object from jassijs.db\r\n    */\r\n    async hallo(context:Context=undefined) {\r\n        if (!context?.isServer) {\r\n            return await this.call(this,this.hallo,context);\r\n        } else {\r\n\t\t\treturn 11;\r\n        }\r\n\t}\r\n\tasync save(context:Context=undefined){\r\n\t\treturn await super.save(context); \r\n\t}\r\n}\r\nexport async function test(){\r\n\t\r\n\tvar gps=await (Group.find({}));\r\n\t\r\n}\r\nexport async function test2(){\r\n\tvar user=new User();\r\n\tuser.id=1;\r\n\tuser.email=\"a@b.com\";\r\n\tuser.password=\"\";\r\n\t\r\n\tvar group1=new Group();\r\n\tgroup1.id=1;\r\n\tgroup1.name=\"Mandanten I\";\r\n\t\r\n\t\r\n\tvar group2=new Group();\r\n\tgroup2.id=2;\r\n\tgroup2.name=\"Mandanten 2\";\r\n\r\n\r\n\tvar pr1=new ParentRight();\r\n\tpr1.id=10;\r\n\tpr1.classname=\"de.Kunde\";\r\n\tpr1.name=\"Kunden\";\r\n\tpr1.i1=1;\r\n\tpr1.i2=4;\r\n\tawait \tpr1.save();\r\n\t\r\n\tvar pr2=new ParentRight();\r\n\tpr2.id=11;\r\n\tpr2.classname=\"de.Kunde\";\r\n\tpr2.name=\"Kunden\";\r\n\tpr2.i1=6;\r\n\tpr2.i2=10;\r\n\tawait pr2.save();\r\n\tgroup1.parentRights=[pr1];\r\n\tawait group1.save();\r\n\tgroup2.parentRights=[pr2];\r\n\tawait group2.save();\r\n\tuser.groups=[group1,group2];\r\n\tawait user.save();\r\n\t\r\n\t\r\n}","\r\nimport { User } from \"jassijs/remote/security/User\";\r\n\r\nexport class UserModel{\r\n    static secret=\"TODO change this\";\r\n    \r\n}","import { classes } from \"jassijs/remote/Classes\";\r\nimport registry from \"jassijs/remote/Registry\";\r\nimport {DBObject} from \"jassijs/remote/DBObject\";\r\n\r\n\r\nexport class DBObjectQueryProperties{\r\n\tname:string;\r\n\tdescription?:string;\r\n}\r\nexport function $DBObjectQuery(property:DBObjectQueryProperties):Function{\r\n     return function(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\r\n        var test=classes.getClassName(target);\r\n        registry.registerMember(\"$DBObjectQuery\",target,propertyKey,property);\r\n    }\r\n}\r\n\r\nexport class DBObjectQuery{\r\n\tclassname:string; \r\n\tname:string;\r\n\tdescription:string;\r\n\t_function;\r\n\tasync execute():Promise<DBObject>{\r\n\t\treturn undefined;\r\n\t}\r\n\tstatic async getQueries(classname:string):Promise<DBObjectQuery[]>{\r\n\t\tvar cl=await classes.loadClass(classname);\r\n\t\tvar ret:DBObjectQuery[]=[];\r\n\t\tvar all=registry.getMemberData(\"$DBObjectQuery\");\r\n\t\tvar queries=all[classname];\r\n\t\tfor(var name in queries){\r\n\t\t\tvar qu:DBObjectQueryProperties=queries[name][0][0];\r\n\t\t\tvar query=new DBObjectQuery();\r\n\t\t\tquery.classname=classname;\r\n\t\t\tquery.name=qu.name;\r\n\t\t\tquery.description=qu.description;\r\n\t\t\tquery.execute=async function(){\r\n\t\t\t\treturn await cl[name]();\r\n\t\t\t}\r\n\t\t\tret.push(query);\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n}\r\n\r\nexport async function test(){\r\n//\tvar qu=(await DBObjectQuery.getQueries(\"de.Kunde\"))[0];\r\n//\tvar j=await qu.execute();\r\n\t\r\n}\r\n","import { DBObject, $DBObject, MyFindManyOptions } from \"jassijs/remote/DBObject\";\nimport { $Class } from \"jassijs/remote/Registry\";\nimport { Entity, PrimaryColumn, Column, OneToOne, ManyToMany, ManyToOne, OneToMany, JoinColumn, JoinTable } from \"jassijs/util/DatabaseSchema\";\nimport { $DBObjectQuery } from \"jassijs/remote/DBObjectQuery\";\nimport { Context } from \"jassijs/remote/RemoteObject\";\nimport { JassiError } from \"../Classes\";\nimport { ValidateIsInt, ValidateIsString } from \"jassijs/remote/Validator\";\n@$DBObject({name:\"jassijs_setting\"})\n@$Class(\"jassijs.security.Setting\")\nexport class Setting extends DBObject {\n    @ValidateIsInt({optional:true})\n    @PrimaryColumn()\n    declare id: number;\n    constructor() {\n        super();\n    }\n    \n    @ValidateIsString({optional:true})\n    @Column({\tnullable: true})\n    data: string;\n\n     async save(context:Context=undefined) {\n        throw new JassiError(\"not suported\");\n    }\n    \n    static async findOne(options = undefined,context:Context=undefined): Promise<DBObject> {\n        throw new JassiError(\"not suported\");\n    }\n    static async find(options:MyFindManyOptions = undefined,context:Context=undefined): Promise<DBObject[]> {\n        throw new JassiError(\"not suported\");\n    }\n    /**\n    * reload the object from jassijs.db\n    */\n    async remove(context:Context=undefined) {\n        throw new JassiError(\"not suported\");\n    }\n}\nexport async function test() {\n}\n;\n","import { $Class } from \"jassijs/remote/Registry\";\r\n\r\n@$Class(\"jassijs.remote.ClientError\")\r\nexport class ClientError extends Error{\r\n    constructor(msg:string){\r\n        super(msg);\r\n    }\r\n}","import { $Class } from \"jassijs/remote/Registry\";\nimport { Context, RemoteObject } from \"jassijs/remote/RemoteObject\";\nimport { JassiError } from \"jassijs/remote/Classes\";\nimport { serverservices } from \"jassijs/remote/Serverservice\";\nimport { ValidateFunctionParameter, ValidateIsArray, ValidateIsString } from \"jassijs/remote/Validator\";\n\n@$Class(\"jassijs.remote.DatabaseTools\")\nexport class DatabaseTools extends RemoteObject { \n    //this is a sample remote function\n    @ValidateFunctionParameter()\n    public static async runSQL(@ValidateIsString() sql: string, @ValidateIsArray({optional:true}) parameter: any[] = undefined, context: Context = undefined) {\n        if (!context?.isServer) {\n            return await this.call(this.runSQL, sql, parameter, context);\n        } else {\n            if (!context.request.user.isAdmin)\n                throw new JassiError( \"only admins can delete\");\n            return (await serverservices.db).runSQL(context, sql, parameter); \n        }\n    }\n    public static async dropTables(tables: string[]): Promise<string> {\n        for (var i = 0; i < tables.length; i++) {\n            if ((/[A-Z,a-z,_,0-9]+/g).exec(tables[i])[0] !== tables[i]) {\n                throw new JassiError(tables[i] + \" is not a valid tablename\");\n            }\n        }\n        if (tables.length === 0) {\n            throw new JassiError(\"no tables to drop\")\n        }\n        return await DatabaseTools.runSQL(\"DROP TABLE \" + tables.join(\",\"));\n    }\n}\nexport async function test() {\n    /*  var h=await DatabaseTools.runSQL('DROP TABLE :p1,:p2',[\n                          {p1:\"te_person2\",\n                                      p2:\"tg_person\"}]);//,\"te_person2\"]);*/\n    //var h=await DatabaseTools.runSQL('select * from jassijs_rights'); \n \n}\n","import registry from \"jassijs/remote/Registry\";\r\n\r\n\r\nexport function $Extension(forclass): Function {\r\n    return function (pclass) {\r\n        registry.register(\"$Extension\", pclass, forclass);\r\n    }\r\n}\r\nclass ExtensionTarget{\r\n    oclass:any;\r\n    addFunction(name:string,func:(...any)=>any,ifExists:\"replace\"|\"append\"|\"prepend\"){\r\n\r\n    }\r\n    addMember(name:string){\r\n\r\n    }\r\n    annotateMember( member, type, ...annotations) {\r\n    }\r\n}\r\nexport interface ExtensionProvider {\r\n    initExtensions(extend:ExtensionTarget);\r\n}\r\nexport class Extensions {\r\n    constructor() {\r\n        this.funcRegister = registry.onregister(\"$Extension\", this.register.bind(this));\r\n    }\r\n    private funcRegister;\r\n    destroy() { \r\n        registry.offregister(\"$Extension\", this.funcRegister);\r\n    }\r\n    annotate(oclass, ...annotations) {\r\n        throw new Error(\"not implemented yet\");\r\n    }\r\n    \r\n    register(extensionclass: new (...args: any[]) => any, forclass) {\r\n        //TODO reloading???\r\n        //we must wait with to extent because forclass ist not loaded\r\n        var func = registry.onregister(\"$Class\", function (oclass, params) {\r\n            if (oclass.prototype.constructor._classname === forclass) {\r\n               // reloading code-> registry.offregister(\"$Class\", func);\r\n                let props = Object.getOwnPropertyNames(extensionclass.prototype);\r\n                for (var m = 0; m < props.length; m++) {\r\n                    var member = props[m];\r\n                    if (member !== \"_classname\" && member !== \"constructor\") {\r\n                        if (typeof extensionclass.prototype[member] === \"function\") {\r\n                            if (oclass.prototype[member] !== undefined) {\r\n                                var sic = oclass.prototype[member];\r\n                                var ext = extensionclass.prototype[member];\r\n                                oclass.prototype[member] = function (...p) {\r\n                                    sic.bind(this)(...p);\r\n                                    ext.bind(this)(...p);\r\n                                }\r\n\r\n                            } else\r\n                                oclass.prototype[member] = extensionclass.prototype[member];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        //  alert(forclass);\r\n    }\r\n    annotateMember(classname, member, type, ...annotations) {\r\n       \r\n        var func = registry.onregister(\"$Class\", function (oclass, params) {\r\n            if (oclass.prototype.constructor._classname === classname) {\r\n                registry.offregister(\"$Class\", func);\r\n                //designtype\r\n              \r\n                Reflect[\"metadata\"](\"design:type\", type)(oclass.prototype, member);\r\n                for (var x = 0; x < annotations.length; x++) {\r\n                    let ann = annotations[x];\r\n                    ann(oclass.prototype, member);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nvar extensions = new Extensions();\r\nexport { extensions };","\r\n\r\n\r\n/*declare global {\r\n\r\n    export class ExtensionAction {\r\n         sample?: {\r\n             name: string,\r\n             param1: string;\r\n         };\r\n    }\r\n}*/\r\ndeclare global {\r\n    export interface ExtensionAction {\r\n        componentDesignerSetDesignMode?: {\r\n            enable: boolean,\r\n            componentDesigner: any/*ComponentDesigner*/\r\n        }\r\n        componentDesignerComponentCreated?: {\r\n            //component:Component\r\n            newParent: any;/*Container*/\r\n        },\r\n        componentDesignerInvisibleComponentClicked?: {\r\n            codeEditor,//:CodeEditor,\r\n            designButton//: Button\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\nwindow.extentsionCalled = function (param:  ExtensionAction) {\r\n    if (param.sample) {\r\n        alert(\"default:\" + param.defaultAction.name);\r\n    }\r\n   \r\n}\r\nwindow.extentsionCalled({\r\n    sample: { name: \"Passt\" }\r\n})*/\r\n\r\n\r\n\r\ndeclare global {\r\n    interface String {\r\n        //@ts-ignore\r\n        replaceAll: any;\r\n    }\r\n}\r\n//@ts-ignore\r\nString.prototype.replaceAll = function (search: string, replacement: string): string {\r\n    var target = this;\r\n    return target.split(search).join(replacement);\r\n}\r\n\r\n\r\n\r\n/**\r\n* main class for jassi\r\n* @class Jassi\r\n*/\r\n\r\nexport class Jassi {\r\n    //  public classes:Classes=undefined;\r\n    [key: string]: any;\r\n    base: { [k: string]: any };\r\n    public options: any;\r\n    isServer: boolean = false;\r\n    cssFiles:{[key:string]:string};\r\n    constructor() {\r\n        //@ts-ignore\r\n        this.isServer = window.document === undefined;\r\n        //@ts-ignore\r\n        //this.modules = window?.__jassijsconfig__?.modules;\r\n        //@ts-ignore\r\n        //this.options = window?.__jassijsconfig__?.options;\r\n        if (!this.isServer) {\r\n            //@ts-ignore \r\n            /*import(\"jassijs/modul\").then((modul)=>{\r\n                jassijs.myRequire(modul.default.css[\"jassijs.css\"]);\r\n                jassijs.myRequire(modul.default.css[\"jquery-ui.css\"]);\r\n                jassijs.myRequire(modul.default.css[\"materialdesignicons.min.css\"]);\r\n    \r\n            });*/\r\n            //  this.myRequire(\"jassi/jassijs.css\");\r\n            //  this.myRequire(\"https://cdn.jsdelivr.net/npm/@mdi/font@5.9.55/css/materialdesignicons.min.css\");\r\n            //  this.myRequire(\"https:///cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.css\");\r\n        }\r\n    }\r\n    includeCSSFile(modulkey:string){\r\n        this.myRequire(this.cssFiles[modulkey]);\r\n    }\r\n    /**\r\n     * include a global stylesheet\r\n     * @id - the given id - important for update\r\n     * @data - the css data to insert\r\n     **/\r\n    includeCSS(id: string, data: { [cssselector: string]: any/*CSSProperties*/ }) {\r\n        //@ts-ignore\r\n        var style: HTMLElement = document.getElementById(id);\r\n        //@ts-ignore\r\n        if (!document.getElementById(id)) {\r\n            style =  <HTMLElement>document.createRange().createContextualFragment('<style id=' + id + '></style>').children[0];\r\n            //@ts-ignore\r\n            document.head.appendChild(style);\r\n        }\r\n        var sstyle = \"\";\r\n        for (var selector in data) {\r\n            var sstyle = sstyle + \"\\n\\t\" + selector + \"{\\n\";\r\n            var properties = data[selector];\r\n            var prop = {};\r\n            for (let key in properties) {\r\n                if (key === \"_classname\")\r\n                    continue;\r\n                var newKey = key.replaceAll(\"_\", \"-\");\r\n                prop[newKey] = (<string>properties[key]);\r\n                sstyle = sstyle + \"\\t\\t\" + newKey + \":\" + (<string>properties[key]) + \";\\n\";\r\n            }\r\n            sstyle = sstyle + \"\\t}\\n\";\r\n        }\r\n        style.innerHTML = sstyle;\r\n    }\r\n    /**\r\n    * include a js or a css file\r\n    * @param {string|string[]} href - url(s) of the js or css file(s)\r\n    * @param {function} [param] - would be added with? to the url\r\n    */\r\n    myRequire(href, event = undefined, param = undefined) {\r\n        if (this.isServer)\r\n            throw new Error(\"jassi.Require is only available on client\");\r\n        if ((typeof href) === \"string\") {\r\n            href = [href];\r\n        }\r\n\r\n        var url = \"\";\r\n        if (href instanceof Array) {\r\n            if (href.length === 0) {\r\n                if (event !== undefined)\r\n                    event();\r\n                return;\r\n            } else {\r\n                url = href[0];\r\n                href.splice(0, 1);\r\n\r\n            }\r\n        }\r\n        if (url.endsWith(\".js\")) {\r\n            //@ts-ignore\r\n            if (window.document.getElementById(\"-->\" + url) !== null) {\r\n                this.myRequire(href, event);\r\n            } else {\r\n                //@ts-ignore\r\n                var js = window.document.createElement(\"script\");\r\n                //   js.type = \"text/javascript\";\r\n                js.src = url + (param !== undefined ? \"?\" + param : \"\");\r\n                var _this = this;\r\n                js.onload = function () {\r\n                    _this.myRequire(href, event);\r\n                };\r\n                js.id = \"-->\" + url;\r\n                //@ts-ignore\r\n                window.document.head.appendChild(js);\r\n            }\r\n        } else {\r\n            if(document.getElementById(\"-->\" + url)!=null){\r\n                if(event)\r\n                    event();\r\n                return;\r\n            }\r\n            //    <link href=\"lib/jquery.splitter.css\" rel=\"stylesheet\"/>\r\n            //@ts-ignore\r\n            var head = window.document.getElementsByTagName('head')[0];\r\n            //@ts-ignore\r\n            var link = window.document.createElement('link');\r\n            //  link.rel  = 'import';\r\n            link.href = url;\r\n            link.rel = \"stylesheet\";\r\n            link.id = \"-->\" + url;\r\n            var _this = this;\r\n            //@ts-ignore \r\n            link.onload = function (data1: GlobalEventHandlers, data2: Event): any {\r\n                _this.myRequire(href, event);\r\n            };\r\n            head.appendChild(link);\r\n        }\r\n    }\r\n};\r\nvar jassijs: Jassi = new Jassi();\r\nglobalThis.jassijs=jassijs;\r\n/*//@ts-ignore\r\nif (window) {\r\n    if (window[\"jassijs\"] === undefined) {//reloading this file -> no destroy namespace\r\n        //@ts-ignore\r\n        window[\"jassijs\"] = jassijs;\r\n    }\r\n}\r\nif(global){\r\n    global[\"jassijs\"] = jassijs;\r\n}*/\r\n\r\n//@ts-ignore\r\ndeclare global {\r\n    class JassiStatic extends Jassi {\r\n\r\n    }\r\n\r\n}\r\n\r\n","\r\nimport { $Class } from \"jassijs/remote/Registry\";\r\nimport { Context, RemoteObject } from \"jassijs/remote/RemoteObject\";\r\nimport { FileNode } from \"jassijs/remote/FileNode\";\r\nimport { classes, JassiError } from \"./Classes\";\r\nimport { serverservices } from \"./Serverservice\";\r\nimport { ValidateFunctionParameter, ValidateIsArray, ValidateIsBoolean, ValidateIsString } from \"jassijs/remote/Validator\";\r\nimport { config } from \"./Config\";\r\n\r\n\r\n \r\n\r\n@$Class(\"jassijs.remote.Server\")\r\nexport class Server extends RemoteObject {\r\n    private static isonline: Promise<boolean> = undefined;\r\n    static lastTestServersideFileResult = undefined;\r\n    //files found in js.map of modules in the jassijs.json\r\n    public static filesInMap: { [name: string]: { modul: string, id: number } } = undefined;\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n    private _convertFileNode(node: FileNode): FileNode {\r\n        var ret: FileNode = new FileNode();\r\n        Object.assign(ret, node);\r\n        if (ret.files !== undefined) {\r\n            for (let x = 0; x < ret.files.length; x++) {\r\n                ret.files[x].parent = ret;\r\n                var s = ret.fullpath === undefined ? \"\" : ret.fullpath;\r\n                ret.files[x].fullpath = s + (s === \"\" ? \"\" : \"/\") + ret.files[x].name;\r\n                ret.files[x] = this._convertFileNode(ret.files[x]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    async fillFilesInMapIfNeeded() {\r\n        if (Server.filesInMap)\r\n            return;\r\n        var ret = {};\r\n        for (var mod in config.modules) {\r\n            if (jassijs?.options?.Server?.filterModulInFilemap) {\r\n                if (jassijs?.options?.Server?.filterModulInFilemap.indexOf(mod) === -1)\r\n                    continue;\r\n            }\r\n            if (config.modules[mod].endsWith(\".js\") || config.modules[mod].indexOf(\".js?\") > -1) {\r\n                let mapname = config.modules[mod].split(\"?\")[0] + \".map\";\r\n                if (config.modules[mod].indexOf(\".js?\") > -1)\r\n                    mapname = mapname + \"?\" + config.modules[mod].split(\"?\")[1];\r\n                var code = await $.ajax({ url: mapname, dataType: \"text\" })\r\n                var data = JSON.parse(code);\r\n                var files = data.sources;\r\n                for (let x = 0; x < files.length; x++) {\r\n                    let fname = files[x].substring(files[x].indexOf(mod + \"/\"));\r\n                    if (jassijs?.options?.Server?.filterSytemfilesInFilemap === true) {\r\n                        if (fname.endsWith(\"/modul.js\") || fname.endsWith(\"/registry.js\"))\r\n                            continue;\r\n                    }\r\n                    if (fname.endsWith)\r\n                        ret[fname] = {\r\n                            id: x,\r\n                            modul: mod\r\n                        };\r\n                }\r\n            }\r\n        }\r\n        Server.filesInMap = ret;\r\n\r\n    }\r\n    async addFilesFromMap(root: FileNode) {\r\n        await this.fillFilesInMapIfNeeded();\r\n        for (var fname in Server.filesInMap) {\r\n            let path = fname.split(\"/\");\r\n            var parent = root;\r\n            for (let p = 0; p < path.length; p++) {\r\n                if (p + 1 < path.length) {\r\n                    let dirname = path[p];\r\n                    var found = undefined;\r\n                    for (let f = 0; f < parent.files.length; f++) {\r\n                        if (parent.files[f].name === dirname)\r\n                            found = parent.files[f];\r\n                    }\r\n                    if (!found) {\r\n                        found = {\r\n                            flag: \"fromMap\",\r\n                            name: dirname,\r\n                            files: []\r\n                        }\r\n                        parent.files.push(found);\r\n                    }\r\n                    parent = found;\r\n\r\n                } else {\r\n                    parent.files.push({\r\n                        flag: \"fromMap\",\r\n                        name: path[p],\r\n                        date: undefined\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * gets alls ts/js-files from server\r\n    * @param {Promise<string>} [async] - returns a Promise for asynchros handling\r\n    * @returns {string[]} - list of files\r\n    */\r\n    @ValidateFunctionParameter()\r\n    async dir(@ValidateIsBoolean({ optional: true }) withDate: boolean = false, context: Context = undefined): Promise<FileNode> {\r\n        \r\n        if (!context?.isServer) {\r\n            var ret: FileNode;\r\n            if ((await Server.isOnline(context)) === true)\r\n                ret = <FileNode>await this.call(this, this.dir, withDate, context);\r\n            else\r\n                ret = { name: \"\", files: [] };\r\n            await this.addFilesFromMap(ret);\r\n            ret.fullpath = \"\";//root\r\n            let r = this._convertFileNode(ret);\r\n            return r;\r\n        } else { \r\n            var rett = await (await serverservices.filesystem).dir(\"\", withDate);\r\n            return rett;\r\n            // return [\"jassijs/base/ChromeDebugger.ts\"];\r\n        }\r\n    }\r\n    @ValidateFunctionParameter()\r\n    public async zip(@ValidateIsString() directoryname: string, @ValidateIsBoolean({ optional: true }) serverdir: boolean = undefined, context: Context = undefined) {\r\n        if (!context?.isServer) {\r\n            return <{ [id: string]: string }>await this.call(this, this.zip, directoryname, serverdir, context);\r\n        } else {\r\n            return (await serverservices.filesystem).zip(directoryname, serverdir);\r\n            // return [\"jassijs/base/ChromeDebugger.ts\"];\r\n        }\r\n    }\r\n    /**\r\n     * gets the content of a file from server\r\n     * @param {string} fileNamew\r\n     * @returns {string} content of the file\r\n     */\r\n    @ValidateFunctionParameter()\r\n    async loadFiles(@ValidateIsArray({ type: tp=>String }) fileNames: string[], context: Context = undefined): Promise<{ [id: string]: string }> {\r\n        if (!context?.isServer) {\r\n            return <{ [id: string]: string }>await this.call(this, this.loadFiles, fileNames, context);\r\n        } else {\r\n            return (await serverservices.filesystem).loadFiles(fileNames);\r\n            // return [\"jassijs/base/ChromeDebugger.ts\"];\r\n        }\r\n    }\r\n    /**\r\n     * gets the content of a file from server\r\n     * @param {string} fileName\r\n     * @returns {string} content of the file\r\n     */\r\n    @ValidateFunctionParameter()\r\n    async loadFile(@ValidateIsString() fileName: string, context: Context = undefined): Promise<string> {\r\n        var fromServerdirectory = fileName.startsWith(\"$serverside/\");\r\n        if (!context?.isServer) {\r\n            await this.fillFilesInMapIfNeeded();\r\n            if (!fromServerdirectory && Server.filesInMap[fileName]) {\r\n                //perhabs the files ar in localserver?\r\n                var Filesystem = classes.getClass(\"jassijs_localserver.Filesystem\");\r\n                if (Filesystem && (await new Filesystem().loadFileEntry(fileName) !== undefined)) {\r\n                    //use ajax\r\n                } else {\r\n                    var found = Server.filesInMap[fileName];\r\n                    let mapname = config.modules[found.modul].split(\"?\")[0] + \".map\";\r\n                    if (config.modules[found.modul].indexOf(\".js?\") > -1)\r\n                        mapname = mapname + \"?\" + config.modules[found.modul].split(\"?\")[1];\r\n                    var code = await this.loadFile(mapname, context);\r\n                    var data = JSON.parse(code).sourcesContent[found.id];\r\n                    return data;\r\n                }\r\n\r\n            }\r\n            if (fromServerdirectory) {\r\n\r\n                return await this.call(this, this.loadFile, fileName, context);\r\n            } else\r\n                return $.ajax({ url: fileName, dataType: \"text\" });\r\n            //return await this.call(this,\"loadFile\", fileName);\r\n        } else {\r\n            if (!context.request.user.isAdmin)\r\n                throw new JassiError(\"only admins can loadFile from Serverdirectory\");\r\n            var rett: string = await (await serverservices.filesystem).loadFile(fileName);\r\n            return rett;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * put the content to a file\r\n    * @param [{string}] fileNames - the name of the file \r\n    * @param [{string}] contents\r\n    */\r\n    @ValidateFunctionParameter()\r\n    async saveFiles(@ValidateIsArray({ type: type=>String }) fileNames: string[], @ValidateIsArray({ type:  type=>String}) contents: string[], context: Context = undefined): Promise<string> {\r\n        if (!context?.isServer) {\r\n            var allfileNames: string[] = [];\r\n            var allcontents: string[] = [];\r\n            var alltsfiles: string[] = [];\r\n            for (var f = 0; f < fileNames.length; f++) {\r\n                var _this = this;\r\n\r\n                var fileName = fileNames[f];\r\n                var content = contents[f];\r\n                if (!fileName.startsWith(\"$serverside/\") && (fileName.endsWith(\".ts\") || fileName.endsWith(\".js\"))) {\r\n\r\n                   //var tss = await import(\"jassijs_editor/util/Typescript\");\r\n                   var tss=<any> await classes.loadClass(\"jassijs_editor.util.Typescript\");\r\n                   var rets = await tss.instance.transpile(fileName, content);\r\n                   \r\n                   allfileNames = allfileNames.concat(rets.fileNames);\r\n                    allcontents = allcontents.concat(rets.contents);\r\n                    alltsfiles.push(fileName); \r\n                } else {\r\n                    allfileNames.push(fileName);\r\n                    allcontents.push(content);\r\n                }\r\n            }\r\n            var res = await this.call(this, this.saveFiles, allfileNames, allcontents, context);\r\n\r\n            if (res === \"\") {\r\n                //@ts-ignore\r\n                import(\"jassijs/ui/Notify\").then((el) => {\r\n                    el.notify(fileName + \" saved\", \"info\", { position: \"bottom right\" });\r\n                });\r\n                //if (!fromServerdirectory) {\r\n                for (var x = 0; x < alltsfiles.length; x++) {\r\n                    await $.ajax({ url: alltsfiles[x], dataType: \"text\" });\r\n                }\r\n                // }\r\n            } else {\r\n                //@ts-ignore\r\n                import(\"jassijs/ui/Notify\").then((el) => {\r\n                    el.notify(fileName + \" not saved\", \"error\", { position: \"bottom right\" });\r\n                });\r\n                throw new JassiError(res);\r\n            }\r\n            return res;\r\n        } else {\r\n            if (!context.request.user.isAdmin)\r\n                throw new JassiError(\"only admins can saveFiles\");\r\n            var ret = (await serverservices.filesystem).saveFiles(fileNames, contents, true);\r\n            return ret;\r\n        }\r\n    }\r\n    /**\r\n    * put the content to a file\r\n    * @param {string} fileName - the name of the file\r\n    * @param {string} content\r\n    */\r\n    @ValidateFunctionParameter()\r\n    async saveFile(@ValidateIsString() fileName: string, @ValidateIsString() content: string, context: Context = undefined): Promise<string> {\r\n        /*await this.fillFilesInMapIfNeeded();\r\n        if (Server.filesInMap[fileName]) {\r\n            //@ts-ignore\r\n             notify(fileName + \" could not be saved on server\", \"error\", { position: \"bottom right\" });\r\n            return;\r\n        }*/\r\n        return await this.saveFiles([fileName], [content], context);\r\n    }\r\n    /**\r\n   * deletes a server modul\r\n   **/\r\n    @ValidateFunctionParameter()\r\n    async testServersideFile(@ValidateIsString() name: string, context: Context = undefined): Promise<string> {\r\n        if (!name.startsWith(\"$serverside/\"))\r\n            throw new JassiError(name + \" is not a serverside file\");\r\n        if (!context?.isServer) {\r\n            var ret = await this.call(this, this.testServersideFile, name, context);\r\n            //@ts-ignore\r\n            //  $.notify(fileNames[0] + \" and more saved\", \"info\", { position: \"bottom right\" });\r\n            return ret;\r\n        } else {\r\n            if (!context.request.user.isAdmin) {\r\n                throw new JassiError(\"only admins can delete\");\r\n            }\r\n            //@ts-ignore\r\n            var test = (await import(name.replaceAll(\"$serverside/\", \"\"))).test;\r\n            if (test)\r\n                Server.lastTestServersideFileResult = await test();\r\n            return Server.lastTestServersideFileResult;\r\n\r\n        }\r\n    }\r\n    /**\r\n   * deletes a server modul\r\n   **/\r\n    @ValidateFunctionParameter()\r\n    async removeServerModul(@ValidateIsString() name: string, context: Context = undefined): Promise<string> {\r\n        if (!context?.isServer) {\r\n            var ret = await this.call(this, this.removeServerModul, name, context);\r\n            //@ts-ignore\r\n            //  $.notify(fileNames[0] + \" and more saved\", \"info\", { position: \"bottom right\" });\r\n            return ret;\r\n        } else {\r\n            if (!context.request.user.isAdmin)\r\n                throw new JassiError(\"only admins can delete\");\r\n            return (await serverservices.filesystem).removeServerModul(name);\r\n        }\r\n    }\r\n    /**\r\n    * deletes a file or directory\r\n    **/\r\n    @ValidateFunctionParameter()\r\n    async delete(@ValidateIsString()  name: string, context: Context = undefined): Promise<string> {\r\n        if (!context?.isServer) {\r\n            var ret = await this.call(this, this.delete, name, context);\r\n            //@ts-ignore\r\n            //  $.notify(fileNames[0] + \" and more saved\", \"info\", { position: \"bottom right\" });\r\n            return ret;\r\n        } else {\r\n            if (!context.request.user.isAdmin)\r\n                throw new JassiError(\"only admins can delete\");\r\n            return (await serverservices.filesystem).remove(name);\r\n        }\r\n    }\r\n    /**\r\n     * renames a file or directory\r\n     **/\r\n     @ValidateFunctionParameter()\r\n    async rename(@ValidateIsString() oldname: string, @ValidateIsString() newname: string, context: Context = undefined): Promise<string> {\r\n        if (!context?.isServer) {\r\n            var ret = await this.call(this, this.rename, oldname, newname, context);\r\n            //@ts-ignore\r\n            //  $.notify(fileNames[0] + \" and more saved\", \"info\", { position: \"bottom right\" });\r\n            return ret;\r\n        } else {\r\n            if (!context.request.user.isAdmin)\r\n                throw new JassiError(\"only admins can rename\"); \r\n            return (await serverservices.filesystem).rename(oldname, newname);;\r\n        }\r\n    } \r\n    /**\r\n    * is the nodes server running \r\n    **/\r\n    public static async isOnline(context: Context = undefined): Promise<boolean> {\r\n        if (!context?.isServer) {\r\n            //no serviceworker no serverside implementation\r\n            //@ts-ignore\r\n            if (navigator.serviceWorker.controller === null)\r\n                return false;\r\n            try {\r\n                if (this.isonline === undefined)\r\n                    Server.isonline = await this.call(this.isOnline, context);\r\n                return await Server.isonline;\r\n            } catch {\r\n                return false;\r\n            }\r\n            //@ts-ignore\r\n            //  $.notify(fileNames[0] + \" and more saved\", \"info\", { position: \"bottom right\" });\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    /**\r\n     * creates a file \r\n     **/\r\n     @ValidateFunctionParameter()\r\n    async createFile(@ValidateIsString() filename: string, content: string, context: Context = undefined): Promise<string> {\r\n        if (!context?.isServer) {\r\n            var ret = await this.call(this, this.createFile, filename, content, context);\r\n            //@ts-ignore\r\n            //  $.notify(fileNames[0] + \" and more saved\", \"info\", { position: \"bottom right\" });\r\n            return ret;\r\n        } else {\r\n            if (!context.request.user.isAdmin)\r\n                throw new JassiError(\"only admins can createFile\");\r\n\r\n            return (await serverservices.filesystem).createFile(filename, content);\r\n        }\r\n    }\r\n    /**\r\n    * creates a file \r\n    **/\r\n    @ValidateFunctionParameter()\r\n    async createFolder(@ValidateIsString() foldername: string, context: Context = undefined): Promise<string> {\r\n        if (!context?.isServer) {\r\n            var ret = await this.call(this, this.createFolder, foldername, context);\r\n            //@ts-ignore\r\n            //  $.notify(fileNames[0] + \" and more saved\", \"info\", { position: \"bottom right\" });\r\n            return ret;\r\n        } else {\r\n            if (!context.request.user.isAdmin)\r\n                throw new JassiError(\"only admins can createFolder\");\r\n            return (await serverservices.filesystem).createFolder(foldername);\r\n        }\r\n    }\r\n    @ValidateFunctionParameter()\r\n    async createModule(@ValidateIsString() modulname: string, context: Context = undefined): Promise<string> {\r\n        if (!context?.isServer) {\r\n            var ret = await this.call(this, this.createModule, modulname, context);\r\n            //@ts-ignore\r\n            //  $.notify(fileNames[0] + \" and more saved\", \"info\", { position: \"bottom right\" });\r\n            return ret;\r\n        } else {\r\n            if (!context.request.user.isAdmin)\r\n                throw new JassiError(\"only admins can createFolder\");\r\n            return (await serverservices.filesystem).createModule(modulname);\r\n        }\r\n    }\r\n    static async mytest(context: Context = undefined) {\r\n        if (!context?.isServer) {\r\n            return await this.call(this.mytest, context);\r\n        } else\r\n            return 14;//this is called on server\r\n    }\r\n}\r\n\r\n","\r\nimport { $Class } from \"jassijs/remote/Registry\";\r\nimport registry from \"jassijs/remote/Registry\";\r\n\r\nimport { Context, RemoteObject } from \"jassijs/remote/RemoteObject\";\r\nimport { Setting } from \"jassijs/remote/security/Setting\";\r\nimport { Server } from \"./Server\";\r\nimport { Test } from \"./Test\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\nimport { ValidateFunctionParameter, ValidateIsBoolean, ValidateIsIn, ValidateIsString } from \"jassijs/remote/Validator\";\r\n \r\n\r\n\r\ndeclare global {\r\n    export interface KnownSettings {\r\n \r\n    }\r\n}\r\nconst proxyhandler = {\r\n    get: function (target, prop, receiver) {\r\n        return prop;\r\n    }\r\n};\r\n\r\n@$Class(\"jassijs.remote.Settings\")\r\nexport class Settings extends RemoteObject {\r\n    public static keys: KnownSettings = new Proxy({}, proxyhandler);//the Proxy allwas give the key back\r\n    private static browserSettings = undefined;\r\n    private static userSettings = undefined;\r\n    private static allusersSettings = undefined;\r\n    /**\r\n    * loads the settings\r\n    */\r\n    static async load(context: Context = undefined) {\r\n\r\n        if (!context?.isServer) {\r\n            \r\n            //browser\r\n            let entr = window.localStorage.getItem(\"jassijs.settings\");\r\n            if (entr) {\r\n                Settings.browserSettings = JSON.parse(entr);\r\n            } else\r\n                Settings.browserSettings = {};\r\n           \r\n            var all =(await Server.isOnline()===false) ?undefined: await this.call(this.load, context);\r\n            if (all?.user) {\r\n                Settings.userSettings = JSON.parse(all.user.data);\r\n            } else\r\n                Settings.userSettings = {};\r\n            if (all?.allusers) {\r\n                Settings.allusersSettings = JSON.parse(all.allusers.data);\r\n            } else\r\n                Settings.allusersSettings = {};\r\n\r\n        } else {\r\n            //@ts-ignore\r\n            var man = await serverservices.db;\r\n            var id = context.request.user.user;\r\n            return {\r\n                user: await man.findOne(context, Setting, { \"id\": 1 }),\r\n                allusers: await man.findOne(context, Setting, { \"id\": 0 }),\r\n            }\r\n        }\r\n    }\r\n    static getAll(scope: \"browser\" | \"user\" | \"allusers\") {\r\n        var ret = {};\r\n        if (scope === \"browser\") {\r\n            Object.assign(ret, Settings.browserSettings);\r\n        }\r\n        if (scope === \"user\") {\r\n            Object.assign(ret, Settings.userSettings);\r\n        }\r\n        if (scope === \"allusers\") {\r\n            Object.assign(ret, Settings.allusersSettings);\r\n        }\r\n        return ret;\r\n    }\r\n    gets<T>(Settings_key: T): T {\r\n        if (Settings.browserSettings && Settings.browserSettings[Settings_key])\r\n            return Settings.browserSettings[Settings_key];\r\n        if (Settings.userSettings && Settings.userSettings[Settings_key])\r\n            return Settings.userSettings[Settings_key];\r\n        if (Settings.allusersSettings && Settings.allusersSettings[Settings_key])\r\n            return Settings.allusersSettings[Settings_key];\r\n        return undefined;\r\n    }\r\n    @ValidateFunctionParameter()\r\n    static async remove(@ValidateIsString() Settings_key: string,@ValidateIsIn({in:[\"browser\" , \"user\" , \"allusers\"]})  scope: \"browser\" | \"user\" | \"allusers\", context: Context = undefined) {\r\n        if (scope === \"browser\") {\r\n            delete Settings.browserSettings[Settings_key];\r\n            window.localStorage.setItem(\"jassijs.settings\", JSON.stringify(Settings.browserSettings));\r\n        }\r\n        if (scope === \"user\" || scope === \"allusers\") {\r\n            if (!context?.isServer) {\r\n                if (scope == \"user\" && Settings.userSettings)\r\n                    delete Settings.userSettings[Settings_key];\r\n                if (scope == \"allusers\" && Settings.allusersSettings)\r\n                    delete Settings.allusersSettings[Settings_key];\r\n                this.call(this.remove, Settings_key, scope, context);\r\n\r\n            } else {\r\n                //@ts-ignore\r\n                var man =  await serverservices.db;\r\n                var id = context.request.user.user;\r\n                //first load\r\n                let entr = await man.findOne(context, Setting, { \"id\": (scope === \"user\" ? id : 0) });\r\n\r\n                if (entr !== undefined) {\r\n                    var data = JSON.parse(entr.data);\r\n                    delete data[Settings_key];\r\n                    entr.data = JSON.stringify(data);\r\n                    await man.save(context, entr);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    @ValidateFunctionParameter()\r\n    static async save<T>(@ValidateIsString()Settings_key: T, value: T, @ValidateIsIn({in:[\"browser\" , \"user\" , \"allusers\"]}) scope: \"browser\" | \"user\" | \"allusers\") {\r\n        let ob = {};\r\n        //@ts-ignore\r\n        ob[Settings_key] = value;\r\n        return await this.saveAll(ob, scope);\r\n    }\r\n    @ValidateFunctionParameter()\r\n    static async saveAll(namevaluepair: { [key: string]: any }, @ValidateIsIn({in:[\"browser\" , \"user\" , \"allusers\"]}) scope: \"browser\" | \"user\" | \"allusers\", @ValidateIsBoolean({optional:true}) removeOtherKeys = false, context: Context = undefined) {\r\n        if (scope === \"browser\") {\r\n            let entr = window.localStorage.getItem(\"jassijs.settings\");\r\n            var data = namevaluepair;\r\n            if (entr) {\r\n                data = JSON.parse(entr);\r\n                Object.assign(data, namevaluepair);\r\n            }\r\n            if (removeOtherKeys)\r\n                data = namevaluepair;\r\n            window.localStorage.setItem(\"jassijs.settings\", JSON.stringify(data));\r\n            if (removeOtherKeys)\r\n                Settings.browserSettings = {};\r\n            Object.assign(Settings.browserSettings, namevaluepair);\r\n        }\r\n        if (scope === \"user\" || scope === \"allusers\") {\r\n            if (!context?.isServer) {\r\n                var props = {};\r\n                Object.assign(props, namevaluepair);\r\n\r\n                if (scope == \"user\" && Settings.userSettings) {\r\n                    if (removeOtherKeys)\r\n                        Settings.userSettings = {};\r\n                    Object.assign(Settings.userSettings, namevaluepair);\r\n                }\r\n                if (scope == \"allusers\" && Settings.allusersSettings) {\r\n                    if (removeOtherKeys)\r\n                        Settings.allusersSettings = {};\r\n                    Object.assign(Settings.allusersSettings, namevaluepair);\r\n                }\r\n                return await this.call(this.saveAll, props, scope, removeOtherKeys, context);\r\n            } else {\r\n                //@ts-ignore\r\n                var man = await serverservices.db;\r\n                var id = context.request.user.user;\r\n                //first load\r\n                let entr = await man.findOne(context, Setting, { \"id\": (scope === \"user\" ? id : 0) });\r\n                var data = namevaluepair;\r\n                if (removeOtherKeys !== true) {\r\n                    if (entr !== undefined) {\r\n                        data = JSON.parse(entr.data);\r\n                        Object.assign(data, namevaluepair);\r\n                    }\r\n                }\r\n                var newsetting = new Setting();\r\n                newsetting.id = (scope === \"user\" ? id : 0);\r\n                newsetting.data = JSON.stringify(data);\r\n                return await man.save(context, newsetting);\r\n                //return man.find(context, this, { \"id\": \"admin\" });\r\n            }\r\n        }\r\n    }\r\n}\r\nvar settings = new Settings();\r\nexport { settings };\r\nexport function $SettingsDescriptor(): Function {\r\n    return function (pclass) {\r\n        registry.register(\"$SettingsDescriptor\", pclass);\r\n    }\r\n}\r\n\r\n\r\nexport async function autostart() {\r\n    await Settings.load();\r\n}\r\n\r\nexport async function test(t: Test) {\r\n    try {\r\n        await Settings.load();\r\n        var settings=new Settings();\r\n        await Settings.remove(\"antestsetting\", \"user\");\r\n        await Settings.remove(\"antestsetting\", \"browser\");\r\n        await Settings.remove(\"antestsetting\", \"allusers\");\r\n          t.expectEqual(settings.gets(\"antestsetting\") === undefined);\r\n        await Settings.load();\r\n        t.expectEqual(settings.gets(\"antestsetting\") === undefined);\r\n\r\n        await Settings.save(\"antestsetting\", \"1\", \"allusers\");\r\n        t.expectEqual(<string>settings.gets(\"antestsetting\") === \"1\");\r\n        await Settings.load();\r\n        t.expectEqual(<string>settings.gets(\"antestsetting\") === \"1\");\r\n\r\n        await Settings.save(\"antestsetting\", \"2\", \"user\");\r\n        t.expectEqual(<string>settings.gets(\"antestsetting\") === \"2\");\r\n        await Settings.load();\r\n        t.expectEqual(<string>settings.gets(\"antestsetting\") === \"2\");\r\n\r\n        await Settings.save(\"antestsetting\", \"3\", \"browser\");\r\n        t.expectEqual(<string>settings.gets(\"antestsetting\") === \"3\");\r\n        await Settings.load();\r\n        t.expectEqual(<string>settings.gets(\"antestsetting\") === \"3\");\r\n    } catch (ex) {\r\n      \r\n\r\n        throw ex;\r\n    } finally {\r\n        await Settings.remove(\"antestsetting\", \"user\");\r\n        await Settings.remove(\"antestsetting\", \"browser\");\r\n        await Settings.remove(\"antestsetting\", \"allusers\");\r\n    }\r\n\r\n}\r\nexport async function load(){\r\n    return Settings.load();\r\n}","//synchronize-server-client\r\n//@ts-ignore  \r\nimport { ConnectionOptions, createConnection, getConnection, SaveOptions, FindConditions, FindOneOptions, ObjectType, ObjectID, FindManyOptions, Connection, SelectQueryBuilder, Brackets, EntitySchema, getMetadataArgsStorage, Entity } from \"typeorm\";\r\nimport { classes, JassiError } from \"jassijs/remote/Classes\";\r\n \r\nimport registry from \"jassijs/remote/Registry\";       \r\nimport { DBObject } from \"jassijs/remote/DBObject\";\r\nimport { ParentRightProperties } from \"jassijs/remote/security/Rights\";\r\nimport { User } from \"jassijs/remote/security/User\";\r\nimport { Context } from \"jassijs/remote/RemoteObject\";\r\nimport { $Class } from \"jassijs/remote/Registry\";\r\nimport { $Serverservice } from \"jassijs/remote/Serverservice\";\r\n\r\nconst parser = require('js-sql-parser');\r\nconst passwordIteration = 10000;\r\n\r\nexport interface MyFindManyOptions<Entity = any> extends FindManyOptions {\r\n  whereParams?: any,\r\n  onlyColumns?: string[];\r\n  order: { [field: string]: \"ASC\" | \"DESC\" };\r\n}\r\n\r\n\r\n\r\nvar _instance: DBManager = undefined;\r\n\r\ndeclare global{\r\n  export interface Serverservice{\r\n      db:Promise<DBManager>;\r\n  }\r\n}\r\n\r\n@$Serverservice({ name: \"db\", getInstance: async () => { return DBManager._get() } })\r\n@$Class(\"jassijs/server/DBManager\")\r\nexport class DBManager {\r\n  waitForConnection: Promise<DBManager> = undefined;\r\n  static async getConOpts(): Promise<ConnectionOptions> {\r\n    var stype: string = \"postgres\";\r\n    var shost = \"localhost\";\r\n    var suser = \"postgres\";\r\n    var spass = \"ja$$1\";\r\n    var iport = 5432;\r\n    var sdb = \"jassi\";\r\n    //the default is the sqlite3\r\n    //this is the default way: define an environment var DATABASSE_URL\r\n    //type://user:password@hostname:port/database\r\n    //eg: postgres://abcknhlveqwqow:polc78b98e8cd7168d35a66e392d2de6a8d5710e854c084ff47f90643lce2876@ec2-174-102-251-1.compute-1.amazonaws.com:5432/dcpqmp4rcmu182\r\n    //@ts-ignore\r\n    var test = process.env.DATABASE_URL;\r\n    if (test !== undefined) {\r\n\r\n      var all = test.split(\":\");\r\n      stype = all[0];\r\n      if (stype === \"postgresql\")\r\n        stype = \"postgres\";\r\n      var h = all[2].split(\"@\");\r\n      shost = h[1];\r\n      iport = Number(all[3].split(\"/\")[0]);\r\n      suser = all[1].replace(\"//\", \"\");\r\n      spass = h[0];\r\n      sdb = all[3].split(\"/\")[1];\r\n    }\r\n\r\n    var dbclasses = [];\r\n\r\n    var dbobjects = await registry.getJSONData(\"$DBObject\");\r\n    for (var o = 0; o < dbobjects.length; o++) {\r\n      var clname = dbobjects[o].classname;\r\n      dbclasses.push(await classes.loadClass(clname));\r\n      //var fname = dbobjects[o].filename;\r\n      //dbfiles.push(\"js/\" + fname.replace(\".ts\", \".js\"));\r\n    }\r\n\r\n    var opt: ConnectionOptions = {\r\n\r\n      //@ts-ignore\r\n      \"type\": stype,\r\n      \"host\": shost,\r\n      \"port\": iport,\r\n      \"username\": suser,\r\n      \"password\": spass,\r\n      \"database\": sdb,\r\n      //\"synchronize\": true,\r\n      \"logging\": false,\r\n      \"entities\": dbclasses\r\n\r\n      //\"js/client/remote/de/**/*.js\"\r\n\r\n      // \"migrations\": [\r\n      //    \"src/migration/**/*.ts\"\r\n      // ],\r\n      // \"subscribers\": [\r\n      //    \"src/subscriber/**/*.ts\"\r\n      // ]\r\n    };\r\n\r\n\r\n    return opt;\r\n  }\r\n\r\n  private static async _get(): Promise<DBManager> {\r\n    if (_instance === undefined) {\r\n      _instance = new DBManager();\r\n    }\r\n    await _instance.waitForConnection;\r\n    return _instance;\r\n  }\r\n  private async open() {\r\n    var _initrunning: Promise<Connection> = undefined;\r\n    var test = getMetadataArgsStorage();\r\n    try {\r\n      var opts = await DBManager.getConOpts();\r\n      _initrunning = createConnection(opts);\r\n      await _initrunning;\r\n\r\n    } catch (err1) {\r\n      try {\r\n        _initrunning = undefined;\r\n        //@ts-ignore //heroku need this\r\n        opts.ssl = {\r\n          rejectUnauthorized: false\r\n        }\r\n        //          opts[\"ssl\"] = true; \r\n        _initrunning = createConnection(opts);\r\n        await _initrunning;\r\n\r\n      } catch (err) {\r\n        console.log(\"DB corrupt - revert the last change\");\r\n        console.error(err1); \r\n        console.error(err);\r\n        _instance = undefined;\r\n        _initrunning = undefined;\r\n        if (err.message === \"The server does not support SSL connections\") {\r\n          throw err1;\r\n          console.error(err1);\r\n        }\r\n        else {\r\n          throw err;\r\n          console.error(err);\r\n        }\r\n      }\r\n    }\r\n\r\n    try {\r\n      var con = getConnection();\r\n      for (var x = 0; x < 500; x++) {//sometimes on reconnect the connection is not ready\r\n        if (con.isConnected)\r\n          break;\r\n        else\r\n          await new Promise((resolve) => setTimeout(() => resolve(undefined), 10));\r\n      }\r\n      console.log(con.isConnected);\r\n      await this.mySync();\r\n    } catch (err) {\r\n      console.log(\"DB Schema could not be saved\");\r\n      throw err;\r\n    }\r\n    //wait for connection ready\r\n    await _initrunning;\r\n    //on server we convert decimal type to Number https://github.com/brianc/node-postgres/issues/811\r\n    //@ts-ignore\r\n    if (window?.document === undefined) {\r\n      try {\r\n        //@ts-ignore\r\n        var types = (await import('pg')).types;\r\n        types.setTypeParser(1700, function (val) {\r\n          return parseFloat(val);\r\n        });\r\n      } catch {\r\n\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n\r\n  private async mySync() {\r\n    var con = getConnection();\r\n    //@ts-ignore\r\n    var schem = await import(\"typeorm/schema-builder/RdbmsSchemaBuilder\");\r\n    var org = schem.RdbmsSchemaBuilder.prototype[\"executeSchemaSyncOperationsInProperOrder\"];\r\n    schem.RdbmsSchemaBuilder.prototype[\"executeSchemaSyncOperationsInProperOrder\"] = async function () {\r\n      //try{\r\n\r\n      await this.createNewTables();\r\n      await this.addNewColumns();\r\n      await this.updatePrimaryKeys();\r\n      await this.updateExistColumns();\r\n      await this.createNewIndices();\r\n      await this.createNewChecks();\r\n      await this.createNewExclusions();\r\n      await this.createCompositeUniqueConstraints();\r\n      await this.createForeignKeys();\r\n      await this.createViews();\r\n      /*}catch(err){\r\n        this.prototype._error_=err;\r\n        }*/\r\n    };\r\n    //  var h=Reflect.getMetadata(\"design:type\",AR.prototype,\"id\");\r\n\r\n    await con.synchronize();\r\n    //if(schem.RdbmsSchemaBuilder.prototype[\"_error_\"])\r\n    //throw schem.RdbmsSchemaBuilder.prototype[\"_error_\"]; \r\n\r\n    //con.driver.\r\n  }\r\n  private static async clearMetadata() {\r\n    DBManager.clearArray(getMetadataArgsStorage().checks);\r\n    DBManager.clearArray(getMetadataArgsStorage().columns);\r\n    DBManager.clearArray(getMetadataArgsStorage().discriminatorValues);\r\n    DBManager.clearArray(getMetadataArgsStorage().embeddeds);\r\n    DBManager.clearArray(getMetadataArgsStorage().entityListeners);\r\n    DBManager.clearArray(getMetadataArgsStorage().entityRepositories);\r\n    DBManager.clearArray(getMetadataArgsStorage().entitySubscribers);\r\n    DBManager.clearArray(getMetadataArgsStorage().exclusions);\r\n    DBManager.clearArray(getMetadataArgsStorage().tables);\r\n    DBManager.clearArray(getMetadataArgsStorage().generations);\r\n    DBManager.clearArray(getMetadataArgsStorage().indices);\r\n    DBManager.clearArray(getMetadataArgsStorage().inheritances);\r\n    DBManager.clearArray(getMetadataArgsStorage().joinColumns);\r\n    DBManager.clearArray(getMetadataArgsStorage().joinTables);\r\n    DBManager.clearArray(getMetadataArgsStorage().namingStrategies);\r\n    DBManager.clearArray(getMetadataArgsStorage().relationCounts);\r\n    DBManager.clearArray(getMetadataArgsStorage().relationIds);\r\n    DBManager.clearArray(getMetadataArgsStorage().relations);\r\n    DBManager.clearArray(getMetadataArgsStorage().tables);\r\n    DBManager.clearArray(getMetadataArgsStorage().transactionEntityManagers);\r\n    DBManager.clearArray(getMetadataArgsStorage().transactionRepositories);\r\n    DBManager.clearArray(getMetadataArgsStorage().trees);\r\n    DBManager.clearArray(getMetadataArgsStorage().uniques);\r\n  }\r\n  public async renewConnection() {\r\n    if(this.waitForConnection!==undefined)\r\n      await this.waitForConnection;\r\n    this.waitForConnection = new Promise((resolve) => { });//never resolve\r\n    await this.destroyConnection(false);\r\n    this.waitForConnection = this.open();\r\n  }\r\n  public async destroyConnection(waitForCompleteOpen = true) {\r\n    if (waitForCompleteOpen)\r\n      await this.waitForConnection;\r\n    try {\r\n      var con=await getConnection();\r\n      await con.close();\r\n     \r\n    } catch(err) {\r\n      debugger;\r\n    }\r\n    await DBManager.clearMetadata();\r\n  }\r\n  private static clearArray(arr: any[]) {\r\n    while (arr.length > 0) {\r\n      arr.pop();\r\n    }\r\n  }\r\n  private constructor() {\r\n    Object.freeze(_instance);\r\n    this.waitForConnection = this.open();\r\n  }\r\n  connection() {\r\n    return getConnection();\r\n  }\r\n  async runSQL(context: Context, sql: string, parameters: any[] = undefined) {\r\n\r\n    var ret = (await this.waitForConnection).connection().query(sql, parameters);\r\n    return ret;\r\n  }\r\n  async remove<Entity>(context: Context, entity: Entity) {\r\n    var test = await (await this.waitForConnection).checkParentRight(context, entity, [entity[\"id\"]]);\r\n    if (test === false)\r\n      throw new JassiError(\"you are not allowed to delete \" + classes.getClassName(entity) + \" with id \" + entity[\"id\"]);\r\n    await this.connection().manager.remove(entity);\r\n  }\r\n\r\n  private async addSaveTransaction(context: Context, entity) {\r\n    await this.waitForConnection;\r\n    if (context.objecttransaction) {\r\n      let ot = context.objecttransaction;\r\n      if (!ot.savelist) {\r\n        ot.savelist = [entity];\r\n        ot.saveresolve = [];\r\n        ot.addFunctionFinally(async () => {\r\n          ot.savereturn = await this.connection().manager.save(ot.savelist);\r\n          for (let x = 0; x < ot.savereturn.length; x++) {\r\n            delete ot.savereturn[x].password;\r\n            ot.saveresolve[x](ot.savereturn[x]);\r\n          }\r\n        })\r\n      } else\r\n        ot.savelist.push(entity);\r\n      return new Promise((resolve) => {\r\n        ot.saveresolve.push(resolve);\r\n        ot.transactionResolved(context);\r\n        ot.checkFinally();\r\n      });\r\n    }\r\n  }\r\n  /**\r\n * insert a new object\r\n * @param obj - the object to insert\r\n */\r\n  async insert(context: Context, obj: DBObject) {\r\n    (await this.waitForConnection);\r\n    await this._checkParentRightsForSave(context, obj);\r\n    if (context.objecttransaction) {\r\n      return this.addSaveTransaction(context, obj);\r\n    }\r\n    if (obj.id !== undefined) {\r\n      if ((await this.connection().manager.findOne(obj.constructor, obj.id)) !== undefined) {\r\n        throw new JassiError(\"object is already in DB: \" + obj.id);\r\n      }\r\n    }\r\n    //@ts-ignore\r\n    var ret = await this.connection().manager.insert(obj.constructor, obj);\r\n    //save also relations\r\n    let retob = await this.save(context, obj);\r\n    return retob;\r\n  }\r\n  /**\r\n  * Saves all given entities in the database.\r\n  * If entities do not exist in the database then inserts, otherwise updates.\r\n  */\r\n  async save<Entity>(context: Context, entities: Entity[], options?: SaveOptions): Promise<Entity[]>;\r\n  /**\r\n   * Saves all given entities in the database.\r\n   * If entities do not exist in the database then inserts, otherwise updates.\r\n   */\r\n  async save<Entity>(context: Context, entity: Entity, options?: SaveOptions): Promise<Entity>;\r\n  async save<Entity>(context: Context, entity, options) {\r\n    await this.waitForConnection;\r\n    await this._checkParentRightsForSave(context, entity);\r\n    if ((window?.document === undefined)) {//crypt password only in nodes\r\n      if (classes.getClassName(entity) === \"jassijs.security.User\" && entity.password !== undefined) {\r\n        entity.password = await new Promise((resolve) => {\r\n          const crypto = require('crypto');\r\n          const salt = crypto.randomBytes(8).toString('base64');\r\n          crypto.pbkdf2(entity.password, salt, passwordIteration, 512, 'sha512', (err, derivedKey) => {\r\n            if (err) throw err;\r\n            resolve(passwordIteration.toString() + \":\" + salt + \":\" + derivedKey.toString('base64'));//.toString('base64'));  // '3745e48...aa39b34'\r\n          });\r\n        })\r\n      }\r\n    }\r\n\r\n    if (context.objecttransaction && options === undefined) {\r\n      return this.addSaveTransaction(context, entity);\r\n    }\r\n    var ret = await this.connection().manager.save(entity, options);\r\n    //delete entity.password;\r\n    //delete ret[\"password\"];\r\n    //@ts-ignore\r\n    return (<DBObject>ret)?.id;\r\n  }\r\n  private async _checkParentRightsForSave<Entity>(context: Context, entity: Entity) {\r\n    await this.waitForConnection;\r\n    if (context.request.user?.isAdmin)\r\n      return;\r\n    //Check if the object self has restrictions\r\n    var cl = classes.getClass(classes.getClassName(entity));\r\n    if (entity[\"id\"] !== undefined) {\r\n      var exist = await this.connection().manager.findOne(cl, entity[\"id\"]);\r\n      if (exist !== undefined) {\r\n        var t = await this.checkParentRight(context, cl, [entity[\"id\"]]);\r\n        if (!t) {\r\n          throw new JassiError(\"you are not allowed to save \" + classes.getClassName(cl) + \" with id \" + entity[\"id\"]);\r\n        }\r\n      }\r\n    }\r\n    //check if the field of parentRight is set\r\n    if (registry.getMemberData(\"$CheckParentRight\") !== undefined) {\r\n      var data = registry.getMemberData(\"$CheckParentRight\")[classes.getClassName(entity)];\r\n      for (var key in data) {\r\n        if (entity[key] === undefined) {\r\n          throw new JassiError(\"the CheckParentRight field \" + key + \" must not be undefined\");\r\n        }\r\n      }\r\n    }\r\n    var vdata = this.connection().getMetadata(cl);\r\n\r\n    //Check if the relations fields have restrictions\r\n    for (var r = 0; r < vdata.relations.length; r++) {\r\n      var rel = vdata.relations[r];\r\n      var data = entity[rel.propertyName];\r\n      if (data !== undefined && !Array.isArray(data)) {\r\n        let cl = rel.type;\r\n        var t = await this.checkParentRight(context, cl, [data[\"id\"]]);\r\n        if (!t) {\r\n          throw new JassiError(\"you are not allowed to save \" + classes.getClassName(cl) + \" with id \" + entity[\"id\"] + \" - no access to property \" + rel.propertyName);\r\n        }\r\n      }\r\n      if (data !== undefined && Array.isArray(data)) {\r\n        let cl = rel.type;\r\n        var arr = [];\r\n        for (let x = 0; x < data.length; x++) {\r\n          arr.push(data[x].id);\r\n        }\r\n        let t = await this.checkParentRight(context, cl, arr);\r\n        if (!t) {\r\n          throw new JassiError(\"you are not allowed to save \" + classes.getClassName(cl) + \" with id \" + entity[\"id\"] + \" - no access to property \" + rel.propertyName);\r\n        }\r\n      }\r\n      /* var tp=await p1.__proto__.constructor;\r\n       var test=await this.connection().manager.findOne(tp,902);\r\n       var ob=await this.connection().manager.preload(tp,p1);\r\n       if(ob===undefined){//does not exists in DB\r\n         ob=p1;\r\n       }*/\r\n    }\r\n  }\r\n  findOne<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, id?: string | number | Date | ObjectID, options?: FindOneOptions<Entity>): Promise<Entity | undefined>;\r\n  /**\r\n   * Finds first entity that matches given find options.\r\n   */\r\n  findOne<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, options?: FindOneOptions<Entity>): Promise<Entity | undefined>;\r\n  /**\r\n  * Finds first entity that matches given conditions.\r\n  */\r\n  findOne<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, conditions?: FindConditions<Entity>, options?: FindOneOptions<Entity>): Promise<Entity | undefined>;\r\n  /**\r\n   * Finds first entity that matches given conditions.\r\n   */\r\n  async findOne<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, p1?: any, p2?: any): Promise<Entity | undefined> {\r\n    if (typeof p1 === \"string\" || typeof p1 === \"number\") {//search by id\r\n      p1 = { id: p1 };\r\n    }\r\n    var ret = await this.find(context, entityClass, p1);\r\n    if (ret === undefined || ret.length === 0)\r\n      return undefined;\r\n    else\r\n      return <Entity>ret[0];\r\n    //return this.connection().manager.findOne(entityClass,id,options);\r\n    // else\r\n    //return this.connection().manager.findOne(entityClass, p1, p2);\r\n  }\r\n  /**\r\n * Finds entities that match given options.\r\n */\r\n  async find<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, options?: MyFindManyOptions<Entity>): Promise<Entity[]>;\r\n\r\n  /**\r\n   * Finds entities that match given conditions.\r\n   */\r\n  async find<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, conditions?: FindConditions<Entity>): Promise<Entity[]>;\r\n\r\n\r\n  /**\r\n    * Finds first entity that matches given conditions.\r\n    */\r\n  async find<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, p1?: any): Promise<Entity[]> {\r\n    //return this.connection().manager.findOne(entityClass,id,options);\r\n    // else\r\n\r\n    await this.waitForConnection;\r\n    var options: MyFindManyOptions<Entity> = p1;\r\n    var onlyColumns = options?.onlyColumns;\r\n    var clname = classes.getClassName(entityClass);\r\n    var cl = classes.getClass(clname);\r\n    var relations = new RelationInfo(context, clname, this);\r\n    var allRelations = this.resolveWildcharInRelations(clname, options?.relations);\r\n    if (options && options.relations) {\r\n      relations.addRelations(context, allRelations, true);\r\n    }\r\n    var ret = await this.connection().manager.createQueryBuilder().\r\n      select(\"me\").from(cl, \"me\");\r\n    if (options)\r\n      ret = relations.addWhere(context, <string>options.where, options.whereParams, ret);\r\n    delete options?.where;\r\n    delete options?.whereParams;\r\n    delete options?.onlyColumns;\r\n    ret = relations.addWhereBySample(context, options, ret);\r\n    ret = relations.join(ret);\r\n    if (!context.request.user.isAdmin)\r\n      ret = await relations.addParentRightDestriction(context, ret);\r\n    if (options?.skip) {\r\n      ret.skip(options.skip);\r\n      delete options.skip;\r\n    }\r\n    if (options?.take) {\r\n      ret.take(options.take);\r\n      delete options.take;\r\n    }\r\n    if (options?.order) {\r\n      for (var key in options?.order) {\r\n        ret.addOrderBy(\"\\\"me_\" + key + \"\\\"\", options.order[key]);\r\n      }\r\n\r\n      delete options.order;\r\n    }\r\n    var test = ret.getSql();\r\n    let objs = await ret.getMany();\r\n    if (objs && onlyColumns) {\r\n      objs.forEach((ob) => {\r\n        for (var key in ob) {\r\n          if (onlyColumns.indexOf(key) === -1 && allRelations.indexOf(key) === -1 && key !== \"id\")\r\n            ob[key] = undefined;\r\n        }\r\n      });\r\n    }\r\n    return objs;\r\n    // return await this.connection().manager.find(entityClass, p1);\r\n  }\r\n  private resolveWildcharInRelations(classname, relation: string[]): string[] {\r\n    var ret = [];\r\n    if (!relation)\r\n      return ret;\r\n    for (let r = 0; r < relation.length; r++) {\r\n      if (relation[r] === \"*\") {\r\n        var vdata = getConnection().getMetadata(classes.getClass(classname));\r\n        for (var re = 0; re < vdata.relations.length; re++) {\r\n          var s = vdata.relations[re].propertyName;\r\n          if (ret.indexOf(s) === -1)\r\n            ret.push(s);\r\n        }\r\n      } else\r\n        ret.push(relation[r]);\r\n    }\r\n    return ret;\r\n  }\r\n  public async createUser(context: Context, username: string, password: string): Promise<User> {\r\n    await this.waitForConnection;\r\n    //var hh=getConnection().manager.findOne(User,{ email: username });\r\n    if (await getConnection().manager.findOne(User, { email: username }) !== undefined) {\r\n      throw new Error(\"User already exists\");\r\n    }\r\n\r\n    const user = new User();\r\n    user.email = username;\r\n    user.password = password;\r\n    //first user would be admin\r\n\r\n    if (await this.connection().manager.findOne(User) === undefined) {\r\n      user.isAdmin = true;\r\n    }\r\n    //password is encrypted when saving\r\n    /* await new Promise((resolve) => {\r\n      const crypto = require('crypto');\r\n\r\n      const salt = crypto.randomBytes(8).toString('base64');\r\n      crypto.pbkdf2(password, salt, passwordIteration, 512, 'sha512', (err, derivedKey) => {\r\n        if (err) throw err;\r\n        resolve(passwordIteration.toString() + \":\" + salt + \":\" + derivedKey.toString('base64'));//.toString('base64'));  // '3745e48...aa39b34'\r\n      });\r\n    })*/\r\n    await this.save(context, user);\r\n    delete user.password;\r\n    return user;\r\n  }\r\n\r\n  async login(context: Context, user: string, password) {\r\n    await this.waitForConnection;\r\n    /* const users = await this.connection().getRepository(User)\r\n     .createQueryBuilder()\r\n     .select(\"user.id\", \"id\")\r\n     //.addSelect(\"user.password\")\r\n     .getMany();*/\r\n    var ret = await this.connection().manager.createQueryBuilder().\r\n      select(\"me\").from(User, \"me\").addSelect(\"me.password\").\r\n      andWhere(\"me.email=:email\", { email: user });\r\n    /* if (options)\r\n       ret = relations.addWhere(<string>options.where, options.whereParams, ret);\r\n \r\n     ret = relations.addWhereBySample(options, ret);\r\n     ret = relations.join(ret);\r\n     ret = await relations.addParentRightDestriction(ret);*/\r\n\r\n    var auser = await ret.getOne();\r\n    if (!auser || !password)\r\n      return undefined;\r\n    let pw = auser.password.split(\":\");\r\n    let iteration = parseInt(pw[0]);\r\n    let salt = pw[1];\r\n    var test = await new Promise((resolve) => {\r\n      const crypto = require('crypto');\r\n      crypto.pbkdf2(password, salt, iteration, 512, 'sha512', (err, derivedKey) => {\r\n        if (err) throw err;\r\n        resolve(passwordIteration.toString() + \":\" + salt + \":\" + derivedKey.toString('base64'));//.toString('base64'));  // '3745e48...aa39b34'\r\n      });\r\n    })\r\n\r\n    if (test === auser.password) {\r\n      delete auser.password;\r\n      return auser;\r\n    } else {\r\n      delete auser.password;\r\n    }\r\n    return undefined;\r\n  }\r\n  async checkParentRight(context: Context, entityClass, ids: any[]): Promise<boolean> {\r\n    await this.waitForConnection;\r\n    var clname = classes.getClassName(entityClass);\r\n    var cl = classes.getClass(clname);\r\n    var relations = new RelationInfo(context, clname, this);\r\n\r\n    var ret = await this.connection().manager.createQueryBuilder().\r\n      select(\"me\").from(cl, \"me\");\r\n\r\n    ret = relations.join(ret);\r\n    ret.andWhere(\"me.id IN (:...ids)\", { ids: ids });\r\n    if (!context.request.user.isAdmin)\r\n      ret = await relations.addParentRightDestriction(context, ret);\r\n    var tt = ret.getSql();\r\n\r\n    var test = await ret.getCount();\r\n    return test === ids.length;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nclass RelationInfo {\r\n  className: string;\r\n  dbmanager: DBManager;\r\n  counter = 100;\r\n  relations: {\r\n    [path: string]: {\r\n      name: string,\r\n      className: string,\r\n      fullPath: string,\r\n      parentRights?: ParentRightProperties[],\r\n      doSelect: boolean\r\n    }\r\n  }\r\n  constructor(context: Context, className: string, dbmanager: DBManager) {\r\n    this.className = className;\r\n    this.dbmanager = dbmanager\r\n    this.relations = {};\r\n    var testPR = registry.getData(\"$ParentRights\", className);\r\n    this.relations[\"\"] = {\r\n      name: \"\",\r\n      className: className,\r\n      fullPath: \"\",\r\n      parentRights: (testPR.length !== 0 ? testPR[0].params[0] : undefined),\r\n      doSelect: true\r\n    }\r\n    this.addRelationsFromParentRights(context, \"\");\r\n  }\r\n\r\n  private addRelationsFromParentRights(context, relationname: string) {\r\n    var pr = this.relations[relationname];\r\n    if (registry.getMemberData(\"$CheckParentRight\") !== undefined) {\r\n      var data = registry.getMemberData(\"$CheckParentRight\")[pr.className];\r\n      if (data !== undefined) {\r\n        var membername = \"\";\r\n        for (var key in data) {\r\n          membername = key;\r\n        }\r\n        var r = relationname + (relationname === \"\" ? \"\" : \".\") + membername\r\n        this.addRelations(context, [r], false);\r\n        this.addRelationsFromParentRights(context, r);\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  private _getRelationFromProperty(property: string): string {\r\n    var keys = property.split(\".\");\r\n    var path = \"me\";\r\n    for (var x = 0; x < keys.length; x++) {\r\n\r\n      if (x + 1 === keys.length)\r\n        path = path + \".\";\r\n      else\r\n        path = path + \"_\";\r\n      path = path + keys[x];\r\n    }\r\n    return path;\r\n  }\r\n  /**\r\n   * add an andWhere to the sql-Query to check the parent rights\r\n   * @param builder \r\n   */\r\n  join<Entity>(builder: SelectQueryBuilder<Entity>): SelectQueryBuilder<Entity> {\r\n    var ret = builder;\r\n    for (var key in this.relations) {\r\n      if (key !== \"\") {\r\n        /* var keys = key.split(\".\");\r\n         var path = \"me\";\r\n         for (var x = 0; x < keys.length; x++) {\r\n \r\n           if (x + 1 === keys.length)\r\n             path = path + \".\";\r\n           else\r\n             path = path + \"_\";\r\n           path = path + keys[x];\r\n         }*/\r\n        var path = this._getRelationFromProperty(key);\r\n        if (this.relations[key].doSelect)\r\n          ret = ret.leftJoinAndSelect(path, \"me_\" + key.replaceAll(\".\", \"_\"));\r\n        else\r\n          ret = ret.leftJoin(path, \"me_\" + key.replaceAll(\".\", \"_\"));\r\n      }\r\n\r\n\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * add an andWhere to the sql-Query to check the parent rights\r\n   * @param builder \r\n   */\r\n  async addParentRightDestriction<Entity>(context: Context, builder: SelectQueryBuilder<Entity>): Promise<SelectQueryBuilder<Entity>> {\r\n    var username = \"a@b.com\";\r\n    var ret = builder;\r\n    //first we get the sql from User-Rights we had to check \r\n    var kk = context.request.user;\r\n    var userid = context.request.user.user;\r\n    var query = this.dbmanager.connection().createQueryBuilder().\r\n      select(\"me\").from(classes.getClass(\"jassijs.security.ParentRight\"), \"me\").\r\n      leftJoin(\"me.groups\", \"me_groups\").\r\n      leftJoin(\"me_groups.users\", \"me_groups_users\");\r\n\r\n    query = query.andWhere(\"me_groups_users.id=:theUserId\", { theUserId: userid });\r\n\r\n\r\n    var doBr = false;\r\n    query = query.andWhere(new Brackets((entr) => {\r\n      var parentrights = undefined;\r\n\r\n      for (var relationname in this.relations) {\r\n        var relation = this.relations[relationname];\r\n        if (relation.parentRights !== undefined) {\r\n          for (var x = 0; x < relation.parentRights.length; x++) {\r\n            doBr = true;\r\n            var right = relation.parentRights[x];\r\n            var param = {};\r\n            param[\"classname\" + this.counter] = relation.className;\r\n            param[\"name\" + this.counter] = right.name;\r\n            entr.orWhere(\"me.classname=:classname\" + this.counter + \" and me.name=:name\" + this.counter, param);\r\n            this.counter++;\r\n          }\r\n        }\r\n      }\r\n      if (!doBr) {\r\n        doBr = true;\r\n        entr.orWhere(\"me.classname=me.classname\");\r\n      }\r\n    }));\r\n\r\n    var debug = query.getSql();\r\n    var parentRights = await query.getMany();\r\n    for (var relationname in this.relations) {\r\n      var relation = this.relations[relationname];\r\n      if (relation.parentRights !== undefined) {\r\n        ret = ret.andWhere(new Brackets((qu) => {\r\n          for (var p = 0; p < relation.parentRights.length; p++) {\r\n            var pr = relation.parentRights[p];\r\n            var found = false;\r\n            for (var z = 0; z < parentRights.length; z++) {\r\n              var oneRight = parentRights[z];\r\n              if (oneRight.name === pr.name && oneRight.classname === relation.className) {\r\n                var sql = pr.sqlToCheck;\r\n                //modify sql that params are unique\r\n                var param = {};\r\n                for (var field in oneRight) {\r\n                  if (field !== \"classname\" && field !== \"groups\" && field !== \"name\") {\r\n                    sql = sql.replaceAll(\":\" + field, \":\" + field + this.counter);\r\n                    if (relation.fullPath !== \"\")\r\n                      sql = sql.replaceAll(\"me.\", \"\\\"me_\" + relation.fullPath.replaceAll(\".\", \"_\") + \"\\\".\");\r\n                    param[field + this.counter] = oneRight[field];\r\n                  }\r\n                }\r\n                qu.orWhere(sql, param);\r\n                found = true;\r\n                this.counter++;\r\n              }\r\n            }\r\n            if (!found) {\r\n              qu.andWhere(\"me.id>1 and me.id<1\", param);//no right exists\r\n            }\r\n          }\r\n        }));\r\n\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  private _checkExpression(context, node) {\r\n    if (node.operator !== undefined) {\r\n      this._parseNode(context, node);\r\n    }\r\n    //replace id to me.id and ar.zeile.id to me_ar_zeile.id\r\n    if (node.type === \"Identifier\" && !node.value.startsWith(\"xxxparams\")) {\r\n      var name = node.value;\r\n      var path = this._getRelationFromProperty(name);\r\n      /*      var keys = name.split(\".\");\r\n            var path = \"me\";\r\n            for (var x = 0; x < keys.length; x++) {\r\n      \r\n              if (x + 1 === keys.length)\r\n                path = path + \".\";\r\n              else\r\n                path = path + \"_\";\r\n              path = path + keys[x];\r\n            }*/\r\n      node.value = path;\r\n      var pack = path.split(\".\")[0].substring(3);\r\n      if (pack !== \"\")\r\n        this.addRelations(context, [pack], false);\r\n    }\r\n    var _this = this;\r\n    if (node.type === \"SimpleExprParentheses\") {\r\n      node.value.value.forEach(element => {\r\n        _this._parseNode(context, element);\r\n      });\r\n    }\r\n  }\r\n  private _parseNode(context: Context, node) {\r\n    /* if (node.operator !== undefined) {\r\n       var left = node.left;\r\n       var right = node.right;\r\n       this._checkExpression(context, left);\r\n       this._checkExpression(context, right);\r\n     }*/\r\n    var left = node.left;\r\n    var right = node.right;\r\n    if (node.left !== undefined) {\r\n      this._checkExpression(context, left);\r\n    }\r\n    if (node.right !== undefined) {\r\n      this._checkExpression(context, right);\r\n    }\r\n\r\n\r\n\r\n  }\r\n  addWhereBySample<Entity>(context: Context, param: any, builder: SelectQueryBuilder<Entity>): SelectQueryBuilder<Entity> {\r\n\r\n    var ret = builder;\r\n    for (var key in param) {\r\n      if (key === \"cache\" || key === \"join\" || key === \"loadEagerRelations\" || key === \"loadRelationids\" || key == \"lock\" || key == \"order\" ||\r\n        key === \"relations\" || key === \"select\" || key === \"skip\" || key === \"take\" || key === \"where\" || key === \"withDeleted\") {\r\n        continue;\r\n      }\r\n      //this should prevent sql injection\r\n      var test = /[A-Z,a-z][A-Z,a-z,0-9,\\.]*/g.exec(key);\r\n      if (test === null || test[0] !== key)\r\n        throw new JassiError(\"could not set property \" + key + \" in where clause\");\r\n      var field = this._getRelationFromProperty(key);\r\n      var pack = field.split(\".\")[0].substring(3);\r\n      if (pack !== \"\")\r\n        this.addRelations(context, [pack], false);\r\n\r\n      var placeholder = \"pp\" + this.counter++;\r\n      var par = {};\r\n      par[placeholder] = param[key];\r\n      ret = ret.andWhere(field + \"=:\" + placeholder, par)\r\n    }\r\n    return ret;\r\n    /* var dummyselect = \"select * from k where \";\r\n     //we must replace because parsing Exception\r\n     var ast = parser.parse(dummyselect + sql.replaceAll(\":\",\"xxxparams\"));\r\n     this._parseNode(ast.value.where);\r\n     var newsql=parser.stringify(ast).replaceAll(\"xxxparams\",\":\");\r\n     ret.andWhere(newsql.substring(dummyselect.length),whereParams);\r\n     return ret;*/\r\n  }\r\n  addWhere<Entity>(context: Context, sql: string, whereParams: any, builder: SelectQueryBuilder<Entity>): SelectQueryBuilder<Entity> {\r\n    var ret = builder;\r\n    if (sql === undefined)\r\n      return ret;\r\n    var dummyselect = \"select * from k where \";\r\n    //we must replace because parsing Exception\r\n    var fullSQL = dummyselect + sql.replaceAll(\":...\", \"fxxparams\").replaceAll(\":\", \"xxxparams\");\r\n    fullSQL = fullSQL.replaceAll(\"\\\" AS TEXT\", \" AS_TEXT\\\"\");\r\n    var ast = parser.parse(fullSQL);\r\n    this._parseNode(context, ast.value.where);\r\n    var newsql: string = parser.stringify(ast).replaceAll(\"fxxparams\", \":...\").replaceAll(\"xxxparams\", \":\");\r\n    newsql = newsql.replaceAll(\" AS_TEXT\\\"\", \"\\\" AS TEXT\");\r\n    ret.andWhere(newsql.substring(dummyselect.length), whereParams);\r\n    return ret;\r\n  }\r\n\r\n  addRelations(context: Context, relations: string[], doselect: boolean) {\r\n    if (relations === undefined)\r\n      return;\r\n    for (var z = 0; z < relations.length; z++) {\r\n      var relation = relations[z];\r\n      var all = relation.split(\".\");\r\n      var curPath = \"\";\r\n      var parentPath = \"\";\r\n      var curClassname = this.className;\r\n      for (var x = 0; x < all.length; x++) {\r\n        parentPath = curPath;\r\n        curPath = curPath + (curPath === \"\" ? \"\" : \".\") + all[x];\r\n        if (this.relations[curPath] === undefined) {\r\n          var vdata = this.dbmanager.connection().getMetadata(classes.getClass(curClassname));\r\n          //read type\r\n          var membername = all[x];\r\n          for (var r = 0; r < vdata.relations.length; r++) {\r\n            var rel = vdata.relations[r];\r\n            if (rel.propertyName === membername) {\r\n              var clname = classes.getClassName(rel.type);\r\n              var testPR = registry.getData(\"$ParentRights\", clname);\r\n              this.relations[curPath] = {\r\n                className: classes.getClassName(rel.type),\r\n                name: membername,\r\n                fullPath: curPath,\r\n                parentRights: (testPR.length !== 0 ? testPR[0].params[0] : undefined),\r\n                doSelect: doselect\r\n              }\r\n            }\r\n          }\r\n          //Parentrights\r\n          membername = \"\";\r\n          if (!context.request.user?.isAdmin) {\r\n            if (registry.getMemberData(\"$CheckParentRight\") !== undefined) {\r\n              var data = registry.getMemberData(\"$CheckParentRight\")[curClassname];\r\n              for (var key in data) {\r\n                membername = key;\r\n              }\r\n            }\r\n          }\r\n          if (membername !== \"\") {\r\n            for (var r = 0; r < vdata.relations.length; r++) {\r\n              var rel = vdata.relations[r];\r\n              if (rel.propertyName === membername) {\r\n                var clname = classes.getClassName(rel.type);\r\n                var testPR = registry.getData(\"$ParentRights\", clname);\r\n                var mpath = parentPath + (parentPath === \"\" ? \"\" : \".\") + membername;\r\n                this.relations[mpath] = {\r\n                  className: classes.getClassName(rel.type),\r\n                  name: membername,\r\n                  fullPath: mpath,\r\n                  parentRights: (testPR.length !== 0 ? testPR[0].params[0] : undefined),\r\n                  doSelect: doselect\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if (doselect) {\r\n          this.relations[curPath].doSelect = true;\r\n        }\r\n\r\n        curClassname = this.relations[curPath].className;\r\n      }\r\n    }\r\n  }\r\n}\r\n","\r\nimport { User } from \"jassijs/remote/security/User\";\r\nimport { UserModel } from \"jassijs/UserModel\";\r\nimport { Context } from \"jassijs/remote/RemoteObject\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\n\r\nconst passport = require('passport');\r\nconst LocalStrategy = require('passport-local').Strategy;\r\nconst passportJWT = require('passport-jwt');\r\nconst JWTStrategy = passportJWT.Strategy;\r\nconst jwt = require('jsonwebtoken');\r\n\r\n\r\nconst JWT_EXPIRATION_MS=60000*30;//30min\r\nexport {JWT_EXPIRATION_MS};\r\n\r\npassport.use(new LocalStrategy({\r\n  usernameField: \"username\",\r\n  passwordField: \"password\",\r\n}, async (username, password, done) => {\r\n  try {\r\n    var context:Context={\r\n      isServer:true\r\n  }\r\n    const userDocument = await (await serverservices.db).login(context,username,password); //UserModel.findOne({username: username});\r\n    if (userDocument) {\r\n      return done(null, userDocument);\r\n    } else {\r\n      return done('Incorrect Username / Password');\r\n    }\r\n  } catch (error) {\r\n    done(error);\r\n  }\r\n}));\r\n\r\npassport.use(new JWTStrategy({\r\n    jwtFromRequest: req => req.cookies.jwt,\r\n    secretOrKey: UserModel.secret,\r\n  },\r\n  (jwtPayload, done) => {\r\n    if (Date.now() > jwtPayload.expires) {\r\n      return done('jwt expired');\r\n    }\r\n\r\n    return done(null, jwtPayload);\r\n  }\r\n));\r\n\r\n","\r\nimport { type } from \"os\";\r\nimport { User } from \"jassijs/remote/security/User\";\r\nimport { JWT_EXPIRATION_MS } from \"./PassportSetup\";\r\nimport { UserModel } from \"jassijs/UserModel\";\r\nimport { Context } from \"jassijs/remote/RemoteObject\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\n\r\nconst express = require('express');\r\nconst passport = require('passport');\r\nconst jwt = require('jsonwebtoken');\r\n\r\n\r\n\r\nvar router = express.Router();\r\n\r\nrouter.post('/register', async (req, res) => {\r\n    var username = decodeURIComponent(req.rawBody.split(\"&\")[0].split(\"=\")[1]);\r\n    var password = decodeURIComponent(req.rawBody.split(\"&\")[1].split(\"=\")[1]);\r\n\r\n\r\n    try {\r\n\r\n        var context:Context={\r\n            isServer:true,\r\n            request:req\r\n        }\r\n        await (await serverservices.db).createUser(context,username, password);\r\n        console.log(\"user created\");\r\n        /*const user= new User();\r\n        user.email=username;\r\n        user.password=passwordHash;\r\n        await (await DBManager.get()).save(user);*/\r\n\r\n        res.redirect(\"/login.html\");//status(200).send({ username });\r\n\r\n    } catch (error) {\r\n        res.status(400).send({\r\n            error: error.message,\r\n        });\r\n    }\r\n});\r\n\r\nrouter.post('/login', (req, res) => {\r\n    var username = decodeURIComponent(req.rawBody.split(\"&\")[0].split(\"=\")[1]);\r\n    var password = decodeURIComponent(req.rawBody.split(\"&\")[1].split(\"=\")[1]);\r\n\r\n    req.body = {\r\n        username,\r\n        password\r\n    }\r\n    passport.authenticate(\r\n        'local',\r\n        { session: false },\r\n        (error, user) => {\r\n\r\n            if (error || !user) {\r\n                res.status(400).json({ error });\r\n            }\r\n\r\n            /** This is what ends up in our JWT */\r\n            const payload = {\r\n                user: user.id,\r\n                isAdmin: (user.isAdmin===null?false:user.isAdmin),\r\n                expires: Date.now() + JWT_EXPIRATION_MS// parseInt(process.env.JWT_EXPIRATION_MS),\r\n            };\r\n\r\n            /** assigns payload to req.user */\r\n            req.login(payload, { session: false }, (error) => {\r\n                if (error) {\r\n                    res.status(400).send({ error });\r\n                }\r\n\r\n                /** generate a signed json web token and return it in the response */\r\n                const token = jwt.sign(JSON.stringify(payload), UserModel.secret);\r\n\r\n                /** assign our jwt to the cookie */\r\n                res.cookie('jwt', token, { httpOnly: true/*, secure: true */ });\r\n                 console.log(\"enable secure login\");\r\n                res.status(200).send({ username: user.username });\r\n            });\r\n        },\r\n    )(req, res);\r\n});\r\nvar loginRegister = router;\r\nexport { loginRegister };\r\n\r\nexport function manageToken(req, res, next) {\r\n    jwt.verify(req.cookies[\"jwt\"], UserModel.secret, function (err, decodedToken) {\r\n        if (err) {\r\n            //      console.log(\"expired\")\r\n        } else {\r\n            var test = JWT_EXPIRATION_MS * 0.75;\r\n            if (decodedToken.expires < new Date().getTime()) {\r\n                //expired\r\n\r\n            } else if ((decodedToken.expires - test) < new Date().getTime()) {//refreh\r\n                console.log(\"refresh Token\");\r\n                decodedToken.expires = Date.now() + JWT_EXPIRATION_MS;\r\n                const newToken = jwt.sign(JSON.stringify(decodedToken), UserModel.secret);\r\n                res.cookie(\"jwt\", newToken, { httpOnly: true/*,secure:true*/ })\r\n                req.user = decodedToken.user;\r\n                req.isAdmin == decodedToken.isAdmin;\r\n            } else {\r\n                req.user = decodedToken.user;\r\n                req.isAdmin == decodedToken.isAdmin;\r\n            }\r\n        }\r\n    });\r\n    next();\r\n\r\n}","import Filesystem from \"jassijs/server/Filesystem\";\r\nimport fs = require('fs');\r\n\r\nexport function zip(req, res) {\r\n    var url = req.query.path;\r\n    let pos = url.lastIndexOf(\"/\");\r\n    var name = (pos === -1 ? \"data\" : url.substring(pos + 1));\r\n  /*  new Filesystem().zipFolder(\"./../\" + url, \"/tmp/\" + name + \".zip\").then((data) => {\r\n      if (data !== undefined) {\r\n        res.status(500).send(data[\"message\"]);\r\n        return;\r\n      }\r\n      res.sendFile(\"/tmp/\" + name + \".zip\", function (err) {\r\n        try {\r\n          fs.unlinkSync(\"/tmp/\" + name + \".zip\");\r\n        } catch (e) {\r\n          console.log(\"error removing \", \"/tmp/\" + name + \".zip\");\r\n        }\r\n      });\r\n    });*/\r\n  }","export function rawbody (req, res, next) {\r\n    var data = \"\";\r\n    req.on('data', function (chunk) { data += chunk })\r\n    req.on('end', function () {\r\n      req.rawBody = data;\r\n      next();\r\n    })\r\n  } ","//templating is slow so we chache\r\nvar funccache: any = {};\r\n//https://github.com/Mottie/javascript-number-formatter/blob/master/src/format.js\r\n//license https://github.com/Mottie/javascript-number-formatter/blob/master/LICENSE\r\nconst maskRegex = /[0-9\\-+#]/;\r\nconst notMaskRegex = /[^\\d\\-+#]/g;\r\n\r\nfunction getIndex(mask) {\r\n\treturn mask.search(maskRegex);\r\n}\r\n\r\nfunction processMask(mask = \"#.##\") {\r\n\tconst maskObj: any = {};\r\n\tconst len = mask.length;\r\n\tconst start = getIndex(mask);\r\n\tmaskObj.prefix = start > 0 ? mask.substring(0, start) : \"\";\r\n\r\n\t// Reverse string: not an ideal method if there are surrogate pairs\r\n\tconst end = getIndex(mask.split(\"\").reverse().join(\"\"));\r\n\tconst offset = len - end;\r\n\tconst substr = mask.substring(offset, offset + 1);\r\n\t// Add 1 to offset if mask has a trailing decimal/comma\r\n\tconst indx = offset + ((substr === \".\" || (substr === \",\")) ? 1 : 0);\r\n\tmaskObj.suffix = end > 0 ? mask.substring(indx, len) : \"\";\r\n\r\n\tmaskObj.mask = mask.substring(start, indx);\r\n\tmaskObj.maskHasNegativeSign = maskObj.mask.charAt(0) === \"-\";\r\n\tmaskObj.maskHasPositiveSign = maskObj.mask.charAt(0) === \"+\";\r\n\r\n\t// Search for group separator & decimal; anything not digit,\r\n\t// not +/- sign, and not #\r\n\tlet result = maskObj.mask.match(notMaskRegex);\r\n\t// Treat the right most symbol as decimal\r\n\tmaskObj.decimal = (result && result[result.length - 1]) || \".\";\r\n\t// Treat the left most symbol as group separator\r\n\tmaskObj.separator = (result && result[1] && result[0]) || \",\";\r\n\r\n\t// Split the decimal for the format string if any\r\n\tresult = maskObj.mask.split(maskObj.decimal);\r\n\tmaskObj.integer = result[0];\r\n\tmaskObj.fraction = result[1];\r\n\treturn maskObj;\r\n}\r\n\r\nfunction processValue(value, maskObj, options) {\r\n\tlet isNegative = false;\r\n\tconst valObj: any = {\r\n\t\tvalue\r\n\t};\r\n\tif (value < 0) {\r\n\t\tisNegative = true;\r\n\t\t// Process only abs(), and turn on flag.\r\n\t\tvalObj.value = -valObj.value;\r\n\t}\r\n\r\n\tvalObj.sign = isNegative ? \"-\" : \"\";\r\n\r\n\t// Fix the decimal first, toFixed will auto fill trailing zero.\r\n\tvalObj.value = Number(valObj.value).toFixed(maskObj.fraction && maskObj.fraction.length);\r\n\t// Convert number to string to trim off *all* trailing decimal zero(es)\r\n\tvalObj.value = Number(valObj.value).toString();\r\n\r\n\t// Fill back any trailing zero according to format\r\n\t// look for last zero in format\r\n\tconst posTrailZero = maskObj.fraction && maskObj.fraction.lastIndexOf(\"0\");\r\n\tlet [valInteger = \"0\", valFraction = \"\"] = valObj.value.split(\".\");\r\n\tif (!valFraction || (valFraction && valFraction.length <= posTrailZero)) {\r\n\t\tvalFraction = posTrailZero < 0\r\n\t\t\t? \"\"\r\n\t\t\t: (Number(\"0.\" + valFraction).toFixed(posTrailZero + 1)).replace(\"0.\", \"\");\r\n\t}\r\n\r\n\tvalObj.integer = valInteger;\r\n\tvalObj.fraction = valFraction;\r\n\taddSeparators(valObj, maskObj);\r\n\r\n\t// Remove negative sign if result is zero\r\n\tif (valObj.result === \"0\" || valObj.result === \"\") {\r\n\t\t// Remove negative sign if result is zero\r\n\t\tisNegative = false;\r\n\t\tvalObj.sign = \"\";\r\n\t}\r\n\r\n\tif (!isNegative && maskObj.maskHasPositiveSign) {\r\n\t\tvalObj.sign = \"+\";\r\n\t} else if (isNegative && maskObj.maskHasPositiveSign) {\r\n\t\tvalObj.sign = \"-\";\r\n\t} else if (isNegative) {\r\n\t\tvalObj.sign = options && options.enforceMaskSign && !maskObj.maskHasNegativeSign\r\n\t\t\t? \"\"\r\n\t\t\t: \"-\";\r\n\t}\r\n\r\n\treturn valObj;\r\n}\r\n\r\nfunction addSeparators(valObj, maskObj) {\r\n\tvalObj.result = \"\";\r\n\t// Look for separator\r\n\tconst szSep = maskObj.integer.split(maskObj.separator);\r\n\t// Join back without separator for counting the pos of any leading 0\r\n\tconst maskInteger = szSep.join(\"\");\r\n\r\n\tconst posLeadZero = maskInteger && maskInteger.indexOf(\"0\");\r\n\tif (posLeadZero > -1) {\r\n\t\twhile (valObj.integer.length < (maskInteger.length - posLeadZero)) {\r\n\t\t\tvalObj.integer = \"0\" + valObj.integer;\r\n\t\t}\r\n\t} else if (Number(valObj.integer) === 0) {\r\n\t\tvalObj.integer = \"\";\r\n\t}\r\n\r\n\t// Process the first group separator from decimal (.) only, the rest ignore.\r\n\t// get the length of the last slice of split result.\r\n\tconst posSeparator = (szSep[1] && szSep[szSep.length - 1].length);\r\n\tif (posSeparator) {\r\n\t\tconst len = valObj.integer.length;\r\n\t\tconst offset = len % posSeparator;\r\n\t\tfor (let indx = 0; indx < len; indx++) {\r\n\t\t\tvalObj.result += valObj.integer.charAt(indx);\r\n\t\t\t// -posSeparator so that won't trail separator on full length\r\n\t\t\tif (!((indx - offset + 1) % posSeparator) && indx < len - posSeparator) {\r\n\t\t\t\tvalObj.result += maskObj.separator;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tvalObj.result = valObj.integer;\r\n\t}\r\n\r\n\tvalObj.result += (maskObj.fraction && valObj.fraction)\r\n\t\t? maskObj.decimal + valObj.fraction\r\n\t\t: \"\";\r\n\treturn valObj;\r\n}\r\n\r\nfunction _format(mask, value, options = {}) {\r\n\tif (!mask || isNaN(Number(value))) {\r\n\t\t// Invalid inputs\r\n\t\treturn value;\r\n\t}\r\n\r\n\tconst maskObj: any = processMask(mask);\r\n\tconst valObj = processValue(value, maskObj, options);\r\n\treturn maskObj.prefix + valObj.sign + valObj.result + maskObj.suffix;\r\n};\r\n///////////////////////////////////END https://github.com/Mottie/javascript-number-formatter/blob/master/src/format.js\r\n//add 0 before\r\nfunction v(str,num){\r\n\tstr=str.toString();\r\n\twhile(str.length<num){\r\n\t\tstr=\"0\"+str;\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n//simple dateformat perhaps we should use moments\r\n//now we do something basics\r\nfunction formatDate(format:string,date:Date){\r\n\treturn format.\r\n\t\t\treplace(\"DD\",v(date.getDate(),2)).\r\n\t\t\treplace(\"D\",date.getDate().toString()).\r\n\t\t\treplace(\"MM\",v(date.getMonth(),2)).\r\n\t\t\treplace(\"YYYY\",date.getFullYear().toString()).\r\n\t\t\treplace(\"YY\",(date.getFullYear()%100).toString()).\r\n\t\t\treplace(\"A\",date.getHours()>12?\"PM\":\"AM\").\r\n\t\t\treplace(\"hh\",v(date.getHours(),2)).\r\n\t\t\treplace(\"h\",(date.getHours() % 12).toString()).\r\n\t\t\treplace(\"mm\",v(date.getMinutes(),2)).\r\n\t\t\treplace(\"ss\",v(date.getSeconds(),2));\r\n}\r\n\r\n//clone the obj depp\r\nfunction clone(obj) {\r\n\tif (obj === null || typeof (obj) !== 'object' || 'isActiveClone' in obj)\r\n\t\treturn obj;\r\n\r\n\tif (obj instanceof Date || typeof obj === \"object\")\r\n\t\tvar temp = new obj.constructor(); //or new Date(obj);\r\n\telse\r\n\t\tvar temp = obj.constructor();\r\n\r\n\tfor (var key in obj) {\r\n\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n\t\t\tobj['isActiveClone'] = null;\r\n\t\t\ttemp[key] = clone(obj[key]);\r\n\t\t\tdelete obj['isActiveClone'];\r\n\t\t}\r\n\t}\r\n\treturn temp;\r\n}\r\n\r\ndeclare global {\r\n\tinterface String {\r\n\t\t//@ts-ignore\r\n\t\treplaceTemplate: any;\r\n\t}\r\n}\r\n//replace the params in the string\r\n//@param {boolean} returnValues - if true the templatevalues would be returned not the replaces string\r\n//@ts-ignore\r\nString.prototype.replaceTemplate = function (params, returnValues) {\r\n\tconst names = Object.keys(params);\r\n\tconst vals = Object.values(params);\r\n\taddGroupFuncions(names, vals);\r\n\tfor (let x = 0; x < vals.length; x++) {\r\n\t\tif (typeof vals[x] === \"function\") {\r\n\t\t\tvals[x] = (<any>vals[x]).bind(params);\r\n\t\t}\r\n\t}\r\n\tlet stag = \"\";\r\n\tif (returnValues) {\r\n\t\tnames.push(\"tag\");\r\n\t\tstag = \"tag\";\r\n\t\tvals.push(function tag(strings, values) {\r\n\t\t\treturn values;\r\n\t\t});\r\n\t}\r\n\tvar func = funccache[names.join(\",\") + this];\r\n\tif (func === undefined) {//create functions is slow so cache\r\n\t\tfunc = new Function(...names, `return ${stag}\\`${this}\\`;`);\r\n\t\tfunccache[names.join(\",\") + this] = func;\r\n\t}\r\n\treturn func(...vals);\r\n}\r\n//get the member of the data\r\nfunction getVar(data, member: string) {\r\n\tvar ergebnis = member.toString().match(/\\$\\{(\\w||\\.)*\\}/g);\r\n\tif (!ergebnis)\r\n\t\tmember = \"${\" + member + \"}\";\r\n\tvar ob = member.replaceTemplate(data, true);\r\n\treturn ob;\r\n}\r\n//replace {{currentPage}} {{pageWidth}} {{pageHeight}} {{pageCount}} in header,footer, background\r\nfunction replacePageInformation(def) {\r\n\r\n\tif (def.background && typeof def.background !== \"function\") {\r\n\t\tlet d = JSON.stringify(def.background);\r\n\t\tdef.background = function (currentPage, pageSize) {\r\n\t\t\tlet sret = d.replaceAll(\"{{currentPage}}\", currentPage);\r\n\t\t\tsret = sret.replaceAll(\"{{pageWidth}}\", pageSize.width);\r\n\t\t\tsret = sret.replaceAll(\"{{pageHeight}}\", pageSize.height);\r\n\t\t\treturn JSON.parse(sret);\r\n\t\t}\r\n\t}\r\n\tif (def.header && typeof def.header !== \"function\") {\r\n\t\tlet d = JSON.stringify(def.header);\r\n\t\tdef.header = function (currentPage, pageCount) {\r\n\t\t\tlet sret = d.replaceAll(\"{{currentPage}}\", currentPage);\r\n\t\t\tsret = sret.replaceAll(\"{{pageCount}}\", pageCount);\r\n\t\t\treturn JSON.parse(sret);\r\n\t\t}\r\n\t}\r\n\tif (def.footer && typeof def.footer !== \"function\") {\r\n\t\tlet d = JSON.stringify(def.footer);\r\n\r\n\t\tdef.footer = function (currentPage, pageCount, pageSize) {\r\n\t\t\tlet sret = d.replaceAll(\"{{currentPage}}\", currentPage);\r\n\t\t\tsret = sret.replaceAll(\"{{pageCount}}\", pageCount);\r\n\t\t\tsret = sret.replaceAll(\"{{pageWidth}}\", pageSize.width);\r\n\t\t\tsret = sret.replaceAll(\"{{pageHeight}}\", pageSize.height);\r\n\t\t\treturn JSON.parse(sret);\r\n\t\t}\r\n\t}\r\n}\r\n//sort the group with groupfields\r\nfunction groupSort(group, name, groupfields, groupid = 0) {\r\n\tvar ret = { entries: [], name: name };\r\n\tif (groupid > 0)\r\n\t\tret[\"groupfield\"] = groupfields[groupid - 1];\r\n\tif (Array.isArray(group)) {\r\n\t\tgroup.forEach((neu) => ret.entries.push(neu));\r\n\r\n\t} else {\r\n\t\tfor (var key in group) {\r\n\t\t\tvar neu = group[key];\r\n\t\t\tret.entries.push(groupSort(neu, key, groupfields, groupid + 1));\r\n\t\t}\r\n\t\tret.entries = ret.entries.sort((a, b) => {\r\n\t\t\treturn a.name.localeCompare(b.name);\r\n\t\t});\r\n\r\n\t}\r\n\treturn ret;\r\n}\r\n/**\r\n * groups and sort the entries\r\n * @param {any[]} entries - the entries to group\r\n * @param {string[]} groupfields - the fields where the entries are grouped  \r\n */\r\nexport function doGroup(entries, groupfields: string[]) {\r\n\tvar ret: any = {};\r\n\tfor (var e = 0; e < entries.length; e++) {\r\n\t\tvar entry = entries[e];\r\n\t\tlet parent = ret;\r\n\t\tfor (var x = 0; x < groupfields.length; x++) {\r\n\t\t\tvar groupname = entry[groupfields[x]];\r\n\t\t\tif (x < groupfields.length - 1) {//undergroups does exists\r\n\t\t\t\tif (!parent[groupname])\r\n\t\t\t\t\tparent[groupname] = {};\r\n\t\t\t} else { //last group contaons the data\r\n\t\t\t\tif (!parent[groupname])\r\n\t\t\t\t\tparent[groupname] = [];\r\n\t\t\t\tparent[groupname].push(entry);\r\n\t\t\t}\r\n\t\t\tparent = parent[groupname];\r\n\t\t}\r\n\t}\r\n\t//sort\r\n\tvar sorted = groupSort(ret, \"main\", groupfields);\r\n\r\n\treturn sorted;\r\n}\r\n//replace the datatable {datable:...} to table:{}\r\nfunction replaceDatatable(def, data) {\r\n\tvar header = def.datatable.header;\r\n\tvar footer = def.datatable.footer;\r\n\tvar dataexpr = def.datatable.dataforeach;\r\n\tvar groups = def.datatable.groups;\r\n\tvar body = def.datatable.body;\r\n\tvar groupexpr: string[] = [];\r\n\tdef.table = clone(def.datatable);\r\n\tdef.table.body = []\r\n\tdelete def.table.header;\r\n\tdelete def.table.footer;\r\n\tdelete def.table.dataforeach;\r\n\tdelete def.table.groups;\r\n\r\n\tif (header)\r\n\t\tdef.table.body.push(header);\r\n\tif (groups === undefined || groups.length === 0) {\r\n\t\tdef.table.body.push({\r\n\t\t\tforeach: dataexpr,\r\n\t\t\tdo: body\r\n\t\t});\r\n\t} else {\r\n\t\tvar parent: any = {};\r\n\t\tvar toadd = {\r\n\t\t\tforeach: \"group1 in datatablegroups.entries\",\r\n\t\t\tdo: parent\r\n\t\t}\r\n\t\tdef.table.body.push(toadd);\r\n\t\tfor (var x = 0; x < groups.length; x++) {\r\n\t\t\tgroupexpr.push(groups[x].expression);\r\n\t\t\tif (x < groups.length - 1) {\r\n\t\t\t\tparent.foreach = \"group\" + (x + 2).toString() + \" in group\" + (x + 1).toString() + \".entries\";\r\n\t\t\t} else {\r\n\t\t\t\tparent.foreach = dataexpr.split(\" \")[0] + \" in group\" + (x + 1).toString() + \".entries\";\r\n\t\t\t}\r\n\t\t\tif (groups[x].header && groups[x].header.length > 0) {\r\n\t\t\t\tparent.dofirst = groups[x].header;\r\n\t\t\t}\r\n\t\t\tif (groups[x].footer && groups[x].footer.length > 0) {\r\n\t\t\t\tparent.dolast = groups[x].footer;\r\n\t\t\t}\r\n\t\t\tif (x < groups.length - 1) {\r\n\t\t\t\tparent.do = {};\r\n\t\t\t\tparent = parent.do;\r\n\t\t\t} else {\r\n\t\t\t\tparent.do = body;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar arr = getArrayFromForEach(def.datatable.dataforeach, data);\r\n\t\tdata.datatablegroups = doGroup(arr, groupexpr);\r\n\t}\r\n\r\n\tdelete def.datatable.dataforeach;\r\n\r\n\tif (footer)\r\n\t\tdef.table.body.push(footer);\r\n\t//delete data[variable];\r\n\tdelete def.datatable.header;\r\n\tdelete def.datatable.footer;\r\n\tdelete def.datatable.foreach;\r\n\tdelete def.datatable.groups;\r\n\tdelete def.datatable.body;\r\n\r\n\tfor (var key in def.datatable) {\r\n\t\tdef.table[key] = def.datatable[key];\r\n\t}\r\n\tdelete def.datatable;\r\n}\r\n\r\n//get the array for the foreach statement in the data\r\nfunction getArrayFromForEach(foreach, data) {\r\n\tvar sarr = foreach.split(\" in \")[1];\r\n\tvar arr;\r\n\tif (sarr === undefined) {\r\n\t\tarr = data?.items;//we get the main array\r\n\t} else {\r\n\t\tarr = getVar(data, sarr);\r\n\t}\r\n\treturn arr;\r\n}\r\n//replace templates e.g. ${name} with the data\r\nfunction replaceTemplates(def, data, param = undefined) {\r\n\tif (def === undefined)\r\n\t\treturn;\r\n\tif (def.datatable !== undefined) {\r\n\t\treplaceDatatable(def, data);\r\n\r\n\t}\r\n\tif(def.format){\r\n\t\tvar val = def.text.replaceTemplate(data,true);\r\n\t\tif(val===undefined)\r\n\t\t    return \"\";\r\n\t\telse if(typeof val == 'number'){\r\n\t\t\tdef.text=_format(def.format,val,{});\r\n\t\t}else if(val.getMonth){\r\n\t\t\tdef.text=formatDate(def.format,val);\r\n\t\t}\r\n\t\tdelete def.format;\r\n\t}\r\n\tif (def.foreach !== undefined) {\r\n\t\t//resolve foreach\r\n\t\t//\t{ foreach: \"line in invoice.lines\", do: ['{{line.text}}', '{{line.price}}', 'OK?']\t\r\n\t\tif (param?.parentArray === undefined) {\r\n\t\t\tthrow \"foreach is not surounded by an Array\";\r\n\t\t}\r\n\t\tvar variable = def.foreach.split(\" in \")[0];\r\n\t\tvar arr: any[] = getArrayFromForEach(def.foreach, data);\r\n\r\n\t\tif (param?.parentArrayPos === undefined) {\r\n\t\t\tparam.parentArrayPos = param?.parentArray.indexOf(def);\r\n\t\t\tparam?.parentArray.splice(param.parentArrayPos, 1);\r\n\t\t}\r\n\r\n\t\tfor (let x = 0; x < arr.length; x++) {\r\n\t\t\tdata[variable] = arr[x];\r\n\t\t\tdelete def.foreach;\r\n\t\t\tvar copy;\r\n\t\t\tif (def.dofirst && x === 0) {//render only forfirst\r\n\t\t\t\tcopy = clone(def.dofirst);\r\n\t\t\t\tcopy = replaceTemplates(copy, data, param);\r\n\t\t\t\tif (copy !== undefined)\r\n\t\t\t\t\tparam.parentArray.splice(param.parentArrayPos++, 0, copy);\r\n\t\t\t}\r\n\t\t\tif (def.do)\r\n\t\t\t\tcopy = clone(def.do);\r\n\t\t\telse\r\n\t\t\t\tcopy = clone(def);\r\n\r\n\t\t\tcopy = replaceTemplates(copy, data, param);\r\n\t\t\tif (copy !== undefined)\r\n\t\t\t\tparam.parentArray.splice(param.parentArrayPos++, 0, copy);\r\n\r\n\t\t\tif (def.dolast && x === arr.length - 1) {//render only forlast\r\n\t\t\t\tcopy = clone(def.dolast);\r\n\t\t\t\tcopy = replaceTemplates(copy, data, param);\r\n\t\t\t\tif (copy !== undefined)\r\n\t\t\t\t\tparam.parentArray.splice(param.parentArrayPos++, 0, copy);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdelete data[variable];\r\n\t\treturn undefined;\r\n\t} else if (Array.isArray(def)) {\r\n\t\tfor (var a = 0; a < def.length; a++) {\r\n\t\t\tif (def[a].foreach !== undefined) {\r\n\t\t\t\treplaceTemplates(def[a], data, { parentArray: def });\r\n\t\t\t\ta--;\r\n\t\t\t} else\r\n\t\t\t\tdef[a] = replaceTemplates(def[a], data, { parentArray: def });\r\n\t\t}\r\n\t\treturn def;\r\n\t} else if (typeof def === \"string\") {\r\n\t\tvar ergebnis = def.toString().match(/\\$\\{/g);\r\n\t\tif (ergebnis !== null) {\r\n\t\t\tdef = def.replaceTemplate(data);\r\n\t\t\t//\tfor (var e = 0; e < ergebnis.length; e++) {\r\n\t\t\t//\t\tdef = replace(def, data, ergebnis[e].substring(2, ergebnis[e].length - 2));\r\n\t\t\t//\t}\r\n\t\t}\r\n\t\treturn def;\r\n\t} else {//object\t\r\n\t\tfor (var key in def) {\r\n\t\t\tdef[key] = replaceTemplates(def[key], data);\r\n\r\n\t\t}\r\n\t\tdelete def.editTogether;//RText is only used for editing report\r\n\t}\r\n\treturn def;\r\n}\r\n\r\n/**\r\n * create an pdfmake-definition from an jassijs-report-definition, fills data and parameter in the report\r\n * @param {string} definition - the jassijs-report definition\r\n * @param {any} [data] - the data which are filled in the report (optional)\r\n * @param {any} [parameter] - the parameter which are filled in the report (otional)\r\n */\r\nexport function createReportDefinition(definition, data, parameter) {\r\n\tdefinition = clone(definition);//this would be modified\r\n\tif (data !== undefined)\r\n\t\tdata = clone(data);//this would be modified\r\n\r\n\tif (data === undefined && definition.data !== undefined) {\r\n\t\tdata = definition.data;\r\n\t}\r\n\t//parameter could be in data\r\n\tif (data !== undefined && data.parameter !== undefined && parameter !== undefined) {\r\n\t\tthrow new Error(\"parameter would override data.parameter\");\r\n\t}\r\n\tif (Array.isArray(data)) {\r\n\t\tdata = { items: data };//so we can do data.parameter\r\n\t}\r\n\tif (parameter !== undefined) {\r\n\r\n\t\tdata.parameter = parameter;\r\n\t}\r\n\t//parameter could be in definition\r\n\tif (data !== undefined && data.parameter !== undefined && definition.parameter !== undefined) {\r\n\t\tthrow new Error(\"definition.parameter would override data.parameter\");\r\n\t}\r\n\tif (definition.parameter !== undefined) {\r\n\t\tdata.parameter = definition.parameter;\r\n\t}\r\n\tdefinition.content = replaceTemplates(definition.content, data);\r\n\tif (definition.background)\r\n\t\tdefinition.background = replaceTemplates(definition.background, data);\r\n\tif (definition.header)\r\n\t\tdefinition.header = replaceTemplates(definition.header, data);\r\n\tif (definition.footer)\r\n\t\tdefinition.footer = replaceTemplates(definition.footer, data);\r\n\r\n\treplacePageInformation(definition);\r\n\tdelete definition.data;\r\n\treturn definition;\r\n\t// delete definition.parameter;\r\n}\r\n\r\n//add aggregate functions for grouping\r\nfunction addGroupFuncions(names, values) {\r\n\tnames.push(\"sum\");\r\n\tvalues.push(sum);\r\n\tnames.push(\"count\");\r\n\tvalues.push(count);\r\n\tnames.push(\"max\");\r\n\tvalues.push(max);\r\n\tnames.push(\"min\");\r\n\tvalues.push(min);\r\n\tnames.push(\"avg\");\r\n\tvalues.push(avg);\r\n}\r\nfunction aggr(group, field,data) {\r\n\tvar ret = 0;\r\n\tif (!Array.isArray(group) && group.entries === undefined)\r\n\t\tthrow new Error(\"sum is valid only in arrays and groups\");\r\n\tvar sfield: string = field;\r\n\tif (field.indexOf(\"${\") === -1) {\r\n\t\tsfield = \"${\" + sfield + \"}\";\r\n\t}\r\n\tif(Array.isArray(group)){\r\n\t\tfor (var x = 0; x < group.length; x++) {\r\n\t\t\tvar ob = group[x];\r\n\t\t\tif(ob.entries!==undefined)\r\n\t\t\t\taggr(ob.entries,field,data);\r\n\t\t\telse{\r\n\t\t\t\tvar val = sfield.replaceTemplate(ob, true);\r\n\t\t\t\tdata.func(data,val===undefined?0: Number.parseFloat(val));\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\taggr(group.entries,field,data);//group\r\n\t} \r\n\treturn data;\r\n}\r\n\r\n//sum the field in the group\r\nfunction sum(group, field) {\r\n\treturn aggr(group,field,{\r\n\t\tret:0,\r\n\t\tfunc:(data,num)=>{\r\n\t\t\tdata.ret=data.ret+num;\r\n\t\t}\r\n\t}).ret;\r\n}\r\n//count the field in the group\r\nfunction count(group, field) {\r\n\treturn aggr(group,field,{\r\n\t\tret:0,\r\n\t\tfunc:(data,num)=>{\r\n\t\t\tdata.ret=data.ret+1;\r\n\t\t}\r\n\t}).ret;\r\n}\r\n//get the maximum of the field in the group\r\nfunction max(group, field) {\r\n\treturn aggr(group,field,{\r\n\t\tret:Number.MIN_VALUE,\r\n\t\tfunc:(data,num)=>{\r\n\t\t\tif(num>data.ret)\r\n\t\t\t\tdata.ret=num;\r\n\t\t}\r\n\t}).ret;\r\n}\r\n//get the minimum of the field in the group\r\nfunction min(group, field) {\r\n\treturn aggr(group,field,{\r\n\t\tret:Number.MAX_VALUE,\r\n\t\tfunc:(data,num)=>{\r\n\t\t\tif(num<data.ret)\r\n\t\t\t\tdata.ret=num;\r\n\t\t}\r\n\t}).ret;\r\n}\r\n//get the minimum of the field in the group\r\nfunction avg(group, field) {\r\n\tvar ret= aggr(group,field,{\r\n\t\tret:0,\r\n\t\tcount:0,\r\n\t\tfunc:(data,num)=>{\r\n\t\t\tdata.ret=data.ret+num;\r\n\t\t\tdata.count++;\r\n\r\n\t\t}\r\n\t});\r\n\treturn ret.ret/ret.count;\r\n}\r\n\r\nexport function test() {\r\n\tvar ff= _format(\"####,##\", 50.22, {});\r\n\tvar hh=formatDate(\"DD.MM.YYYY hh:mm:ss\",new Date());\r\n\tvar hh=formatDate(\"YY-MM-DD h:mm:ss A\",new Date());\r\n\tvar sampleData = [\r\n\t\t{ id: 1, customer: \"Fred\", city: \"Frankfurt\", age: 51 },\r\n\t\t{ id: 8, customer: \"Alma\", city: \"Dresden\", age: 70 },\r\n\t\t{ id: 3, customer: \"Heinz\", city: \"Frankfurt\", age: 33 },\r\n\t\t{ id: 2, customer: \"Fred\", city: \"Frankfurt\", age: 88 },\r\n\t\t{ id: 6, customer: \"Max\", city: \"Dresden\", age: 3 },\r\n\t\t{ id: 4, customer: \"Heinz\", city: \"Frankfurt\", age: 64 },\r\n\t\t{ id: 5, customer: \"Max\", city: \"Dresden\", age: 54 },\r\n\t\t{ id: 7, customer: \"Alma\", city: \"Dresden\", age: 33 },\r\n\t\t{ id: 9, customer: \"Otto\", city: \"Berlin\", age: 21 }\r\n\t];\r\n\r\n\tvar h = {\r\n\t\tall: doGroup(sampleData, [\"city\",\"customer\"]),\r\n\t\tk: 5,\r\n\t\tho() {\r\n\t\t\treturn this.k + 1;\r\n\t\t}\r\n\t}\r\n\t//@ts-ignore\r\n\tvar s = \"${Math.round(avg(all,'age'),2)}\".replaceTemplate(h, true);\r\n\ts = \"${k}\".replaceTemplate(h, true);\r\n\ts = \"${ho()}\".replaceTemplate(h, true);\r\n\r\n\t\r\n}\r\n","\r\n\r\nvar reportdesign = {\r\n\tcontent: [\r\n\t\t{\r\n\t\t\tdatatable: {\r\n\t\t\t\twidths: [\"auto\",\"auto\",140],\r\n\t\t\t\theader: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbold: true,\r\n\t\t\t\t\t\titalics: true,\r\n\t\t\t\t\t\tfont: \"Asap\",\r\n\t\t\t\t\t\ttext: \"name2233\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"lastname\",\r\n\t\t\t\t\t\"\"\r\n\t\t\t\t],\r\n\t\t\t\tfooter: [\"\",\"\",\"\\n\"],\r\n\t\t\t\tdataforeach: \"person\",\r\n\t\t\t\tbody: [\r\n\t\t\t\t\t\"${person.name}\",\r\n\t\t\t\t\t\"${person.lastname}\",\r\n\t\t\t\t\t\"${person.fullname()}\"\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n};\r\n \r\nexport async function fill(parameter) {\r\n    var data = [\r\n        { name: \"Aoron\", lastname: \"Müllera\" ,fullname(){ return this.name+\", \"+this.lastname}},\r\n        { name: \"Heino\", lastname: \"Brechtp\",fullname(){ return this.name+\", \"+this.lastname}}\r\n    ]\r\n    if (parameter?.sort === \"name\")\r\n        data = data.sort((a, b) => { return a.name.localeCompare(b.name) });\r\n    if (parameter?.sort === \"lastname\")\r\n        data = data.sort((a, b) => { return a.lastname.localeCompare(b.lastname) });\r\n    return {\r\n        reportdesign,\r\n        data\r\n    }\r\n}\r\n\r\nexport async function test(){ \r\n    return await fill(undefined); \r\n}\r\n//ok","import fs = require('fs');\r\nvar https = require('https');\r\nimport { Server } from \"jassijs/remote/Server\";\r\nimport { createReportDefinition } from \"./remote/pdfmakejassi\";\r\nimport { fill } from \"./TestServerreport\";\r\nvar path = require('path');\r\nvar pdfMakePrinter = require('pdfmake/src/printer');\r\nexport class DoServerreport {\r\n    fontDescriptors;\r\n    createPdfBinary(pdfDoc, callback) {\r\n\r\n\r\n        var printer = new pdfMakePrinter(this.fontDescriptors);\r\n\r\n        var doc = printer.createPdfKitDocument(pdfDoc);\r\n\r\n        var chunks = [];\r\n        var result;\r\n\r\n        doc.on('data', function (chunk) {\r\n            chunks.push(chunk);\r\n        });\r\n        doc.on('end', function () {\r\n            result = Buffer.concat(chunks);\r\n            callback(result.toString('base64'));\r\n        });\r\n        doc.end();\r\n\r\n    }\r\n    async getDesign(path: string, parameter) {\r\n        var fill = (await import(path)).fill;\r\n        var content = await fill(parameter);\r\n        return content;\r\n    }\r\n    async download(url, dest) {\r\n        return await new Promise((resolve, reject) => {\r\n            const file = fs.createWriteStream(dest, { flags: \"wx\" });\r\n\r\n            const request = https.get(url, response => {\r\n                if (response.statusCode === 200) {\r\n                    response.pipe(file);\r\n                } else {\r\n                    file.close();\r\n                    fs.unlink(dest, () => { }); // Delete temp file\r\n                    reject(`Server responded with ${response.statusCode}: ${response.statusMessage}`);\r\n                }\r\n            });\r\n\r\n            request.on(\"error\", err => {\r\n                file.close();\r\n                fs.unlink(dest, () => { }); // Delete temp file\r\n                reject(err.message);\r\n            });\r\n\r\n            file.on(\"finish\", () => {\r\n                resolve(undefined);\r\n            });\r\n\r\n            file.on(\"error\", err => {\r\n                file.close();\r\n\r\n                if (err.code === \"EEXIST\") {\r\n                    reject(\"File already exists\");\r\n                } else {\r\n                    fs.unlink(dest, () => { }); // Delete temp file\r\n                    reject(err.message);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    async registerFonts(data) {\r\n        this.fontDescriptors = {/*\r\n            Roboto: {\r\n                normal: path.join(__dirname, '..', '..', '/jassijs_report/fonts/Roboto-Regular.ttf'),\r\n                bold: path.join(__dirname, '..', '..', '/jassijs_report/fonts/Roboto-Medium.ttf'),\r\n                italics: path.join(__dirname, '..', '..', '/jassijs_report/fonts/Roboto-Italic.ttf'),\r\n                bolditalics: path.join(__dirname, '..', '..', '/jassijs_report/fonts/Roboto-MediumItalic.ttf')\r\n                \r\n            }*/\r\n        };\r\n\r\n        //        this.download('http://i3.ytimg.com/vi/J---aiyznGQ/mqdefault.jpg',\r\n        //              path.join(__dirname, '..', '..', '/client/cat.jpg'));\r\n        var fonts = [\"Roboto\"];\r\n\r\n        JSON.stringify(data, (key, value) => {\r\n            if (key === \"font\" && value !== \"\") {\r\n                fonts.push(value);\r\n            }\r\n            return value;\r\n        });\r\n\r\n        /*  if (!fontDescriptors) {\r\n              fontDescriptors = {\r\n                  Roboto: {\r\n                      normal: 'Roboto-Regular.ttf',\r\n                      bold: 'Roboto-Medium.ttf',\r\n                      italics: 'Roboto-Italic.ttf',\r\n                      bolditalics: 'Roboto-MediumItalic.ttf'\r\n                  }\r\n              };\r\n          }*/\r\n        if (!fs.existsSync(path.join(__dirname, '..', '..', '/jassijs_report/fonts'))) {\r\n            fs.mkdirSync(path.join(__dirname, '..', '..', '/jassijs_report/fonts'));\r\n        }\r\n        for (var x = 0; x < fonts.length; x++) {\r\n            var font: string = fonts[x];\r\n            var base = \"https://cdn.jsdelivr.net/gh/xErik/pdfmake-fonts-google@master/lib/ofl\" + \"/\" + font.toLowerCase();//abeezee/ABeeZee-Italic.ttf\r\n            if (font == \"Roboto\")\r\n                base = \"https://raw.githubusercontent.com/bpampuch/pdfmake/master/examples/fonts\";\r\n            this.fontDescriptors[font] = {};\r\n            var fname = path.join(__dirname, '..', '..', '/jassijs_report/fonts/' + font + '-Regular.ttf')\r\n            this.fontDescriptors[font].normal = fname;\r\n            if (!fs.existsSync(fname)) {\r\n                await this.download(base + \"/\" + font + \"-Regular.ttf\", fname);\r\n            }\r\n\r\n            var fname = path.join(__dirname, '..', '..', '/jassijs_report/fonts/' + font + '-Bold.ttf')\r\n            this.fontDescriptors[font].bold = fname;\r\n            if (!fs.existsSync(fname)) {\r\n                await this.download(base + \"/\" + font + (font === \"Roboto\" ? \"-Medium.ttf\" : \"-Bold.ttf\"), fname);\r\n            }\r\n\r\n            var fname = path.join(__dirname, '..', '..', '/jassijs_report/fonts/' + font + '-Italic.ttf')\r\n            this.fontDescriptors[font].italics = fname;\r\n            if (!fs.existsSync(fname)) {\r\n                await this.download(base + \"/\" + font + \"-Italic.ttf\", fname);\r\n            }\r\n\r\n            var fname = path.join(__dirname, '..', '..', '/jassijs_report/fonts/' + font + '-BoldItalic.ttf')\r\n            this.fontDescriptors[font].bolditalics = fname;\r\n            if (!fs.existsSync(fname)) {\r\n                await this.download(base + \"/\" + font + (font === \"Roboto\" ? \"-MediumItalic.ttf\" : \"-BoldItalic.ttf\"), fname);\r\n            }\r\n        }\r\n    }\r\n\r\n    async getBase64LastTestResult() {\r\n        var data = Server.lastTestServersideFileResult;\r\n        await this.registerFonts(data.reportdesign);\r\n        data = createReportDefinition(data.reportdesign, data.data, data.parameter);\r\n\r\n        var ret = await new Promise((resolve) => {\r\n            this.createPdfBinary(data, resolve);\r\n        });\r\n        return ret;\r\n    }\r\n    async getBase64(file: string, parameter) {\r\n        var data = await this.getDesign(file, parameter);\r\n        await this.registerFonts(data.reportdesign);\r\n        data = createReportDefinition(data.reportdesign, data.data, data.parameter);\r\n        var ret = await new Promise((resolve) => {\r\n            this.createPdfBinary(data, resolve);\r\n        });\r\n        return ret;\r\n    }\r\n}\r\n\r\n","import fs = require('fs');\r\n\r\nvar fpath = require('path');\r\n/**\r\n * updates serviceworker and create files in root package\r\n */\r\nexport function updatePackage(){\r\n    var client_path=\"./client\";\r\n    var module_path=\"./node_modules/jassijs/client\";\r\n    if(!fs.existsSync(client_path)){\r\n        fs.mkdirSync(client_path);\r\n    }\r\n    if(!fs.existsSync(client_path+\"/js\")){\r\n        fs.mkdirSync(client_path+\"/js\");\r\n    }\r\n   // if(!fs.existsSync(\"./jassijs.json\")){\r\n   //     fs.copyFileSync(module_path.replace(\"/client\",\"\")+\"/jassijs.json\", \"./jassijs.json\");\r\n  //  }\r\n    if(!fs.existsSync(\"./tsconfig.json\")){\r\n        fs.copyFileSync(module_path.replace(\"/client\",\"\")+\"/tsconfig.json\", \"./tsconfig.json\");\r\n    } \r\n    if(fs.existsSync(module_path)){\r\n        var list: string[] = fs.readdirSync(module_path);\r\n\r\n        list.forEach(function (filename) { \r\n            if (!fs.lstatSync(module_path + \"/\" + filename).isDirectory()) {\r\n\r\n                if(!fs.existsSync(client_path+\"/\"+filename)){\r\n                    fs.copyFileSync(module_path+\"/\"+filename, client_path+\"/\"+filename)\r\n                }\r\n                if (filename === \"jassistart.js\" || filename === \"service-worker.js\") {\r\n                    if (fs.statSync(module_path + \"/\" + filename).mtime.getTime() > fs.statSync(client_path + \"/\" + filename).mtime.getTime()) {\r\n                        //update serviceworker if newer\r\n                        console.log(\"update \" + filename);\r\n                        fs.copyFileSync(module_path + \"/\" + filename, client_path + \"/\" + filename);\r\n                    }\r\n                }\r\n               \r\n            }\r\n        });\r\n    }\r\n    if(!fs.existsSync(client_path+\"/js/app.js\")){\r\n        fs.copyFileSync(module_path+\"/\"+\"/js/app.js\", client_path+\"/\"+\"/js/app.js\")\r\n    }\r\n\r\n}","import fs = require('fs');\r\nimport Filesystem from './Filesystem';\r\nimport { config } from 'jassijs/remote/Config';\r\nlet resolve = require('path').resolve;\r\n\r\n\r\nfunction copyFile(f1: string, f2: string) {\r\n    try {\r\n        if (fs.existsSync(f1) && f1.endsWith(\".ts\") && !fs.statSync(f1).isDirectory()) {\r\n            if (!fs.existsSync(f2) || (fs.statSync(f1).mtimeMs > fs.statSync(f2).mtimeMs)) {\r\n                console.log(\"sync \" + f1 + \"->\" + f2);\r\n                var dirname = require('path').dirname(f2);\r\n                if (!fs.existsSync(dirname)) {\r\n                    fs.mkdirSync(dirname, { recursive: true });\r\n                }\r\n                fs.copyFileSync(f1, f2);\r\n            }\r\n        }\r\n\r\n    } catch (ex) {\r\n        console.error(ex);\r\n        debugger;\r\n    }\r\n}\r\n/**\r\n*  each remote file on server and client should be the same\r\n*/\r\nasync function checkRemoteFiles() {\r\n\r\n    var path = new Filesystem().path;\r\n    var modules = config.server.modules;\r\n    for (var m in modules) {\r\n        var files = await new Filesystem().dirFiles(\"./\" + m + \"/remote\", [\".ts\"]);\r\n        var filess = await new Filesystem().dirFiles(\"./\" + m + \"/server\", [\".ts\"]);\r\n        for (let x = 0; x < filess.length; x++) {\r\n            var file = filess[x];\r\n            var code = fs.readFileSync(file, 'utf-8');\r\n            if (code.indexOf(\"//synchronize-server-client\") === 0)\r\n                files.push(file);\r\n        }\r\n        for (let x = 0; x < files.length; x++) {\r\n            var file = files[x];\r\n            var clientfile = file.replace(\"./\", path + \"/\");\r\n            if (!fs.existsSync(clientfile)) {\r\n                console.error(clientfile + \" not exists\");\r\n            } else {\r\n                if (fs.statSync(file).mtimeMs !== fs.statSync(clientfile).mtimeMs) {\r\n                    if (fs.statSync(file).mtimeMs > fs.statSync(clientfile).mtimeMs) {\r\n                        console.error(clientfile + \" is not up to date \" + file + \" is newer\");\r\n                    } else {\r\n                        console.error(file + \" is not up to date \" + clientfile + \" is newer\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function syncRemoteFiles() {\r\n/*await*/checkRemoteFiles();\r\n    //server remote\r\n    var path = new Filesystem().path;\r\n    fs.watch(path, { recursive: true }, (eventType, filename) => {\r\n        if (!filename)\r\n            return;\r\n        var file = filename.replaceAll(\"\\\\\", \"/\");\r\n        var paths = file.split(\"/\");\r\n        if (eventType === \"change\" && paths.length > 1 && (paths[1] === \"remote\" || paths[1] === \"server\")) {\r\n            setTimeout(() => {\r\n                if (paths[1] === \"server\") {\r\n                    if (fs.existsSync(file) && !fs.statSync(file).isDirectory()) {\r\n                        var code = fs.readFileSync(file, 'utf-8');\r\n                        if (code.indexOf(\"//synchronize-server-client\") !== 0)\r\n                            return;\r\n                    }\r\n                }\r\n                var f2 = \"./\" + file;\r\n                var f1 = path + \"/\" + file;\r\n                copyFile(f1, f2);\r\n            }, 200);\r\n        }\r\n    })\r\n    //client remote\r\n    fs.watch(\"./\", { recursive: true }, (eventType, filename) => {\r\n        if (!filename)\r\n            return;\r\n        var file = filename.replaceAll(\"\\\\\", \"/\");\r\n        var paths = file.split(\"/\");\r\n        if (eventType === \"change\" && paths.length > 1 && paths[1] === \"remote\" || paths[1] === \"server\") {\r\n            setTimeout(() => {\r\n                if (paths[1] === \"server\") {\r\n                    if (fs.existsSync(file) && !fs.statSync(file).isDirectory()) {\r\n                        var code = fs.readFileSync(file, 'utf-8');\r\n                        if (code.indexOf(\"//synchronize-server-client\") !== 0)\r\n                            return;\r\n                    }\r\n                }\r\n                var f1 = \"./\" + file;\r\n                var f2 = path + \"/\" + file;\r\n                copyFile(f1, f2);\r\n            }, 200);\r\n        }\r\n    })\r\n}\r\nvar modules = undefined;\r\nexport function staticfiles(req, res, next) {\r\n    var path = new Filesystem().path;\r\n    var modules = config.server.modules;\r\n    // console.log(req.path);\r\n    let sfile = path + req.path;\r\n    if (sfile.indexOf(\"Settings.ts\") > -1) {//&&!passport.authenticate(\"jwt\", { session: false })){\r\n        next();\r\n        return;\r\n    }\r\n    if (!fs.existsSync(sfile) && sfile.startsWith(\"./client\")) {\r\n        for (var key in modules) {\r\n            if ((sfile.startsWith(\"./client/\" + key) || sfile.startsWith(\"./client/js/\" + key)) && fs.existsSync(\"./node_modules/\" + key + \"/client\" + req.path)) {\r\n                sfile = \"./node_modules/\" + key + \"/client\" + req.path;\r\n                break;\r\n            }\r\n        }\r\n        //sfile=\"./node_modules/_uw/\"+req.path;\r\n    }\r\n    if (fs.existsSync(sfile)) {\r\n        // let code=fs.readFileSync(this.path+\"/\"+req.path);\r\n        let dat = fs.statSync(sfile).mtime.getTime();\r\n        if (req.query.lastcachedate === dat.toString()) {\r\n            res.set('X-Custom-UpToDate', 'true');\r\n            res.send(\"\");\r\n        } else {\r\n            res.sendFile(resolve(sfile), {\r\n\r\n                headers: {\r\n                    'X-Custom-Date': dat.toString(),\r\n                    'Cache-Control': 'max-age=1',\r\n                    'Last-Modified': fs.statSync(sfile).mtime.toUTCString()\r\n                }\r\n            });\r\n        }\r\n    } else {\r\n\r\n        next();\r\n    }\r\n    var s = 1;\r\n}\r\nexport function staticsecurefiles(req, res, next) {\r\n    var path = new Filesystem().path;\r\n     modules = config.server.modules;\r\n    // console.log(req.path);\r\n    let sfile = new Filesystem().path + req.path;\r\n    if (sfile.indexOf(\"Settings.ts\") > -1) {//&&!passport.authenticate(\"jwt\", { session: false })){\r\n        if (!req.isAuthenticated()) {\r\n            res.send(401, 'not logged in');\r\n            return;\r\n        }\r\n    }\r\n    if (!fs.existsSync(sfile) && sfile.startsWith(\"./client\")) {\r\n        for (var key in modules) {\r\n            if ((sfile.startsWith(\"./client/\" + key) || sfile.startsWith(\"./client/js/\" + key)) && fs.existsSync(\"./node_modules/\" + key + \"/client\" + req.path)) {\r\n                sfile = \"./node_modules/\" + key + \"/client\" + req.path;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (fs.existsSync(sfile)) {\r\n        // let code=fs.readFileSync(this.path+\"/\"+req.path);\r\n        let dat = fs.statSync(sfile).mtime.getTime();\r\n        if (req.query.lastcachedate === dat.toString()) {\r\n            res.set('X-Custom-UpToDate', 'true');\r\n            res.send(\"\");\r\n        } else {\r\n            res.sendFile(resolve(sfile), {\r\n                headers: { 'X-Custom-Date': dat.toString() }\r\n            });\r\n        }\r\n    } else {\r\n        next();\r\n    }\r\n    var s = 1;\r\n}\r\n\r\n","//map remotepath\r\ndeclare global {\r\n  var window;\r\n  var isServer;\r\n  var $;\r\n}\r\n(global as any).window = {};\r\n(global as any).$ = {};\r\nrequire(\"app-module-path\").addPath(\"./js\");\r\nimport \"jassijs/remote/Jassi\";\r\nimport \"jassijs/remote/Registry\";\r\n//import \"reflect-metadata\";\r\n//important: registry must be loaded after \"reflect-metadata\" and before the typeorm (because delegation of Reflect.metadata)\r\nimport express = require('express');\r\n\r\n\r\nimport { loginRegister, manageToken } from \"jassijs/server/PassportLoginRegister\";\r\nconst passport = require(\"passport\");\r\nconst cookieParser = require(\"cookie-parser\");\r\nconst https = require(\"https\");\r\nimport \"jassijs/server/PassportSetup\";\r\nimport { remoteProtocol } from \"jassijs/server/DoRemoteProtocol\";\r\nimport { zip } from \"jassijs/server/Zip\";\r\nimport { rawbody } from \"jassijs/server/RawBody\";\r\nimport { ServerIndexer } from \"./RegistryIndexer\";\r\nimport { DoServerreport } from \"jassijs_report/DoServerreport\";\r\nimport { serverservices } from \"../remote/Serverservice\";\r\nimport { updatePackage } from \"./UpdatePackage\";\r\nimport { staticfiles, staticsecurefiles, syncRemoteFiles } from \"./FileTools\";\r\n\r\n\r\n\r\n\r\nclass JassiConnectionProperties {\r\n  //the port on which the http server is running by default 5000 or process.env.PORT if defined \r\n  port?: number;\r\n  //updates registry.js in each module\r\n  updeateRegistryOnStart?;\r\n  //sync files in remote-Directory in beetween client and server\r\n  syncRemoteFiles?: boolean;\r\n  //allow Zip-Download of sources\r\n  //allowDownloadAsZip?: boolean;\r\n  //express.listen is called \r\n  listenToPort?: boolean;\r\n}\r\n/**\r\n * starts jassi server\r\n * @param properties  \r\n * @param expressApp \r\n * @returns expressApp\r\n */\r\nexport default function JassiServer(properties: JassiConnectionProperties = {}, expressApp = undefined) {\r\n  let app = expressApp;\r\n  updatePackage(); \r\n  if (app === undefined)\r\n    app = express();\r\n  if (properties.updeateRegistryOnStart !== false)\r\n    new ServerIndexer().updateRegistry();\r\n  if (properties.syncRemoteFiles !== false) {\r\n    try {\r\n      syncRemoteFiles();\r\n    } catch {\r\n      console.log(\"could not sync remotefiles\");\r\n    }\r\n  }\r\n  app.use(staticfiles);\r\n  app.use(rawbody);\r\n  app.set('etag', 'strong');\r\n  // app.use(installGetRequest);\r\n  app.use(passport.initialize());\r\n\r\n  app.use(cookieParser());\r\n  app.use(\"/user\", loginRegister);\r\n  app.use(manageToken);\r\n  app.use(staticsecurefiles, passport.authenticate(\"jwt\", { session: false }));\r\n\r\n  app.post('/remoteprotocol', passport.authenticate(\"jwt\", { session: false }), remoteProtocol);\r\n\r\n\r\n\r\n  /* if (properties.allowDownloadAsZip!==false)\r\n       app.get('/zip', passport.authenticate(\"jwt\", { session: false }), zip);*/\r\n  const PORT = (process.env.PORT || 5000)\r\n  app.listen(PORT, () => console.log(`Listening on ${PORT} ->browse http://localhost:${PORT}/index.html`));\r\n  return app;\r\n}\r\n\r\n/*\r\nif(process.env.PORT){\r\n  app.listen(PORT, () => console.log(`Listening on ${PORT}`));\r\n}else{\r\n  var server=https.createServer({\r\n    key:fs.readFileSync(\"mycert/uwei.selfhost.key\"),\r\n    cert:fs.readFileSync(\"mycert/uwei.selfhost.crt\")\r\n    //pfx:fs.readFileSync(\"mycert/mycert.pfx\"),\r\n    //passphrase:\"j@ssi\"\r\n  },app);\r\n  server.listen(PORT,()=>{\r\n    console.log(`Listening on ${PORT}`)\r\n  })\r\n}*/\r\n\r\n  //process.env.PORT\r\n\r\n","import { $Class } from \"jassijs/remote/Registry\";\r\nimport  {classes, JassiError} from \"jassijs/remote/Classes\";\r\nlet cl=classes;//force Classes.\r\n\r\n@$Class(\"jassijs.remote.DBArray\")\r\nexport  class DBArray\r\n\r\n/**\r\n* Array for jassijs.base.DBObject's\r\n* can be saved to db\r\n* @class jassijs.base.DBArray\r\n*/ \r\nextends Array{\r\n   constructor(...args){\r\n       super(...args);\r\n   }\r\n   private _parentObject;\r\n   private _parentObjectMember;\r\n   /**\r\n    * adds an object \r\n    * if the object is linked to an other object then update this\r\n    * @param {object} ob - the object to add\r\n    */\r\n   add(ob){\r\n       if(ob===undefined||ob===null)\r\n           throw new JassiError(\"Error cannot add object null\");\r\n       this.push(ob);\r\n       if(this._parentObject!==undefined){ \r\n           //set linked object\r\n           var link=jassijs.db.typeDef.linkForField(this._parentObject.__proto__._dbtype,this._parentObjectMember);\r\n           if(link!==undefined&&link.type===\"array\"){//array can not connected){\r\n               var test=ob._objectProperties[link.name];//do not resolve!\r\n               if(test!==undefined&&test.unresolvedclassname===undefined){\r\n                   if(test.indexOf(this._parentObject)<0)\r\n                       test.add(this._parentObject);\r\n               }\r\n           }\r\n           if(link!==undefined&&link.type===\"object\"){\r\n               var test=ob.__objectProperties[link.name];//do not resolve!\r\n               if(test!==undefined&&test.unresolvedclassname!==undefined&&test!==this){\r\n                   ob._setObjectProperty(link.name,this._parentObject);\r\n               }\r\n           }\r\n       }\r\n   }\r\n   /**\r\n    * for compatibility\r\n    */\r\n   async resolve(){\r\n       //Object was already resolved   \r\n       return this;\r\n   }\r\n\r\n   /**\r\n    * remove an object \r\n    * if the object is linked to an other object then update this\r\n    * @param {object} ob - the object to remove\r\n    */\r\n   remove(ob){ \r\n       var pos=this.indexOf(ob); \r\n       if(pos>=0)\r\n           this.splice(pos, 1);\r\n        if(this._parentObject!==undefined){\r\n           //set linked object\r\n           var link=jassijs.db.typeDef.linkForField(this._parentObject.__proto__._dbtype,this._parentObjectMember);\r\n          \r\n           if(link!==undefined&&link.type===\"array\"){//array can not connected){\r\n               var test=ob._objectProperties[link.name];//do not resolve!\r\n               if(test!==undefined&&test.unresolvedclassname===undefined){\r\n                   if(test.indexOf(this._parentObject)>=0)\r\n                       test.remove(this._parentObject);\r\n               }\r\n           }\r\n           if(link!==undefined&&link.type===\"object\"){\r\n               var test=ob._getObjectProperty(link.name);\r\n               if(test!==undefined&&test.unresolvedclassname!==undefined&&test!==this){\r\n                   ob._setObjectProperty(link.name,null);\r\n               }\r\n           }\r\n       }\r\n       \r\n   }\r\n}\r\n","declare var jassijs:JassiStatic;  ","\r\n\r\nclass Modules{\r\n    modules:{[modul:string]:string};\r\n    server:Modules;\r\n    constructor(){\r\n        if(!window.document){\r\n            var fs=require(\"fs\");\r\n            var all= JSON.parse(fs.readFileSync('./client/jassijs.json', 'utf-8'));\r\n            Object.assign(this,all);\r\n        }\r\n    }\r\n}\r\n\r\nvar modules=new Modules();\r\nexport {modules}","\r\nclass KK{\r\n    comment?:string;\r\n    length?:Number;\r\n    type?:string;\r\n}\r\n\r\nexport class OO{\r\n   \r\n    hallo:string=\"\";\r\n    static test(){\r\n    \r\n      //  var result = Reflect.getOwnMetadata(\"design:type\", OO,\"hallo\");\r\n      //  var result = Reflect.getMetadata(\"design:type\", OO,\"hallo\");\r\n      //  var jj=Reflect.getMetadataKeys(OO);\r\n      //  var jj2=Reflect.getOwnMetadataKeys(OO);\r\n \r\n    }\r\n}\r\n","//synchronize-server-client\r\n//@ts-ignore  \r\nimport { ConnectionOptions, createConnection, getConnection, SaveOptions, FindConditions, FindOneOptions, ObjectType, ObjectID, FindManyOptions, Connection, SelectQueryBuilder, Brackets, EntitySchema, getMetadataArgsStorage, Entity } from \"typeorm\";\r\nimport { classes, JassiError } from \"jassijs/remote/Classes\";\r\n \r\nimport registry from \"jassijs/remote/Registry\";       \r\nimport { DBObject } from \"jassijs/remote/DBObject\";\r\nimport { ParentRightProperties } from \"jassijs/remote/security/Rights\";\r\nimport { User } from \"jassijs/remote/security/User\";\r\nimport { Context } from \"jassijs/remote/RemoteObject\";\r\nimport { $Class } from \"jassijs/remote/Registry\";\r\nimport { $Serverservice } from \"jassijs/remote/Serverservice\";\r\n\r\nconst parser = require('js-sql-parser');\r\nconst passwordIteration = 10000;\r\n\r\nexport interface MyFindManyOptions<Entity = any> extends FindManyOptions {\r\n  whereParams?: any,\r\n  onlyColumns?: string[];\r\n  order: { [field: string]: \"ASC\" | \"DESC\" };\r\n}\r\n\r\n\r\n\r\nvar _instance: DBManager = undefined;\r\n\r\ndeclare global{\r\n  export interface Serverservice{\r\n      db:Promise<DBManager>;\r\n  }\r\n}\r\n\r\n@$Serverservice({ name: \"db\", getInstance: async () => { return DBManager._get() } })\r\n@$Class(\"jassijs/server/DBManager\")\r\nexport class DBManager {\r\n  waitForConnection: Promise<DBManager> = undefined;\r\n  static async getConOpts(): Promise<ConnectionOptions> {\r\n    var stype: string = \"postgres\";\r\n    var shost = \"localhost\";\r\n    var suser = \"postgres\";\r\n    var spass = \"ja$$1\";\r\n    var iport = 5432;\r\n    var sdb = \"jassi\";\r\n    //the default is the sqlite3\r\n    //this is the default way: define an environment var DATABASSE_URL\r\n    //type://user:password@hostname:port/database\r\n    //eg: postgres://abcknhlveqwqow:polc78b98e8cd7168d35a66e392d2de6a8d5710e854c084ff47f90643lce2876@ec2-174-102-251-1.compute-1.amazonaws.com:5432/dcpqmp4rcmu182\r\n    //@ts-ignore\r\n    var test = process.env.DATABASE_URL;\r\n    if (test !== undefined) {\r\n\r\n      var all = test.split(\":\");\r\n      stype = all[0];\r\n      if (stype === \"postgresql\")\r\n        stype = \"postgres\";\r\n      var h = all[2].split(\"@\");\r\n      shost = h[1];\r\n      iport = Number(all[3].split(\"/\")[0]);\r\n      suser = all[1].replace(\"//\", \"\");\r\n      spass = h[0];\r\n      sdb = all[3].split(\"/\")[1];\r\n    }\r\n\r\n    var dbclasses = [];\r\n\r\n    var dbobjects = await registry.getJSONData(\"$DBObject\");\r\n    for (var o = 0; o < dbobjects.length; o++) {\r\n      var clname = dbobjects[o].classname;\r\n      dbclasses.push(await classes.loadClass(clname));\r\n      //var fname = dbobjects[o].filename;\r\n      //dbfiles.push(\"js/\" + fname.replace(\".ts\", \".js\"));\r\n    }\r\n\r\n    var opt: ConnectionOptions = {\r\n\r\n      //@ts-ignore\r\n      \"type\": stype,\r\n      \"host\": shost,\r\n      \"port\": iport,\r\n      \"username\": suser,\r\n      \"password\": spass,\r\n      \"database\": sdb,\r\n      //\"synchronize\": true,\r\n      \"logging\": false,\r\n      \"entities\": dbclasses\r\n\r\n      //\"js/client/remote/de/**/*.js\"\r\n\r\n      // \"migrations\": [\r\n      //    \"src/migration/**/*.ts\"\r\n      // ],\r\n      // \"subscribers\": [\r\n      //    \"src/subscriber/**/*.ts\"\r\n      // ]\r\n    };\r\n\r\n\r\n    return opt;\r\n  }\r\n\r\n  private static async _get(): Promise<DBManager> {\r\n    if (_instance === undefined) {\r\n      _instance = new DBManager();\r\n    }\r\n    await _instance.waitForConnection;\r\n    return _instance;\r\n  }\r\n  private async open() {\r\n    var _initrunning: Promise<Connection> = undefined;\r\n    var test = getMetadataArgsStorage();\r\n    try {\r\n      var opts = await DBManager.getConOpts();\r\n      _initrunning = createConnection(opts);\r\n      await _initrunning;\r\n\r\n    } catch (err1) {\r\n      try {\r\n        _initrunning = undefined;\r\n        //@ts-ignore //heroku need this\r\n        opts.ssl = {\r\n          rejectUnauthorized: false\r\n        }\r\n        //          opts[\"ssl\"] = true; \r\n        _initrunning = createConnection(opts);\r\n        await _initrunning;\r\n\r\n      } catch (err) {\r\n        console.log(\"DB corrupt - revert the last change\");\r\n        console.error(err1); \r\n        console.error(err);\r\n        _instance = undefined;\r\n        _initrunning = undefined;\r\n        if (err.message === \"The server does not support SSL connections\") {\r\n          throw err1;\r\n          console.error(err1);\r\n        }\r\n        else {\r\n          throw err;\r\n          console.error(err);\r\n        }\r\n      }\r\n    }\r\n\r\n    try {\r\n      var con = getConnection();\r\n      for (var x = 0; x < 500; x++) {//sometimes on reconnect the connection is not ready\r\n        if (con.isConnected)\r\n          break;\r\n        else\r\n          await new Promise((resolve) => setTimeout(() => resolve(undefined), 10));\r\n      }\r\n      console.log(con.isConnected);\r\n      await this.mySync();\r\n    } catch (err) {\r\n      console.log(\"DB Schema could not be saved\");\r\n      throw err;\r\n    }\r\n    //wait for connection ready\r\n    await _initrunning;\r\n    //on server we convert decimal type to Number https://github.com/brianc/node-postgres/issues/811\r\n    //@ts-ignore\r\n    if (window?.document === undefined) {\r\n      try {\r\n        //@ts-ignore\r\n        var types = (await import('pg')).types;\r\n        types.setTypeParser(1700, function (val) {\r\n          return parseFloat(val);\r\n        });\r\n      } catch {\r\n\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n\r\n  private async mySync() {\r\n    var con = getConnection();\r\n    //@ts-ignore\r\n    var schem = await import(\"typeorm/schema-builder/RdbmsSchemaBuilder\");\r\n    var org = schem.RdbmsSchemaBuilder.prototype[\"executeSchemaSyncOperationsInProperOrder\"];\r\n    schem.RdbmsSchemaBuilder.prototype[\"executeSchemaSyncOperationsInProperOrder\"] = async function () {\r\n      //try{\r\n\r\n      await this.createNewTables();\r\n      await this.addNewColumns();\r\n      await this.updatePrimaryKeys();\r\n      await this.updateExistColumns();\r\n      await this.createNewIndices();\r\n      await this.createNewChecks();\r\n      await this.createNewExclusions();\r\n      await this.createCompositeUniqueConstraints();\r\n      await this.createForeignKeys();\r\n      await this.createViews();\r\n      /*}catch(err){\r\n        this.prototype._error_=err;\r\n        }*/\r\n    };\r\n    //  var h=Reflect.getMetadata(\"design:type\",AR.prototype,\"id\");\r\n\r\n    await con.synchronize();\r\n    //if(schem.RdbmsSchemaBuilder.prototype[\"_error_\"])\r\n    //throw schem.RdbmsSchemaBuilder.prototype[\"_error_\"]; \r\n\r\n    //con.driver.\r\n  }\r\n  private static async clearMetadata() {\r\n    DBManager.clearArray(getMetadataArgsStorage().checks);\r\n    DBManager.clearArray(getMetadataArgsStorage().columns);\r\n    DBManager.clearArray(getMetadataArgsStorage().discriminatorValues);\r\n    DBManager.clearArray(getMetadataArgsStorage().embeddeds);\r\n    DBManager.clearArray(getMetadataArgsStorage().entityListeners);\r\n    DBManager.clearArray(getMetadataArgsStorage().entityRepositories);\r\n    DBManager.clearArray(getMetadataArgsStorage().entitySubscribers);\r\n    DBManager.clearArray(getMetadataArgsStorage().exclusions);\r\n    DBManager.clearArray(getMetadataArgsStorage().tables);\r\n    DBManager.clearArray(getMetadataArgsStorage().generations);\r\n    DBManager.clearArray(getMetadataArgsStorage().indices);\r\n    DBManager.clearArray(getMetadataArgsStorage().inheritances);\r\n    DBManager.clearArray(getMetadataArgsStorage().joinColumns);\r\n    DBManager.clearArray(getMetadataArgsStorage().joinTables);\r\n    DBManager.clearArray(getMetadataArgsStorage().namingStrategies);\r\n    DBManager.clearArray(getMetadataArgsStorage().relationCounts);\r\n    DBManager.clearArray(getMetadataArgsStorage().relationIds);\r\n    DBManager.clearArray(getMetadataArgsStorage().relations);\r\n    DBManager.clearArray(getMetadataArgsStorage().tables);\r\n    DBManager.clearArray(getMetadataArgsStorage().transactionEntityManagers);\r\n    DBManager.clearArray(getMetadataArgsStorage().transactionRepositories);\r\n    DBManager.clearArray(getMetadataArgsStorage().trees);\r\n    DBManager.clearArray(getMetadataArgsStorage().uniques);\r\n  }\r\n  public async renewConnection() {\r\n    if(this.waitForConnection!==undefined)\r\n      await this.waitForConnection;\r\n    this.waitForConnection = new Promise((resolve) => { });//never resolve\r\n    await this.destroyConnection(false);\r\n    this.waitForConnection = this.open();\r\n  }\r\n  public async destroyConnection(waitForCompleteOpen = true) {\r\n    if (waitForCompleteOpen)\r\n      await this.waitForConnection;\r\n    try {\r\n      var con=await getConnection();\r\n      await con.close();\r\n     \r\n    } catch(err) {\r\n      debugger;\r\n    }\r\n    await DBManager.clearMetadata();\r\n  }\r\n  private static clearArray(arr: any[]) {\r\n    while (arr.length > 0) {\r\n      arr.pop();\r\n    }\r\n  }\r\n  private constructor() {\r\n    Object.freeze(_instance);\r\n    this.waitForConnection = this.open();\r\n  }\r\n  connection() {\r\n    return getConnection();\r\n  }\r\n  async runSQL(context: Context, sql: string, parameters: any[] = undefined) {\r\n\r\n    var ret = (await this.waitForConnection).connection().query(sql, parameters);\r\n    return ret;\r\n  }\r\n  async remove<Entity>(context: Context, entity: Entity) {\r\n    var test = await (await this.waitForConnection).checkParentRight(context, entity, [entity[\"id\"]]);\r\n    if (test === false)\r\n      throw new JassiError(\"you are not allowed to delete \" + classes.getClassName(entity) + \" with id \" + entity[\"id\"]);\r\n    await this.connection().manager.remove(entity);\r\n  }\r\n\r\n  private async addSaveTransaction(context: Context, entity) {\r\n    await this.waitForConnection;\r\n    if (context.objecttransaction) {\r\n      let ot = context.objecttransaction;\r\n      if (!ot.savelist) {\r\n        ot.savelist = [entity];\r\n        ot.saveresolve = [];\r\n        ot.addFunctionFinally(async () => {\r\n          ot.savereturn = await this.connection().manager.save(ot.savelist);\r\n          for (let x = 0; x < ot.savereturn.length; x++) {\r\n            delete ot.savereturn[x].password;\r\n            ot.saveresolve[x](ot.savereturn[x]);\r\n          }\r\n        })\r\n      } else\r\n        ot.savelist.push(entity);\r\n      return new Promise((resolve) => {\r\n        ot.saveresolve.push(resolve);\r\n        ot.transactionResolved(context);\r\n        ot.checkFinally();\r\n      });\r\n    }\r\n  }\r\n  /**\r\n * insert a new object\r\n * @param obj - the object to insert\r\n */\r\n  async insert(context: Context, obj: DBObject) {\r\n    (await this.waitForConnection);\r\n    await this._checkParentRightsForSave(context, obj);\r\n    if (context.objecttransaction) {\r\n      return this.addSaveTransaction(context, obj);\r\n    }\r\n    if (obj.id !== undefined) {\r\n      if ((await this.connection().manager.findOne(obj.constructor, obj.id)) !== undefined) {\r\n        throw new JassiError(\"object is already in DB: \" + obj.id);\r\n      }\r\n    }\r\n    //@ts-ignore\r\n    var ret = await this.connection().manager.insert(obj.constructor, obj);\r\n    //save also relations\r\n    let retob = await this.save(context, obj);\r\n    return retob;\r\n  }\r\n  /**\r\n  * Saves all given entities in the database.\r\n  * If entities do not exist in the database then inserts, otherwise updates.\r\n  */\r\n  async save<Entity>(context: Context, entities: Entity[], options?: SaveOptions): Promise<Entity[]>;\r\n  /**\r\n   * Saves all given entities in the database.\r\n   * If entities do not exist in the database then inserts, otherwise updates.\r\n   */\r\n  async save<Entity>(context: Context, entity: Entity, options?: SaveOptions): Promise<Entity>;\r\n  async save<Entity>(context: Context, entity, options) {\r\n    await this.waitForConnection;\r\n    await this._checkParentRightsForSave(context, entity);\r\n    if ((window?.document === undefined)) {//crypt password only in nodes\r\n      if (classes.getClassName(entity) === \"jassijs.security.User\" && entity.password !== undefined) {\r\n        entity.password = await new Promise((resolve) => {\r\n          const crypto = require('crypto');\r\n          const salt = crypto.randomBytes(8).toString('base64');\r\n          crypto.pbkdf2(entity.password, salt, passwordIteration, 512, 'sha512', (err, derivedKey) => {\r\n            if (err) throw err;\r\n            resolve(passwordIteration.toString() + \":\" + salt + \":\" + derivedKey.toString('base64'));//.toString('base64'));  // '3745e48...aa39b34'\r\n          });\r\n        })\r\n      }\r\n    }\r\n\r\n    if (context.objecttransaction && options === undefined) {\r\n      return this.addSaveTransaction(context, entity);\r\n    }\r\n    var ret = await this.connection().manager.save(entity, options);\r\n    //delete entity.password;\r\n    //delete ret[\"password\"];\r\n    //@ts-ignore\r\n    return (<DBObject>ret)?.id;\r\n  }\r\n  private async _checkParentRightsForSave<Entity>(context: Context, entity: Entity) {\r\n    await this.waitForConnection;\r\n    if (context.request.user?.isAdmin)\r\n      return;\r\n    //Check if the object self has restrictions\r\n    var cl = classes.getClass(classes.getClassName(entity));\r\n    if (entity[\"id\"] !== undefined) {\r\n      var exist = await this.connection().manager.findOne(cl, entity[\"id\"]);\r\n      if (exist !== undefined) {\r\n        var t = await this.checkParentRight(context, cl, [entity[\"id\"]]);\r\n        if (!t) {\r\n          throw new JassiError(\"you are not allowed to save \" + classes.getClassName(cl) + \" with id \" + entity[\"id\"]);\r\n        }\r\n      }\r\n    }\r\n    //check if the field of parentRight is set\r\n    if (registry.getMemberData(\"$CheckParentRight\") !== undefined) {\r\n      var data = registry.getMemberData(\"$CheckParentRight\")[classes.getClassName(entity)];\r\n      for (var key in data) {\r\n        if (entity[key] === undefined) {\r\n          throw new JassiError(\"the CheckParentRight field \" + key + \" must not be undefined\");\r\n        }\r\n      }\r\n    }\r\n    var vdata = this.connection().getMetadata(cl);\r\n\r\n    //Check if the relations fields have restrictions\r\n    for (var r = 0; r < vdata.relations.length; r++) {\r\n      var rel = vdata.relations[r];\r\n      var data = entity[rel.propertyName];\r\n      if (data !== undefined && !Array.isArray(data)) {\r\n        let cl = rel.type;\r\n        var t = await this.checkParentRight(context, cl, [data[\"id\"]]);\r\n        if (!t) {\r\n          throw new JassiError(\"you are not allowed to save \" + classes.getClassName(cl) + \" with id \" + entity[\"id\"] + \" - no access to property \" + rel.propertyName);\r\n        }\r\n      }\r\n      if (data !== undefined && Array.isArray(data)) {\r\n        let cl = rel.type;\r\n        var arr = [];\r\n        for (let x = 0; x < data.length; x++) {\r\n          arr.push(data[x].id);\r\n        }\r\n        let t = await this.checkParentRight(context, cl, arr);\r\n        if (!t) {\r\n          throw new JassiError(\"you are not allowed to save \" + classes.getClassName(cl) + \" with id \" + entity[\"id\"] + \" - no access to property \" + rel.propertyName);\r\n        }\r\n      }\r\n      /* var tp=await p1.__proto__.constructor;\r\n       var test=await this.connection().manager.findOne(tp,902);\r\n       var ob=await this.connection().manager.preload(tp,p1);\r\n       if(ob===undefined){//does not exists in DB\r\n         ob=p1;\r\n       }*/\r\n    }\r\n  }\r\n  findOne<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, id?: string | number | Date | ObjectID, options?: FindOneOptions<Entity>): Promise<Entity | undefined>;\r\n  /**\r\n   * Finds first entity that matches given find options.\r\n   */\r\n  findOne<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, options?: FindOneOptions<Entity>): Promise<Entity | undefined>;\r\n  /**\r\n  * Finds first entity that matches given conditions.\r\n  */\r\n  findOne<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, conditions?: FindConditions<Entity>, options?: FindOneOptions<Entity>): Promise<Entity | undefined>;\r\n  /**\r\n   * Finds first entity that matches given conditions.\r\n   */\r\n  async findOne<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, p1?: any, p2?: any): Promise<Entity | undefined> {\r\n    if (typeof p1 === \"string\" || typeof p1 === \"number\") {//search by id\r\n      p1 = { id: p1 };\r\n    }\r\n    var ret = await this.find(context, entityClass, p1);\r\n    if (ret === undefined || ret.length === 0)\r\n      return undefined;\r\n    else\r\n      return <Entity>ret[0];\r\n    //return this.connection().manager.findOne(entityClass,id,options);\r\n    // else\r\n    //return this.connection().manager.findOne(entityClass, p1, p2);\r\n  }\r\n  /**\r\n * Finds entities that match given options.\r\n */\r\n  async find<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, options?: MyFindManyOptions<Entity>): Promise<Entity[]>;\r\n\r\n  /**\r\n   * Finds entities that match given conditions.\r\n   */\r\n  async find<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, conditions?: FindConditions<Entity>): Promise<Entity[]>;\r\n\r\n\r\n  /**\r\n    * Finds first entity that matches given conditions.\r\n    */\r\n  async find<Entity>(context: Context, entityClass: ObjectType<Entity> | EntitySchema<Entity>, p1?: any): Promise<Entity[]> {\r\n    //return this.connection().manager.findOne(entityClass,id,options);\r\n    // else\r\n\r\n    await this.waitForConnection;\r\n    var options: MyFindManyOptions<Entity> = p1;\r\n    var onlyColumns = options?.onlyColumns;\r\n    var clname = classes.getClassName(entityClass);\r\n    var cl = classes.getClass(clname);\r\n    var relations = new RelationInfo(context, clname, this);\r\n    var allRelations = this.resolveWildcharInRelations(clname, options?.relations);\r\n    if (options && options.relations) {\r\n      relations.addRelations(context, allRelations, true);\r\n    }\r\n    var ret = await this.connection().manager.createQueryBuilder().\r\n      select(\"me\").from(cl, \"me\");\r\n    if (options)\r\n      ret = relations.addWhere(context, <string>options.where, options.whereParams, ret);\r\n    delete options?.where;\r\n    delete options?.whereParams;\r\n    delete options?.onlyColumns;\r\n    ret = relations.addWhereBySample(context, options, ret);\r\n    ret = relations.join(ret);\r\n    if (!context.request.user.isAdmin)\r\n      ret = await relations.addParentRightDestriction(context, ret);\r\n    if (options?.skip) {\r\n      ret.skip(options.skip);\r\n      delete options.skip;\r\n    }\r\n    if (options?.take) {\r\n      ret.take(options.take);\r\n      delete options.take;\r\n    }\r\n    if (options?.order) {\r\n      for (var key in options?.order) {\r\n        ret.addOrderBy(\"\\\"me_\" + key + \"\\\"\", options.order[key]);\r\n      }\r\n\r\n      delete options.order;\r\n    }\r\n    var test = ret.getSql();\r\n    let objs = await ret.getMany();\r\n    if (objs && onlyColumns) {\r\n      objs.forEach((ob) => {\r\n        for (var key in ob) {\r\n          if (onlyColumns.indexOf(key) === -1 && allRelations.indexOf(key) === -1 && key !== \"id\")\r\n            ob[key] = undefined;\r\n        }\r\n      });\r\n    }\r\n    return objs;\r\n    // return await this.connection().manager.find(entityClass, p1);\r\n  }\r\n  private resolveWildcharInRelations(classname, relation: string[]): string[] {\r\n    var ret = [];\r\n    if (!relation)\r\n      return ret;\r\n    for (let r = 0; r < relation.length; r++) {\r\n      if (relation[r] === \"*\") {\r\n        var vdata = getConnection().getMetadata(classes.getClass(classname));\r\n        for (var re = 0; re < vdata.relations.length; re++) {\r\n          var s = vdata.relations[re].propertyName;\r\n          if (ret.indexOf(s) === -1)\r\n            ret.push(s);\r\n        }\r\n      } else\r\n        ret.push(relation[r]);\r\n    }\r\n    return ret;\r\n  }\r\n  public async createUser(context: Context, username: string, password: string): Promise<User> {\r\n    await this.waitForConnection;\r\n    //var hh=getConnection().manager.findOne(User,{ email: username });\r\n    if (await getConnection().manager.findOne(User, { email: username }) !== undefined) {\r\n      throw new Error(\"User already exists\");\r\n    }\r\n\r\n    const user = new User();\r\n    user.email = username;\r\n    user.password = password;\r\n    //first user would be admin\r\n\r\n    if (await this.connection().manager.findOne(User) === undefined) {\r\n      user.isAdmin = true;\r\n    }\r\n    //password is encrypted when saving\r\n    /* await new Promise((resolve) => {\r\n      const crypto = require('crypto');\r\n\r\n      const salt = crypto.randomBytes(8).toString('base64');\r\n      crypto.pbkdf2(password, salt, passwordIteration, 512, 'sha512', (err, derivedKey) => {\r\n        if (err) throw err;\r\n        resolve(passwordIteration.toString() + \":\" + salt + \":\" + derivedKey.toString('base64'));//.toString('base64'));  // '3745e48...aa39b34'\r\n      });\r\n    })*/\r\n    await this.save(context, user);\r\n    delete user.password;\r\n    return user;\r\n  }\r\n\r\n  async login(context: Context, user: string, password) {\r\n    await this.waitForConnection;\r\n    /* const users = await this.connection().getRepository(User)\r\n     .createQueryBuilder()\r\n     .select(\"user.id\", \"id\")\r\n     //.addSelect(\"user.password\")\r\n     .getMany();*/\r\n    var ret = await this.connection().manager.createQueryBuilder().\r\n      select(\"me\").from(User, \"me\").addSelect(\"me.password\").\r\n      andWhere(\"me.email=:email\", { email: user });\r\n    /* if (options)\r\n       ret = relations.addWhere(<string>options.where, options.whereParams, ret);\r\n \r\n     ret = relations.addWhereBySample(options, ret);\r\n     ret = relations.join(ret);\r\n     ret = await relations.addParentRightDestriction(ret);*/\r\n\r\n    var auser = await ret.getOne();\r\n    if (!auser || !password)\r\n      return undefined;\r\n    let pw = auser.password.split(\":\");\r\n    let iteration = parseInt(pw[0]);\r\n    let salt = pw[1];\r\n    var test = await new Promise((resolve) => {\r\n      const crypto = require('crypto');\r\n      crypto.pbkdf2(password, salt, iteration, 512, 'sha512', (err, derivedKey) => {\r\n        if (err) throw err;\r\n        resolve(passwordIteration.toString() + \":\" + salt + \":\" + derivedKey.toString('base64'));//.toString('base64'));  // '3745e48...aa39b34'\r\n      });\r\n    })\r\n\r\n    if (test === auser.password) {\r\n      delete auser.password;\r\n      return auser;\r\n    } else {\r\n      delete auser.password;\r\n    }\r\n    return undefined;\r\n  }\r\n  async checkParentRight(context: Context, entityClass, ids: any[]): Promise<boolean> {\r\n    await this.waitForConnection;\r\n    var clname = classes.getClassName(entityClass);\r\n    var cl = classes.getClass(clname);\r\n    var relations = new RelationInfo(context, clname, this);\r\n\r\n    var ret = await this.connection().manager.createQueryBuilder().\r\n      select(\"me\").from(cl, \"me\");\r\n\r\n    ret = relations.join(ret);\r\n    ret.andWhere(\"me.id IN (:...ids)\", { ids: ids });\r\n    if (!context.request.user.isAdmin)\r\n      ret = await relations.addParentRightDestriction(context, ret);\r\n    var tt = ret.getSql();\r\n\r\n    var test = await ret.getCount();\r\n    return test === ids.length;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nclass RelationInfo {\r\n  className: string;\r\n  dbmanager: DBManager;\r\n  counter = 100;\r\n  relations: {\r\n    [path: string]: {\r\n      name: string,\r\n      className: string,\r\n      fullPath: string,\r\n      parentRights?: ParentRightProperties[],\r\n      doSelect: boolean\r\n    }\r\n  }\r\n  constructor(context: Context, className: string, dbmanager: DBManager) {\r\n    this.className = className;\r\n    this.dbmanager = dbmanager\r\n    this.relations = {};\r\n    var testPR = registry.getData(\"$ParentRights\", className);\r\n    this.relations[\"\"] = {\r\n      name: \"\",\r\n      className: className,\r\n      fullPath: \"\",\r\n      parentRights: (testPR.length !== 0 ? testPR[0].params[0] : undefined),\r\n      doSelect: true\r\n    }\r\n    this.addRelationsFromParentRights(context, \"\");\r\n  }\r\n\r\n  private addRelationsFromParentRights(context, relationname: string) {\r\n    var pr = this.relations[relationname];\r\n    if (registry.getMemberData(\"$CheckParentRight\") !== undefined) {\r\n      var data = registry.getMemberData(\"$CheckParentRight\")[pr.className];\r\n      if (data !== undefined) {\r\n        var membername = \"\";\r\n        for (var key in data) {\r\n          membername = key;\r\n        }\r\n        var r = relationname + (relationname === \"\" ? \"\" : \".\") + membername\r\n        this.addRelations(context, [r], false);\r\n        this.addRelationsFromParentRights(context, r);\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  private _getRelationFromProperty(property: string): string {\r\n    var keys = property.split(\".\");\r\n    var path = \"me\";\r\n    for (var x = 0; x < keys.length; x++) {\r\n\r\n      if (x + 1 === keys.length)\r\n        path = path + \".\";\r\n      else\r\n        path = path + \"_\";\r\n      path = path + keys[x];\r\n    }\r\n    return path;\r\n  }\r\n  /**\r\n   * add an andWhere to the sql-Query to check the parent rights\r\n   * @param builder \r\n   */\r\n  join<Entity>(builder: SelectQueryBuilder<Entity>): SelectQueryBuilder<Entity> {\r\n    var ret = builder;\r\n    for (var key in this.relations) {\r\n      if (key !== \"\") {\r\n        /* var keys = key.split(\".\");\r\n         var path = \"me\";\r\n         for (var x = 0; x < keys.length; x++) {\r\n \r\n           if (x + 1 === keys.length)\r\n             path = path + \".\";\r\n           else\r\n             path = path + \"_\";\r\n           path = path + keys[x];\r\n         }*/\r\n        var path = this._getRelationFromProperty(key);\r\n        if (this.relations[key].doSelect)\r\n          ret = ret.leftJoinAndSelect(path, \"me_\" + key.replaceAll(\".\", \"_\"));\r\n        else\r\n          ret = ret.leftJoin(path, \"me_\" + key.replaceAll(\".\", \"_\"));\r\n      }\r\n\r\n\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * add an andWhere to the sql-Query to check the parent rights\r\n   * @param builder \r\n   */\r\n  async addParentRightDestriction<Entity>(context: Context, builder: SelectQueryBuilder<Entity>): Promise<SelectQueryBuilder<Entity>> {\r\n    var username = \"a@b.com\";\r\n    var ret = builder;\r\n    //first we get the sql from User-Rights we had to check \r\n    var kk = context.request.user;\r\n    var userid = context.request.user.user;\r\n    var query = this.dbmanager.connection().createQueryBuilder().\r\n      select(\"me\").from(classes.getClass(\"jassijs.security.ParentRight\"), \"me\").\r\n      leftJoin(\"me.groups\", \"me_groups\").\r\n      leftJoin(\"me_groups.users\", \"me_groups_users\");\r\n\r\n    query = query.andWhere(\"me_groups_users.id=:theUserId\", { theUserId: userid });\r\n\r\n\r\n    var doBr = false;\r\n    query = query.andWhere(new Brackets((entr) => {\r\n      var parentrights = undefined;\r\n\r\n      for (var relationname in this.relations) {\r\n        var relation = this.relations[relationname];\r\n        if (relation.parentRights !== undefined) {\r\n          for (var x = 0; x < relation.parentRights.length; x++) {\r\n            doBr = true;\r\n            var right = relation.parentRights[x];\r\n            var param = {};\r\n            param[\"classname\" + this.counter] = relation.className;\r\n            param[\"name\" + this.counter] = right.name;\r\n            entr.orWhere(\"me.classname=:classname\" + this.counter + \" and me.name=:name\" + this.counter, param);\r\n            this.counter++;\r\n          }\r\n        }\r\n      }\r\n      if (!doBr) {\r\n        doBr = true;\r\n        entr.orWhere(\"me.classname=me.classname\");\r\n      }\r\n    }));\r\n\r\n    var debug = query.getSql();\r\n    var parentRights = await query.getMany();\r\n    for (var relationname in this.relations) {\r\n      var relation = this.relations[relationname];\r\n      if (relation.parentRights !== undefined) {\r\n        ret = ret.andWhere(new Brackets((qu) => {\r\n          for (var p = 0; p < relation.parentRights.length; p++) {\r\n            var pr = relation.parentRights[p];\r\n            var found = false;\r\n            for (var z = 0; z < parentRights.length; z++) {\r\n              var oneRight = parentRights[z];\r\n              if (oneRight.name === pr.name && oneRight.classname === relation.className) {\r\n                var sql = pr.sqlToCheck;\r\n                //modify sql that params are unique\r\n                var param = {};\r\n                for (var field in oneRight) {\r\n                  if (field !== \"classname\" && field !== \"groups\" && field !== \"name\") {\r\n                    sql = sql.replaceAll(\":\" + field, \":\" + field + this.counter);\r\n                    if (relation.fullPath !== \"\")\r\n                      sql = sql.replaceAll(\"me.\", \"\\\"me_\" + relation.fullPath.replaceAll(\".\", \"_\") + \"\\\".\");\r\n                    param[field + this.counter] = oneRight[field];\r\n                  }\r\n                }\r\n                qu.orWhere(sql, param);\r\n                found = true;\r\n                this.counter++;\r\n              }\r\n            }\r\n            if (!found) {\r\n              qu.andWhere(\"me.id>1 and me.id<1\", param);//no right exists\r\n            }\r\n          }\r\n        }));\r\n\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  private _checkExpression(context, node) {\r\n    if (node.operator !== undefined) {\r\n      this._parseNode(context, node);\r\n    }\r\n    //replace id to me.id and ar.zeile.id to me_ar_zeile.id\r\n    if (node.type === \"Identifier\" && !node.value.startsWith(\"xxxparams\")) {\r\n      var name = node.value;\r\n      var path = this._getRelationFromProperty(name);\r\n      /*      var keys = name.split(\".\");\r\n            var path = \"me\";\r\n            for (var x = 0; x < keys.length; x++) {\r\n      \r\n              if (x + 1 === keys.length)\r\n                path = path + \".\";\r\n              else\r\n                path = path + \"_\";\r\n              path = path + keys[x];\r\n            }*/\r\n      node.value = path;\r\n      var pack = path.split(\".\")[0].substring(3);\r\n      if (pack !== \"\")\r\n        this.addRelations(context, [pack], false);\r\n    }\r\n    var _this = this;\r\n    if (node.type === \"SimpleExprParentheses\") {\r\n      node.value.value.forEach(element => {\r\n        _this._parseNode(context, element);\r\n      });\r\n    }\r\n  }\r\n  private _parseNode(context: Context, node) {\r\n    /* if (node.operator !== undefined) {\r\n       var left = node.left;\r\n       var right = node.right;\r\n       this._checkExpression(context, left);\r\n       this._checkExpression(context, right);\r\n     }*/\r\n    var left = node.left;\r\n    var right = node.right;\r\n    if (node.left !== undefined) {\r\n      this._checkExpression(context, left);\r\n    }\r\n    if (node.right !== undefined) {\r\n      this._checkExpression(context, right);\r\n    }\r\n\r\n\r\n\r\n  }\r\n  addWhereBySample<Entity>(context: Context, param: any, builder: SelectQueryBuilder<Entity>): SelectQueryBuilder<Entity> {\r\n\r\n    var ret = builder;\r\n    for (var key in param) {\r\n      if (key === \"cache\" || key === \"join\" || key === \"loadEagerRelations\" || key === \"loadRelationids\" || key == \"lock\" || key == \"order\" ||\r\n        key === \"relations\" || key === \"select\" || key === \"skip\" || key === \"take\" || key === \"where\" || key === \"withDeleted\") {\r\n        continue;\r\n      }\r\n      //this should prevent sql injection\r\n      var test = /[A-Z,a-z][A-Z,a-z,0-9,\\.]*/g.exec(key);\r\n      if (test === null || test[0] !== key)\r\n        throw new JassiError(\"could not set property \" + key + \" in where clause\");\r\n      var field = this._getRelationFromProperty(key);\r\n      var pack = field.split(\".\")[0].substring(3);\r\n      if (pack !== \"\")\r\n        this.addRelations(context, [pack], false);\r\n\r\n      var placeholder = \"pp\" + this.counter++;\r\n      var par = {};\r\n      par[placeholder] = param[key];\r\n      ret = ret.andWhere(field + \"=:\" + placeholder, par)\r\n    }\r\n    return ret;\r\n    /* var dummyselect = \"select * from k where \";\r\n     //we must replace because parsing Exception\r\n     var ast = parser.parse(dummyselect + sql.replaceAll(\":\",\"xxxparams\"));\r\n     this._parseNode(ast.value.where);\r\n     var newsql=parser.stringify(ast).replaceAll(\"xxxparams\",\":\");\r\n     ret.andWhere(newsql.substring(dummyselect.length),whereParams);\r\n     return ret;*/\r\n  }\r\n  addWhere<Entity>(context: Context, sql: string, whereParams: any, builder: SelectQueryBuilder<Entity>): SelectQueryBuilder<Entity> {\r\n    var ret = builder;\r\n    if (sql === undefined)\r\n      return ret;\r\n    var dummyselect = \"select * from k where \";\r\n    //we must replace because parsing Exception\r\n    var fullSQL = dummyselect + sql.replaceAll(\":...\", \"fxxparams\").replaceAll(\":\", \"xxxparams\");\r\n    fullSQL = fullSQL.replaceAll(\"\\\" AS TEXT\", \" AS_TEXT\\\"\");\r\n    var ast = parser.parse(fullSQL);\r\n    this._parseNode(context, ast.value.where);\r\n    var newsql: string = parser.stringify(ast).replaceAll(\"fxxparams\", \":...\").replaceAll(\"xxxparams\", \":\");\r\n    newsql = newsql.replaceAll(\" AS_TEXT\\\"\", \"\\\" AS TEXT\");\r\n    ret.andWhere(newsql.substring(dummyselect.length), whereParams);\r\n    return ret;\r\n  }\r\n\r\n  addRelations(context: Context, relations: string[], doselect: boolean) {\r\n    if (relations === undefined)\r\n      return;\r\n    for (var z = 0; z < relations.length; z++) {\r\n      var relation = relations[z];\r\n      var all = relation.split(\".\");\r\n      var curPath = \"\";\r\n      var parentPath = \"\";\r\n      var curClassname = this.className;\r\n      for (var x = 0; x < all.length; x++) {\r\n        parentPath = curPath;\r\n        curPath = curPath + (curPath === \"\" ? \"\" : \".\") + all[x];\r\n        if (this.relations[curPath] === undefined) {\r\n          var vdata = this.dbmanager.connection().getMetadata(classes.getClass(curClassname));\r\n          //read type\r\n          var membername = all[x];\r\n          for (var r = 0; r < vdata.relations.length; r++) {\r\n            var rel = vdata.relations[r];\r\n            if (rel.propertyName === membername) {\r\n              var clname = classes.getClassName(rel.type);\r\n              var testPR = registry.getData(\"$ParentRights\", clname);\r\n              this.relations[curPath] = {\r\n                className: classes.getClassName(rel.type),\r\n                name: membername,\r\n                fullPath: curPath,\r\n                parentRights: (testPR.length !== 0 ? testPR[0].params[0] : undefined),\r\n                doSelect: doselect\r\n              }\r\n            }\r\n          }\r\n          //Parentrights\r\n          membername = \"\";\r\n          if (!context.request.user?.isAdmin) {\r\n            if (registry.getMemberData(\"$CheckParentRight\") !== undefined) {\r\n              var data = registry.getMemberData(\"$CheckParentRight\")[curClassname];\r\n              for (var key in data) {\r\n                membername = key;\r\n              }\r\n            }\r\n          }\r\n          if (membername !== \"\") {\r\n            for (var r = 0; r < vdata.relations.length; r++) {\r\n              var rel = vdata.relations[r];\r\n              if (rel.propertyName === membername) {\r\n                var clname = classes.getClassName(rel.type);\r\n                var testPR = registry.getData(\"$ParentRights\", clname);\r\n                var mpath = parentPath + (parentPath === \"\" ? \"\" : \".\") + membername;\r\n                this.relations[mpath] = {\r\n                  className: classes.getClassName(rel.type),\r\n                  name: membername,\r\n                  fullPath: mpath,\r\n                  parentRights: (testPR.length !== 0 ? testPR[0].params[0] : undefined),\r\n                  doSelect: doselect\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if (doselect) {\r\n          this.relations[curPath].doSelect = true;\r\n        }\r\n\r\n        curClassname = this.relations[curPath].className;\r\n      }\r\n    }\r\n  }\r\n}\r\n","\r\n/// <amd-dependency path=\"jszip\" name=\"JSZip\"/>\r\ndeclare var JSZip;\r\n\r\nJSZip.support.nodebuffer = undefined;//we hacked window.Buffer\r\nexport default JSZip;\r\n","import { JassiError, classes } from \"jassijs/remote/Classes\";\r\nimport { config } from \"jassijs/remote/Config\";\r\nimport { Test } from \"jassijs/remote/Test\";\r\nimport { Reloader } from \"jassijs/util/Reloader\";\r\n\r\n//@ts-ignore\r\nconfig.clientrequire([\"jassijs_editor/util/Typescript\"],ts1=>{\r\n    require(\"jassijs/server/NativeAdapter\").ts=window.ts;\r\n});\r\nvar ts=window.ts;\r\nexport{ts}\r\nclass Stats {\r\n    mtimeMs: number;\r\n    isDirectory: () => boolean;\r\n}\r\nclass FileEntry {\r\n    id: string;\r\n    date: number;\r\n    isDirectory?: boolean;\r\n    data: any;\r\n}\r\nasync function downloadFile(file:string) {\r\n    return await new Promise((resolve,reject)=>{\r\n        var xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.open('GET', file.replace(\"./client\",\"\"), true);   \r\n       \r\n        xmlHttp.onreadystatechange = function () {\r\n         if (xmlHttp.readyState == 4) {\r\n            if(xmlHttp.status===200)\r\n                resolve(xmlHttp.responseText);\r\n            else\r\n            resolve(undefined);\r\n          };\r\n        };\r\n        xmlHttp.onerror=(err)=>{\r\n            resolve(undefined);\r\n        }\r\n        xmlHttp.send(null);\r\n    \r\n    })\r\n  };\r\n\r\nclass FS {\r\n    private static db: IDBDatabase;\r\n    private static async getDB() {\r\n        if (FS.db)\r\n            return FS.db;\r\n        var req = window.indexedDB.open(\"jassi\", 1);\r\n        req.onupgradeneeded = function (event) {\r\n            var db = event.target[\"result\"];\r\n            var objectStore = db.createObjectStore(\"files\", { keyPath: \"id\" });\r\n        }\r\n        FS.db = await new Promise((resolve) => {\r\n            req.onsuccess = (ev) => { resolve(ev.target[\"result\"]) };\r\n        })\r\n        var root = await FS._loadFileEntry(FS.db, \".\");\r\n        if (root === undefined)\r\n            await FS._mkdir(FS.db, \".\");\r\n        return FS.db;\r\n    }\r\n    constructor() {\r\n\r\n    }\r\n    static async _readdir(db: IDBDatabase, folder: string, withSubfolders = false,fullPath=false): Promise<string[]> {\r\n        let transaction = db.transaction('files', 'readonly');\r\n        const store = transaction.objectStore('files');\r\n        var ret = await store.openCursor(IDBKeyRange.bound(folder + \"/\", folder + \"0\", true, true));//0 is the first char after /\r\n        var all = [];\r\n        if (!folder.endsWith(\"/\"))\r\n            folder = folder + \"/\";\r\n        await new Promise((resolve) => {\r\n            ret.onsuccess = ev => {\r\n                var el = ev.target[\"result\"];\r\n                if (el) {\r\n                    if (el.value.id.startsWith(folder)) {\r\n                        var test = el.value.id.substring(folder.length);\r\n                        if (test.indexOf(\"/\") === -1 || withSubfolders === true){//no sub folders\r\n                            if(fullPath)\r\n                                all.push(el.value.id.substring(folder.length));\r\n                            else\r\n                                all.push(el.value.id.substring(folder.length));\r\n                        }\r\n                    }\r\n                    //if (curdir === \"\" || el.value.id === curdir || el.value.id.startsWith(curdir + \"/\"))\r\n\r\n                    el.continue();\r\n                } else\r\n                    resolve(undefined);\r\n            }\r\n            ret.onerror = ev => {\r\n\r\n                resolve(undefined)\r\n            }\r\n        });\r\n        return all;\r\n    }\r\n    async readdir(folder: string): Promise<string[]> {\r\n        var db = await FS.getDB();\r\n        return await FS._readdir(db, folder);\r\n    };\r\n    \r\n    async readFile(file: string, format?: string,fallback=true): Promise<string> {\r\n        var ret=await this.loadFileEntry(file);\r\n        //fallback to Server\r\n        if(fallback&&ret===undefined){\r\n            var test=await downloadFile(file);\r\n            if(test!==undefined||test===\"Unauthorized\")\r\n                ret={data:test,date:undefined,id:\"\"};\r\n        }\r\n        if(ret===undefined)\r\n            throw new JassiError(file+\" not exists\"); \r\n        if(ret.isDirectory)\r\n            throw new JassiError(\"could notz read file\"+file+\" ...is a directory\"); \r\n        return ret.data;\r\n    };\r\n    async stat(file: string): Promise<Stats> {\r\n        var ret=await this.loadFileEntry(file);\r\n        return {\r\n            isDirectory(){return ret.isDirectory},\r\n            mtimeMs:ret.date\r\n        }\r\n    };\r\n\r\n    \r\n    getDirectoryname(path) {\r\n        return path.substring(0, path.lastIndexOf(\"/\"));\r\n    }\r\n    private static async _mkdir(db, filename: string) {\r\n        let transaction = db.transaction('files', 'readwrite');\r\n        const store = transaction.objectStore('files');\r\n        var el: FileEntry = {\r\n            data: undefined,\r\n            id: filename,\r\n            isDirectory: true,\r\n            date: Date.now()\r\n        }\r\n        store.add(el);\r\n        transaction.onerror = (en) => {\r\n            debugger;\r\n        };\r\n        await new Promise((resolve) => { transaction.oncomplete = resolve })\r\n    }\r\n    async mkdir(filename: string, options?: { recursive?: boolean }) {\r\n        var test = await this.loadFileEntry(filename);\r\n        if (test)\r\n            throw new JassiError(filename + \" allready exists\");\r\n        var parent = this.getDirectoryname(filename);\r\n        if(parent===\"\")\r\n            return;\r\n        if (options?.recursive && (!await exists(parent)))\r\n            await this.mkdir(parent, options);\r\n        if (!await exists(parent))\r\n            throw new JassiError(\"parentfolder not exists: \" + parent);\r\n\r\n        var db = await FS.getDB();\r\n        await FS._mkdir(db, filename);\r\n    };\r\n    private async loadFileEntry(fileName: string): Promise<FileEntry> {\r\n        var db = await FS.getDB();\r\n        return await FS._loadFileEntry(db, fileName);\r\n    }\r\n    private static async _loadFileEntry(db: IDBDatabase, fileName: string): Promise<FileEntry> {\r\n        let transaction = db.transaction('files', 'readonly');\r\n        const store = transaction.objectStore('files');\r\n        var ret = await store.get(fileName);\r\n        var r: any = await new Promise((resolve) => {\r\n            ret.onsuccess = ev => { resolve(ret.result) }\r\n            ret.onerror = ev => { resolve(undefined) }\r\n        });\r\n        return r;\r\n    }\r\n    async writeFile(file: string, data: string) {\r\n        var db = await FS.getDB();\r\n        let exists = await this.loadFileEntry(file);\r\n        let transaction = db.transaction('files', 'readwrite');\r\n        const store = transaction.objectStore('files');\r\n        var el = new FileEntry();\r\n        el.id = file;\r\n        el.data = data;\r\n        el.isDirectory = false;\r\n        el.date = Date.now();\r\n        if (exists)\r\n            store.put(el);\r\n        else\r\n            store.add(el);\r\n        await new Promise((resolve) => { transaction.oncomplete = resolve })\r\n    };\r\n    async rename(oldPath: string, newPath: string) {\r\n        var db = await FS.getDB();\r\n        var entr = await this.loadFileEntry(oldPath);\r\n        if (entr === undefined)\r\n            throw new JassiError(\"Error rename src not exists \" + oldPath);\r\n        var dest = await this.loadFileEntry(newPath);\r\n        if (dest !== undefined)\r\n            throw new JassiError(\"Error rename dest already exists \" + newPath);\r\n        if (entr.isDirectory === false) {\r\n            await this.unlink(entr.id);\r\n            await this.writeFile(newPath, entr.data);\r\n        } else {\r\n            var all = await FS._readdir(db, oldPath, true,true);\r\n            all.push(oldPath)\r\n            all=all.sort((a,b)=>a.localeCompare(b));\r\n            for (var x = 0; x < all.length; x++) {\r\n                var fe = await this.loadFileEntry(all[x]);\r\n                var newname = all[x].replace(oldPath, newPath);\r\n                if (fe.isDirectory)\r\n                    await this.mkdir(newname);\r\n                else\r\n                    await this.writeFile(newname, fe.data);\r\n                await FS._removeEntry(db, fe);\r\n            }\r\n        }\r\n    }\r\n    private static async _removeEntry(db: IDBDatabase, entr: FileEntry) {\r\n\r\n        let transaction = db.transaction('files', 'readwrite');\r\n        const store = transaction.objectStore('files');\r\n        store.delete(entr.id);\r\n        await new Promise((resolve) => { transaction.oncomplete = resolve })\r\n    }\r\n    async unlink(file: string) {\r\n        var db = await FS.getDB();\r\n        var entr = await this.loadFileEntry(file);\r\n        if (entr === undefined)\r\n            throw new JassiError(\"could not delete \" + file + \" - file not exists\");\r\n        if (entr.isDirectory)\r\n            throw new JassiError(\"could not delete directory \" + file + \" - use rmdir \");\r\n        return await FS._removeEntry(db, entr);\r\n\r\n    }\r\n   \r\n    async rmdir(dirName, options?: { recursive?: boolean }) {\r\n        var db = await FS.getDB();\r\n        var entr = await this.loadFileEntry(dirName);\r\n        if (entr === undefined)\r\n            throw new JassiError(\"could not delete \" + file + \" - directory not exists\");\r\n        if (!entr.isDirectory)\r\n            throw new JassiError(\"could not delete file \" + file + \" - use unlink\");\r\n\r\n        var files = await FS._readdir(FS.db, dirName, true,true);\r\n\r\n        if (options?.recursive) {\r\n\r\n        } else {\r\n            if (files.length > 0)\r\n                throw new JassiError(\"could not delete \" + dirName + \" directory is not empty\");\r\n        }\r\n        for (var x = 0; x < files.length; x++) {\r\n            var file = files[x];\r\n            var entr = await this.loadFileEntry(file);\r\n            await FS._removeEntry(db, entr);\r\n        }\r\n        /*var db = await FS.getDB();\r\n        var entr = await this.loadFileEntry(file);\r\n        if (entr === undefined)\r\n            throw new JassiError(\"could not delete \" + file + \" - file not exists\");\r\n        let transaction = db.transaction('files', 'readwrite');\r\n        const store = transaction.objectStore('files');\r\n        store.delete(entr.id);\r\n        await new Promise((resolve) => { transaction.oncomplete = resolve })*/\r\n    }\r\n    private async exists(filename: string): Promise<boolean> {\r\n        var db = await FS.getDB();\r\n        let exists = await new FS().loadFileEntry(filename);\r\n        return exists !== undefined;\r\n    }\r\n}\r\nvar myfs=new FS();\r\nexport{myfs};\r\nexport async function exists(filename: string): Promise<boolean> {\r\n    return new FS()[\"exists\"](filename);\r\n}\r\nexport async function test(tt: Test) {\r\n    var fs = new FS();\r\n\r\n    var testfolder = \"./dasisteinfestfolder\";\r\n    var testfile = \"./dasisteintestfile.js\";\r\n\r\n    await fs.writeFile(testfile, \"var a=10;\");\r\n    tt.expectEqual(!(await fs.stat(testfile)).isDirectory())\r\n    tt.expectEqual(await exists(testfile));\r\n    tt.expectEqual((await fs.readFile(testfile))===\"var a=10;\");\r\n    var hh = await fs.readdir(\".\");\r\n    tt.expectEqual(hh.length > 0);\r\n    await fs.rename(testfile, testfile + \".txt\");\r\n    tt.expectEqual(await exists(testfile + \".txt\"));\r\n    await fs.rename(testfile + \".txt\", testfile);\r\n\r\n    await fs.unlink(testfile);\r\n    tt.expectEqual(!await exists(testfile));\r\n    tt.expectErrorAsync(async () => await fs.unlink(\"./hallo.js\"));\r\n    if (await exists(testfolder))\r\n        await fs.rmdir(testfolder, { recursive: true });\r\n    await fs.mkdir(testfolder + \"/hh\", { recursive: true });\r\n    await fs.writeFile(testfolder + \"/hh/h.txt\", \"Hallo\");\r\n    await fs.rename(testfolder, testfolder + \"1\");\r\n    tt.expectEqual(await exists(testfolder + \"1\"));\r\n    tt.expectEqual(!await exists(testfolder));\r\n    await fs.rename(testfolder + \"1\", testfolder);\r\n    tt.expectEqual(!await exists(testfolder + \"1\"));\r\n    tt.expectEqual(await exists(testfolder));\r\n    //tt.expectErrorAsync(async () => await fs.rmdir(testfolder));\r\n    //await fs.rmdir(testfolder, { recursive: true })\r\n    debugger;\r\n}\r\n\r\n export async function  dozip(directoryname: string, serverdir: boolean = undefined) : Promise<string>{\r\n        //@ts-ignore\r\n        var JSZip = (await import(\"jassijs/server/ext/jszip\")).default;\r\n        if (serverdir)\r\n            throw new Error(\"serverdir is unsupported on localserver\");\r\n        var zip = new JSZip();\r\n        var files = await this.dirEntry(directoryname);\r\n        for (let x = 0; x < files.length; x++) {\r\n            if (files[x].isDirectory)\r\n                zip.folder(files[x].id);\r\n            else\r\n                zip.file(files[x].id, files[x].data);\r\n        }\r\n\r\n        var ret = await zip.generateAsync({ type: \"base64\" });\r\n        //var ret = await zip.generateAsync({ type: \"base64\" });\r\n        return ret;\r\n    }\r\n\r\nexport async function reloadJSAll(filenames: string[], afterUnload: () => {}) {\r\n    return Reloader.instance.reloadJSAll(filenames,afterUnload);\r\n}\r\n\r\nexport async function   transpile(fileName: string,inServerdirectory:boolean=undefined) {\r\n    var tp=<any>await new Promise((resolve)=>{\r\n        config.clientrequire([\"jassijs_editor/util/Typescript\"],ts1=>{\r\n            resolve(ts1);\r\n        });\r\n    });\r\n    \r\n    var content=await myfs.readFile(fileName);\r\n    var data=await tp.Typescript.instance.transpile(fileName,content);\r\n    for(var x=0;x<data.fileNames.length;x++){\r\n        var fname=\"./\"+data.fileNames[x];\r\n        if(!await exists(myfs.getDirectoryname(fname)))\r\n            await myfs.mkdir(myfs.getDirectoryname(fname),{recursive:true});\r\n        await myfs.writeFile(fname,data.contents[x]);\r\n    }\r\n \r\n}","import { $Class } from \"jassijs/remote/Registry\";\r\n//@ts-ignore\r\nimport { EntitySubscriberInterface, EventSubscriber, InsertEvent, RemoveEvent, UpdateEvent } from \"typeorm\";\r\nimport Filesystem from \"jassijs/server/Filesystem\";\r\n\r\nimport registry from \"jassijs/remote/Registry\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\nimport { myfs } from \"./NativeAdapter\";\r\n\r\n\r\n//listener for code changes\r\n/*Reloader.instance.addEventCodeReloaded(async function (files: string[]) {\r\n    var dbobjects = await registry.getJSONData(\"$DBObject\");\r\n    var reload = false;\r\n    for (var x = 0; x < files.length; x++) {\r\n        var file = files[x];\r\n        dbobjects.forEach((data) => {\r\n            if (data.filename === file+\".ts\")\r\n                reload = true;\r\n        });\r\n    }\r\n    if(reload){\r\n        (await serverservices.db).renewConnection();\r\n    }\r\n});*/\r\n\r\n@EventSubscriber()\r\n@$Class(\"jassijs.server.TypeORMListener\")\r\nexport class TypeORMListener implements EntitySubscriberInterface {\r\n    savetimer;\r\n    saveDB(event) {\r\n        if (this.savetimer) {\r\n            clearTimeout(this.savetimer);\r\n            this.savetimer = undefined;\r\n        }\r\n        this.savetimer = setTimeout(() => {\r\n            var data = event.connection.driver.export();\r\n            myfs.writeFile(\"./client/__default.db\",data);\r\n            console.log(\"save DB\");\r\n        }, 300);\r\n\r\n    }\r\n    /**\r\n     * Called after entity is loaded.\r\n     */\r\n    afterLoad(entity: any) {\r\n        // console.log(`AFTER ENTITY LOADED: `, entity);\r\n    }\r\n\r\n    /**\r\n     * Called before post insertion.\r\n     */\r\n    beforeInsert(event: InsertEvent<any>) {\r\n        //console.log(`BEFORE POST INSERTED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called after entity insertion.\r\n     */\r\n    afterInsert(event: InsertEvent<any>) {\r\n        this.saveDB(event);\r\n        //console.log(`AFTER ENTITY INSERTED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called before entity update.\r\n     */\r\n    beforeUpdate(event: UpdateEvent<any>) {\r\n        //console.log(`BEFORE ENTITY UPDATED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called after entity update.\r\n     */\r\n    afterUpdate(event: UpdateEvent<any>) {\r\n        this.saveDB(event);\r\n        //console.log(`AFTER ENTITY UPDATED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called before entity removal.\r\n     */\r\n    beforeRemove(event: RemoveEvent<any>) {\r\n        // console.log(`BEFORE ENTITY WITH ID ${event.entityId} REMOVED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called after entity removal.\r\n     */\r\n    afterRemove(event: RemoveEvent<any>) {\r\n        //  console.log(`AFTER ENTITY WITH ID ${event.entityId} REMOVED: `, event.entity);\r\n        this.saveDB(event);\r\n    }\r\n\r\n    /**\r\n     * Called before transaction start.\r\n     */\r\n    beforeTransactionStart(event) {\r\n        // console.log(`BEFORE TRANSACTION STARTED: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called after transaction start.\r\n     */\r\n    afterTransactionStart(event/*: TransactionStartEvent*/) {\r\n        //console.log(`AFTER TRANSACTION STARTED: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called before transaction commit.\r\n     */\r\n    beforeTransactionCommit(event/*: TransactionCommitEvent*/) {\r\n        // console.log(`BEFORE TRANSACTION COMMITTED: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called after transaction commit.\r\n     */\r\n    afterTransactionCommit(event/*: TransactionCommitEvent*/) {\r\n        //console.log(`AFTER TRANSACTION COMMITTED: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called before transaction rollback.\r\n     */\r\n    beforeTransactionRollback(event/*: TransactionRollbackEvent*/) {\r\n        //   console.log(`BEFORE TRANSACTION ROLLBACK: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called after transaction rollback.\r\n     */\r\n    afterTransactionRollback(event/*: TransactionRollbackEvent*/) {\r\n        // console.log(`AFTER TRANSACTION ROLLBACK: `, event);\r\n    }\r\n\r\n}","import { classes } from \"jassijs/remote/Classes\";\r\nimport { db } from \"jassijs/remote/Database\";\r\nimport registry from \"jassijs/remote/Registry\";\r\nimport { DBManager } from \"./DBManager\";\r\nimport { TypeORMListener } from \"./TypeORMListener\";\r\nimport {EventSubscriber} from \"typeorm\";\r\nimport { myfs ,exists} from \"./NativeAdapter\";\r\n\r\n\r\nexport function extendDBManager(){\r\n      //create Admin User if doesn't a user exists \r\n      DBManager.prototype[\"hasLoaded\"] = async function () {\r\n        var User = await classes.loadClass(\"jassijs.security.User\");\r\n        //@ts-ignore\r\n        var us =<any> User.findOne();\r\n        if (us) {\r\n            us = new User();\r\n            us.email = \"admin\";\r\n            us.password = \"jassi\";\r\n            us.isAdmin = true;\r\n            await us.save();\r\n        }\r\n\r\n    }\r\n    DBManager.prototype[\"login\"] = async function (context, user, password) {\r\n        try {\r\n            var User = await classes.loadClass(\"jassijs.security.User\");\r\n            var ret = await this.connection().manager.createQueryBuilder().\r\n                select(\"me\").from(User, \"me\").addSelect(\"me.password\").\r\n                andWhere(\"me.email=:email\", { email: user });\r\n\r\n            var auser = await ret.getOne();\r\n            if (!auser || !password)\r\n                return undefined;\r\n            if (auser.password === password) {\r\n                delete auser.password;\r\n                return auser;\r\n            }\r\n        } catch (err) {\r\n            err=err;\r\n        }\r\n        return undefined;\r\n    }\r\n    //@ts-ignore\r\n    DBManager[\"getConOpts\"] = async function () {\r\n        var dbclasses = []; \r\n        const initSqlJs = window[\"SQL\"];\r\n        const SQL = await window[\"SQL\"]({\r\n            // Required to load the wasm binary asynchronously. Of course, you can host it wherever you want\r\n            // You can omit locateFile completely when running in node\r\n            locateFile: file => `https://sql.js.org/dist/${file}`\r\n        });\r\n\r\n        var dbobjects = await registry.getJSONData(\"$DBObject\");\r\n        var dbfiles = [];\r\n        for (var o = 0; o < dbobjects.length; o++) {\r\n            var clname = dbobjects[o].classname;\r\n            try {\r\n                dbfiles.push(dbobjects[o].filename.replace(\".ts\", \"\"));\r\n                dbclasses.push(await classes.loadClass(clname));\r\n            } catch (err) {\r\n                console.log(err);\r\n                throw err;\r\n            }\r\n        }\r\n        //@ts-ignore\r\n        DBManager.clearMetadata();\r\n        db.fillDecorators();\r\n        var tcl = await classes.loadClass(\"jassijs.server.TypeORMListener\");\r\n       //@ts-ignore \r\n        new EventSubscriber()(tcl);\r\n        var Filesystem = await classes.loadClass(\"jassijs.server.Filesystem\");\r\n       \r\n        var data=undefined;\r\n        if(await exists(\"./client/__default.db\"))\r\n             data=await myfs.readFile(\"./client/__default.db\",undefined,false);\r\n      \r\n        var opt = {\r\n            database: data,\r\n            type: \"sqljs\",\r\n            subscribers: [TypeORMListener],\r\n            \"entities\": dbclasses\r\n        };\r\n        return opt;\r\n    }\r\n}","\r\nimport { classes } from \"jassijs/remote/Classes\";\r\nimport { db } from \"jassijs/remote/Database\";\r\n    //@ts-ignore\r\nimport { Entity as DEntity,EntityOptions, PrimaryGeneratedColumn as DPrimaryGeneratedColumn,     JoinColumn as DJoinColumn, JoinTable as DJoinTable, Column as DColumn, PrimaryColumn as DPrimaryColumn,     OneToOne as DOneToOne, OneToMany as DOneToMany, ManyToOne as DManyToOne, ManyToMany as DManyToMany } from \"typeorm\";\r\n\r\nfunction addDecorater(decoratername,delegate,...args){\r\n\r\n    return function(...fargs){\r\n        var con=fargs.length===1?fargs[0]:fargs[0].constructor;\r\n        var clname=classes.getClassName(con);\r\n        var field=fargs.length==1?\"this\":fargs[1];\r\n        db._setMetadata(con,field,decoratername,args,fargs,delegate);\r\n        if(delegate)\r\n            delegate(...args)( ...fargs);\r\n    }\r\n}\r\nexport function Entity(...param): Function{\r\n    //DEntity(param)(pclass, ...params);\r\n    return addDecorater(\"Entity\",DEntity,...param);\r\n}\r\nexport function PrimaryGeneratedColumn(...param): Function{\r\n    return addDecorater(\"PrimaryGeneratedColumn\",DPrimaryGeneratedColumn,...param);\r\n}\r\nexport function JoinColumn(...param): Function{\r\n    return addDecorater(\"JoinColumn\",DJoinColumn,...param);\r\n}\r\nexport function JoinTable(...param): Function{\r\n    return addDecorater(\"JoinTable\",DJoinTable,...param);\r\n}\r\nexport function Column(...param): Function{\r\n    return addDecorater(\"Column\",DColumn,...param);\r\n}\r\nexport function PrimaryColumn(...param): Function{\r\n    return addDecorater(\"PrimaryColumn\",DPrimaryColumn,...param);\r\n}\r\nexport function OneToOne(...param): Function{\r\n    return addDecorater(\"OneToOne\",DOneToOne,...param);\r\n}\r\nexport function OneToMany(...param): Function{\r\n    return addDecorater(\"OneToMany\",DOneToMany,...param);\r\n}\r\n\r\nexport function ManyToOne(...param): Function{\r\n    return addDecorater(\"ManyToOne\",DManyToOne,...param);\r\n}\r\n\r\nexport function ManyToMany(...param): Function{\r\n    return addDecorater(\"ManyToMany\",DManyToMany,...param);\r\n}\r\n/*\r\nexport function $DBObject(options?: EntityOptions): Function {\r\n    return function(pclass, ...params) {\r\n    \tvar classname=classes.getClassName(pclass);\r\n        if(!options)\r\n            options={};\r\n        if(!options.name)\r\n            options.name=classname.toLowerCase().replaceAll(\".\",\"_\");\r\n        registry.register(\"$DBObject\", pclass, options);\r\n        Entity(options)(pclass, ...params);//pass to orginal Entitiy\r\n    }\r\n}\r\n*/\r\n/*\r\nexport {PrimaryGeneratedColumn};\r\nexport {JoinColumn};\r\nexport {JoinTable };\r\nexport { Column};\r\nexport {PrimaryColumn};\r\nexport {OneToOne};\r\nexport {OneToMany};\r\nexport {ManyToOne};\r\nexport {ManyToMany};*/\r\nexport {EntityOptions};\r\n//export function Entity(options?: EntityOptions): Function;\r\n//export declare type PrimaryGeneratedColumnType = \"int\" | \"int2\" | \"int4\" | \"int8\" | \"integer\" | \"tinyint\" | \"smallint\" | \"mediumint\" | \"bigint\" | \"dec\" | \"decimal\" | \"fixed\" | \"numeric\" | \"number\" | \"uuid\";\r\n","import registry from \"jassijs/remote/Registry\";\r\nimport { classes, JassiError } from \"jassijs/remote/Classes\";\r\n\r\n\r\n\r\nimport { Context } from \"jassijs/remote/RemoteObject\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\n\r\nexport function remoteProtocol(request, response) {\r\n\r\n    execute(request, response);\r\n}\r\nasync function checkSimulateUser(context: Context, request) {\r\n\r\n    var rights = (await import(\"jassijs/remote/security/Rights\")).default;\r\n    var test = request.cookies[\"simulateUser\"];\r\n    if (request.cookies[\"simulateUser\"] !== undefined && request.cookies[\"simulateUserPassword\"] !== undefined && context.request.user.isAdmin) {\r\n        var db = await serverservices.db;\r\n\r\n        var user = await db.login(context, context.request.cookies[\"simulateUser\"], context.request.cookies[\"simulateUserPassword\"]);\r\n        if (!user) {\r\n            console.log(\"simulateUser not found\");\r\n            return;\r\n        }\r\n\r\n        request.user.user = user.id;\r\n        request.user.isAdmin = (user.isAdmin === null ? false : user.isAdmin);\r\n        if (!user)\r\n            throw new JassiError(\"simulateUser not logged in\");\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\nasync function execute(request, res) {\r\n    var RemoteProtocol = (await import(\"jassijs/remote/RemoteProtocol\")).RemoteProtocol;\r\n\r\n    var context: Context = {\r\n        isServer: true,\r\n        request: request\r\n    }\r\n    var val = await _execute(request.rawBody, request, context);\r\n    var s = new RemoteProtocol().stringify(val);\r\n    if (s === undefined)\r\n        s = \"$$undefined$$\";\r\n\r\n    res.send(s);\r\n}\r\nexport async function _execute(protext: string, request, context: Context): Promise<string> {\r\n    // await new Promise((resolve)=>{docls(request,response,resolve)});\r\n\r\n    var RemoteProtocol = (await import(\"jassijs/remote/RemoteProtocol\")).RemoteProtocol;\r\n\r\n\r\n    var prot = new RemoteProtocol();\r\n    var vdata = await prot.parse(protext);\r\n    Object.assign(prot, vdata);\r\n\r\n    var files = registry.getAllFilesForService(\"$Class\", prot.classname);\r\n\r\n    if (files === undefined || files.length === 0) {\r\n        throw new JassiError(\"file for \" + prot.classname + \" not found\");\r\n    }\r\n    var file: string = files[0];\r\n    var path = file.split(\"/\");\r\n    if (path.length < 2 || path[1] !== \"remote\")\r\n        throw new JassiError(\"only remote packages can be loadeded\");\r\n    file = file.replace(\".ts\", \"\");\r\n    //var ret = await import(file);\r\n    var C= await classes.loadClass(prot.classname);\r\n    ///await Promise.resolve().then(() => require.main.require(file));\r\n    //var C = classes.getClass(prot.classname);\r\n    if (prot._this === \"static\") {\r\n        try {\r\n            await checkSimulateUser(context, request);\r\n            if (prot.parameter === undefined)\r\n                ret = await (C[prot.method](context));\r\n            else\r\n                ret = await (C[prot.method](...prot.parameter, context));\r\n        } catch (ex) {\r\n            console.error(ex.stack);\r\n            var msg = ex.message;\r\n            if (!msg)\r\n                msg = ex;\r\n            if (!ex)\r\n                ex = \"\";\r\n            ret = {\r\n                \"**throw error**\": msg\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    } else {\r\n        var obj = new C();\r\n\r\n        if (prot._this !== undefined)\r\n            Object.assign(obj, prot._this);\r\n        var ret = undefined;\r\n        try {\r\n            await checkSimulateUser(context, request);\r\n            if (prot.parameter === undefined)\r\n                ret = await (obj[prot.method](context));\r\n            else\r\n                ret = await (obj[prot.method](...prot.parameter, context));\r\n        } catch (ex) {\r\n            if(!(ex instanceof JassiError)){\r\n                console.error(ex.stack);\r\n            }\r\n            var msg = ex.message;\r\n            if (!msg)\r\n                msg = ex;\r\n            if (!ex)\r\n                ex = \"\";\r\n            ret = {\r\n                \"**throw error**\": msg\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n}\r\n","//synchronize-server-client\r\nimport { Indexer } from \"jassijs/server/Indexer\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\nimport { exists, myfs } from \"jassijs/server//NativeAdapter\";\r\nimport { config } from \"jassijs/remote/Config\";\r\n\r\n\r\nexport class ServerIndexer extends Indexer {\r\n    public async updateRegistry() {\r\n        //client modules\r\n        var path = (await serverservices.filesystem).path\r\n        var modules = config.modules;\r\n        for (var m in modules) {\r\n            if ((await exists(path + \"/\" + modules[m]) && !modules[m].endsWith(\".js\") && modules[m].indexOf(\".js?\")) === -1) //.js are internet modules\r\n                await this.updateModul(path, m, false);\r\n        }\r\n        //server modules\r\n        modules = config.server.modules;\r\n        for (var m in modules) {\r\n            if (await exists(\"./\" + modules[m]) && !modules[m].endsWith(\".js\")) //.js are internet modules\r\n                await this.updateModul(\".\", m, true);\r\n        }\r\n        return;\r\n    }\r\n    async dirFiles(modul: string, path: string, extensions: string[], ignore: string[] = []): Promise<string[]> {\r\n       \r\n        var jsFiles: string[] = await (await serverservices.filesystem).dirFiles(path, extensions, ignore);\r\n        return jsFiles;\r\n    }\r\n    async writeFile(name: string, content: string) {\r\n        if (!name.startsWith(\"./\"))\r\n            name = \"./\"+name ;\r\n        await myfs.writeFile(name, content);\r\n    }\r\n    async createDirectory(name: string) {\r\n        if (!name.startsWith(\"./\"))\r\n        name = \"./\"+name ;\r\n        await myfs.mkdir(name, { recursive: true });\r\n        return;\r\n    }\r\n    async getFileTime(filename): Promise<number> {\r\n        if (!filename.startsWith(\"./\"))\r\n        filename = \"./\"+filename ;\r\n        var stats = await myfs.stat(filename);\r\n        return stats.mtimeMs;\r\n    }\r\n    async fileExists(filename): Promise<boolean> {\r\n        if (!filename.startsWith(\"./\"))\r\n        filename = \"./\"+filename ;\r\n        return await exists(filename);\r\n    }\r\n    async readFile(filename): Promise<any> {\r\n        if (!filename.startsWith(\"./\"))\r\n        filename = \"./\"+filename ;\r\n        return myfs.readFile(filename, 'utf-8');\r\n    }\r\n}","//@ts-ignore\r\n\r\nimport \"jassijs/remote/Classes\";\r\nimport { classes } from \"jassijs/remote/Classes\";\r\nimport registry from \"jassijs/remote/Registry\";\r\n\r\nexport class ServerserviceProperties {\r\n    name: string;\r\n    getInstance:(()=>Promise<any>) \r\n}\r\nvar runningServerservices = {};\r\nvar beforeServiceLoadHandler=[];\r\nexport function beforeServiceLoad(func:(name:string,props:ServerserviceProperties)=>void){\r\n    beforeServiceLoadHandler.push(func);\r\n}\r\ndeclare global{ \r\n    interface Serverservice{\r\n\r\n    }\r\n}\r\n\r\nvar serverservices: Serverservice = <any>new Proxy(runningServerservices, {\r\n    get(target, prop, receiver) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var khsdf=runningServerservices;\r\n            if (target[prop]) { \r\n                resolve(target[prop]); \r\n            } else {\r\n                var all = await registry.getJSONData(\"$Serverservice\");\r\n                for (var x = 0; x < all.length; x++) { \r\n                    var serv = all[x];\r\n                    var name = serv.params[0].name;\r\n                    if (name === prop) { \r\n                        var classname = serv.classname;\r\n                        var cl = await registry.getJSONData(\"$Class\", classname);\r\n                        //@ts-ignore\r\n                        if (require.main) {//nodes load project class from module\r\n                            /*for (var jfile in require.cache) {\r\n                                if(jfile.replaceAll(\"\\\\\",\"/\").endsWith(serv.filename.substring(0,serv.filename.length-2)+\"js\")){\r\n                                    delete require.cache[jfile];\r\n                                }\r\n                            }*/\r\n                            //@ts-ignore\r\n                            await Promise.resolve().then(() => require.main.require(classname.replaceAll(\".\", \"/\")));\r\n                        } else {\r\n                            await classes.loadClass(classname); //await import(classname.replaceAll(\".\", \"/\"));\r\n                        } \r\n                        var props:ServerserviceProperties=registry.getData(\"$Serverservice\",classname)[0].params[0];\r\n                        for(var x=0;x<beforeServiceLoadHandler.length;x++){\r\n                            await beforeServiceLoadHandler[x](<string>prop,props);\r\n                        }\r\n                        var instance= props.getInstance();\r\n                       \r\n                        target[prop]=instance;\r\n                        resolve(instance);  \r\n                        return;\r\n                           \r\n                    }\r\n                    \r\n                }\r\n            }\r\n\r\n            reject(\"serverservice not found:\" + <string>prop);\r\n        });\r\n    }\r\n});  \r\n\r\nexport function $Serverservice(properties: ServerserviceProperties): Function {\r\n    return function (pclass) {\r\n        registry.register(\"$Serverservice\", pclass, properties);\r\n    }\r\n}\r\n \r\n\r\nvar doNotReloadModule=true;\r\nexport { serverservices,doNotReloadModule,runningServerservices};\r\n\r\n\r\n","//synchronize-server-client\r\nimport { FileNode } from 'jassijs/remote/FileNode';\r\n\r\nimport { ServerIndexer } from './RegistryIndexer';\r\nimport registry, { $Class } from 'jassijs/remote/Registry';\r\nimport { $Serverservice, runningServerservices, serverservices } from '../remote/Serverservice';\r\nimport { dozip, myfs, exists, reloadJSAll, transpile } from './NativeAdapter';\r\nimport { config } from 'jassijs/remote/Config';\r\n\r\n\r\nvar ignore = [\"phpMyAdmin\", \"lib\", \"tmp\", \"_node_modules\"]\r\ndeclare global {\r\n    interface Serverservice {\r\n        filesystem: Promise<Filesystem>;\r\n    }\r\n}\r\n@$Serverservice({ name: \"filesystem\", getInstance: async () => { return new Filesystem() } })\r\n@$Class(\"jassijs.server.Filesystem\")\r\nexport default class Filesystem {\r\n    static allModules: { [name: string]: any[] } = {};\r\n    public path = \"./client\";\r\n    _pathForFile(fileName: string, fromServerdirectory: boolean = undefined) {\r\n        if (fileName.startsWith(\"/\"))\r\n            fileName = fileName.substring(1);\r\n        var path = this.path + \"/\" + fileName;\r\n        if (fromServerdirectory)\r\n            path = \"./\" + fileName.replace(\"$serverside/\", \"\");\r\n        return path;\r\n    }\r\n    /*   _getDirectory(file:string,main:FileNode[]):FileNode[]{\r\n           var paths:string[]=file.split(\"/\");\r\n           var parent=main;\r\n           for(let p=0;p<paths.length-1;p++){\r\n               for(let x=0;x<parent.length;x++){\r\n                   if(parent[x].name===paths[p]){\r\n                       parent=parent[x].files;\r\n                       continue;\r\n                   }\r\n               }\r\n           }\r\n           return parent;\r\n       }*/\r\n    async dir(curdir = \"\", appendDate = false, parentPath = this.path, parent: FileNode = undefined): Promise<FileNode> {\r\n        try {\r\n\r\n            var _this = this;\r\n            var modules = config.server.modules;\r\n            if (parent === undefined) {\r\n                parent = { name: \"\", files: [] };\r\n            }\r\n            //var parent:FileNode[]=_this._getDirectory(file,results);\r\n\r\n            var list: string[] = await myfs.readdir(parentPath + (curdir === \"\" ? \"\" : (\"/\" + curdir)));\r\n            for (var xx = 0; xx < list.length; xx++) {\r\n                var filename = list[xx];\r\n                var file = curdir + (curdir === \"\" ? \"\" : '/') + filename;\r\n                if (file !== \"js\" && file !== \"tmp\") {//compiled js\r\n\r\n                    var stat = await myfs.stat(parentPath + \"/\" + file);\r\n                    if (stat && stat.isDirectory()) {\r\n                        var newDir = { name: filename, files: [] };\r\n                        parent.files.push(newDir)\r\n                        /* Recurse into a subdirectory */\r\n                        if (ignore.indexOf(file) === -1)\r\n                            await _this.dir(file, appendDate, parentPath, newDir);\r\n                    } else {\r\n                        let dat = \"\";\r\n                        let toAdd: FileNode = { name: filename };\r\n                        if (appendDate === true)\r\n                            toAdd.date = (await myfs.stat(parentPath + \"/\" + file)).mtimeMs.toString();\r\n                        // if (file.toLowerCase().endsWith(\".ts\"))\r\n                        parent.files.push(toAdd);\r\n                        /* if (file.toLowerCase().endsWith(\".js\")) {\r\n                             if (!await exists(file.replace(\".js\", \".ts\"))) {\r\n                                 parent.files.push(toAdd);\r\n                             }\r\n                         }\r\n                         if (file.toLowerCase().endsWith(\".json\"))\r\n                             parent.files.push(toAdd);*/\r\n                    }\r\n                }\r\n            };\r\n            //add files in node modules\r\n            if (parent.name === \"\" && parentPath === \"./client\") {\r\n                for (var key in modules) {\r\n                    if (await exists(\"./node_modules/\" + key + \"/client\")) {\r\n                        var addFiles = await this.dir(\"client\", appendDate, \"./node_modules/\" + key);\r\n                        var temp = {};\r\n                        for (var x = 0; x < parent.files.length; x++) {\r\n                            var entr = parent.files[x];\r\n                            temp[entr.name] = entr;\r\n                        }\r\n                        for (var x = 0; x < addFiles.files.length; x++) {\r\n                            if (temp[addFiles.files[x].name] === undefined) {\r\n                                parent.files.push(addFiles.files[x]);\r\n                                //addFiles.files[x].isNode_module=true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return parent;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n    public async loadFile(fileName: string) {\r\n        var fromServerdirectory = fileName.startsWith(\"$serverside/\");\r\n        let file = this._pathForFile(fileName, fromServerdirectory);\r\n        return await myfs.readFile(file, 'utf-8');\r\n\r\n    }\r\n    public async loadFiles(fileNames: string[]) {\r\n        var ret = {};\r\n\r\n        for (var x = 0; x < fileNames.length; x++) {\r\n\r\n            ret[fileNames[x]] = await myfs.readFile(this._pathForFile(fileNames[x]), 'utf-8');\r\n            /* await myfs.readFile(path+\"/\"+fileName, {encoding: 'utf-8'}, function(err,data){\r\n                if (!err) {\r\n                    response.send( data);\r\n              //    response.writeHead(200, {'Content-Type': 'text/html'});\r\n                //  response.write(data);\r\n                }else{\r\n                  return response.send(err);\r\n                }\r\n              });*/\r\n        }\r\n        return ret;\r\n        //  return ret;\r\n    }\r\n    public async dirFiles(dir: string, extensions: string[], ignore: string[] = []): Promise<string[]> {\r\n        var results = [];\r\n        if (!await exists(dir))\r\n            return results;\r\n        var list = await myfs.readdir(dir);\r\n        var _this = this;\r\n        for (let l = 0; l < list.length; l++) {\r\n            let file = list[l];\r\n            if (ignore.indexOf(file) !== -1)\r\n                continue;\r\n            file = dir + '/' + file;\r\n\r\n            var stat = await myfs.stat(file);\r\n            if (stat && stat.isDirectory()) {\r\n                /* Recurse into a subdirectory */\r\n                var arr = await _this.dirFiles(file, extensions);\r\n                results = results.concat(arr);\r\n            } else {\r\n                /* Is a file */\r\n                for (var x = 0; x < extensions.length; x++) {\r\n                    if (file.toLowerCase().endsWith(extensions[x]) && results.indexOf(file) === -1) {\r\n                        results.push(file);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return results;\r\n    }\r\n\r\n\r\n\r\n    public async zip(directoryname: string, serverdir: boolean = undefined): Promise<string> {\r\n        return await dozip(directoryname, serverdir);\r\n    }\r\n    //Reset ORM config\r\n    /**\r\n     * create a folder\r\n     * @param foldername - the name of the new file \r\n     */\r\n    public async createFolder(foldername: string): Promise<string> {\r\n        var newpath = this._pathForFile(foldername);\r\n        if (await exists(newpath))\r\n            return foldername + \" allready await exists\";\r\n        try {\r\n            await myfs.mkdir(newpath, { recursive: true })\r\n        } catch (ex) {\r\n            return ex.message;\r\n        }\r\n        return \"\";\r\n    }\r\n    /**\r\n     * create a module\r\n     * @param modulname - the name of the module\r\n  \r\n     */\r\n    public async createModule(modulename: string): Promise<string> {\r\n        var newpath = this._pathForFile(modulename);\r\n        try {\r\n            //create folder\r\n            if (!await exists(newpath))\r\n                await myfs.mkdir(newpath, { recursive: true });\r\n            //create remotefolder\r\n            //if (!await exists(newpath + \"/remote\"))\r\n            //    await myfs.mkdir(newpath + \"/remote\", { recursive: true });\r\n            if (!await exists(newpath + \"/modul.ts\")) {\r\n                await this.saveFiles([modulename + \"/modul.js\", \"js/\" + modulename + \"/modul.js\"], [\r\n                    \"export default {}\",\r\n                    'define([\"require\", \"exports\"], function (require, exports) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = {};});'\r\n                ]);\r\n            }\r\n\r\n            if (!await exists(newpath + \"/registry.js\")) {\r\n                await this.saveFiles([modulename + \"/registry.js\", \"js/\" + modulename + \"/registry.js\"], [\r\n                    'define(\"' + modulename + '/registry\",[\"require\"], function(require) {return {  default: {\t} } } );',\r\n                    'define(\"' + modulename + '/registry\",[\"require\"], function(require) {return {  default: {\t} } } );',\r\n                ]);\r\n            }\r\n            /* if (!await exists(\"./\" + modulename))\r\n                 await myfs.mkdir(\"./\" + modulename, { recursive: true });\r\n             if (!await exists(\"./js/\" + modulename))\r\n                 await myfs.mkdir(\"./js/\" + modulename, { recursive: true });\r\n             if (!await exists(\"./\" + modulename + \"/remote\"))\r\n                 await myfs.mkdir(\"./\" + modulename + \"/remote\", { recursive: true });\r\n             if (!await exists(\"./\" + modulename + \"/registry.js\")) {\r\n                 await myfs.writeFile(\"./\" + modulename + \"/registry.js\", 'Object.defineProperty(exports, \"__esModule\", { value: true });exports.default={}');\r\n                 await myfs.writeFile(\"./js/\" + modulename + \"/registry.js\", 'Object.defineProperty(exports, \"__esModule\", { value: true });exports.default={}');\r\n \r\n             }*/\r\n\r\n\r\n            //update client jassijs.json\r\n            if (!config.modules[modulename])\r\n                config.jsonData.modules[modulename] = modulename;\r\n            await config.saveJSON();\r\n            //this.createRemoteModulIfNeeded(modulename);\r\n\r\n\r\n        } catch (ex) {\r\n            return ex.message;\r\n        }\r\n        return \"\";\r\n\r\n    }\r\n    /**\r\n     * create a file\r\n     * @param filename - the name of the new file \r\n     * @param content - then content\r\n     */\r\n    public async createFile(filename: string, content: string): Promise<string> {\r\n        var newpath = this._pathForFile(filename);\r\n        var parent = this.getDirectoryname(newpath);\r\n\r\n        if (await exists(newpath))\r\n            return filename + \" allready await exists\";\r\n        try {\r\n            if (!await exists(parent))\r\n                await myfs.mkdir(parent, { recursive: true });\r\n\r\n            await myfs.writeFile(newpath, content)\r\n        } catch (ex) {\r\n            return ex.message;\r\n        }\r\n        return \"\";\r\n    }\r\n    /**\r\n     * renames a file or directory\r\n     * @param oldfile - old filename\r\n     * @param newfile - new filename\r\n     */\r\n    public async rename(oldfile: string, newfile: string): Promise<string> {\r\n        var oldpath = this._pathForFile(oldfile);\r\n        var newpath = this._pathForFile(newfile);\r\n        if (!await exists(oldpath))\r\n            return oldfile + \" not await exists\";\r\n        if (await exists(newpath))\r\n            return newfile + \" already await exists\";\r\n        try {\r\n            /*  if(fs.lstatSync(oldpath).isDirectory()\r\n                 await myfs.rmdir((oldpath, newpath);\r\n              else*/\r\n            await myfs.rename(oldpath, newpath);\r\n        } catch (ex) {\r\n            return ex.message;\r\n        }\r\n        await new ServerIndexer().updateRegistry();\r\n        return \"\";\r\n    }\r\n    /**\r\n    * deletes a server module\r\n    * @param modul - to delete\r\n    */\r\n    public async removeServerModul(modul: string): Promise<string> {\r\n        delete config.jsonData.server.modules[modul];\r\n        await config.saveJSON();\r\n        if (await exists(modul)) {\r\n            await myfs.rmdir(modul, { recursive: true });\r\n        }\r\n        return \"\";\r\n    }\r\n    /**\r\n    * deletes a file or directory \r\n    * @param file - old filename\r\n    */\r\n    public async remove(file: string): Promise<string> {\r\n        var path = this._pathForFile(file);\r\n        if (!await exists(path))\r\n            return file + \" not await exists\";\r\n        try {\r\n            if ((await myfs.stat(path)).isDirectory()) {\r\n\r\n                //update client jassijs.json if removing client module \r\n                if (config.modules[file]) {\r\n                    delete config.jsonData.modules[file];\r\n                    await config.saveJSON();\r\n                }\r\n                await myfs.rmdir(path, { recursive: true });\r\n            } else\r\n                await myfs.unlink(path);\r\n        } catch (ex) {\r\n            return ex.message;\r\n        }\r\n        await new ServerIndexer().updateRegistry();\r\n        return \"\";\r\n    }\r\n    /**\r\n     * create modul in ./jassijs.json\r\n     * @param modul \r\n     */\r\n    async createRemoteModulIfNeeded(modul: string) {\r\n        if (!config.jsonData.server.modules[modul]) {\r\n            config.jsonData.server.modules[modul] = modul;\r\n            await config.saveJSON();\r\n        }\r\n    }\r\n    getDirectoryname(ppath) {\r\n        var path = ppath.replaceAll(\"\\\\\", \"/\");\r\n        return path.substring(0, path.lastIndexOf(\"/\"));\r\n    }\r\n    /**\r\n     * save files + \r\n     * transpile remote files and \r\n     * reload the remote files in server if needed \r\n     * update db schema\r\n     * the changes would be reverted if there are errors\r\n     * @param fileNames \r\n     * @param contents \r\n     * @returns \"\" or the error\r\n     */\r\n    public async saveFiles(fileNames: string[], contents: string[], rollbackonerror: boolean = true): Promise<string> {\r\n        var ret: string = \"\";\r\n        var rollbackcontents: string[] = [];\r\n        var modules = config.server.modules;\r\n        var remoteFiles: string[] = [];\r\n        for (var x = 0; x < fileNames.length; x++) {\r\n            let fileName = fileNames[x];\r\n            var fromServerdirectory = fileName.startsWith(\"$serverside/\");\r\n            var path = this.getDirectoryname(this._pathForFile(fileName, fromServerdirectory));// require('path').dirname(this._pathForFile(fileName,fromServerdirectory));\r\n            //check if file is node_module\r\n            for (var key in modules) {\r\n                if (((path + \"/\").startsWith(\"./client/\" + key + \"/\")) && await exists(\"./node_modules/\" + key)) {\r\n                    return \"packages in node_modules could not be saved\";\r\n                }\r\n            }\r\n\r\n            try {\r\n\r\n                await myfs.mkdir(path, { recursive: true });\r\n            } catch (err) {\r\n\r\n            }\r\n            if (await exists(this._pathForFile(fileName, fromServerdirectory))) {\r\n                rollbackcontents.push(await myfs.readFile(this._pathForFile(fileName, fromServerdirectory), 'utf-8'));\r\n            } else {\r\n                rollbackcontents.push(undefined);//this file would be killed at revert\r\n            }\r\n            if (contents[x] === undefined)\r\n                await myfs.unlink(this._pathForFile(fileName, fromServerdirectory));//remove file on revert\r\n            else {\r\n                await myfs.writeFile(this._pathForFile(fileName, fromServerdirectory), contents[x]);\r\n                //transpile remoteCode for Server\r\n                let spath = fileName.split(\"/\");\r\n                if ((fromServerdirectory || (spath.length > 1 && spath[1].toLowerCase() === \"remote\")) && fileName.toLowerCase().endsWith(\".ts\")) {\r\n                    var fneu = fileName.replace(\"$serverside/\", \"\");\r\n                    let rpath = this.getDirectoryname(\"./\" + fneu);\r\n                    try {\r\n                        await myfs.mkdir(rpath, { recursive: true });\r\n                    } catch (err) {\r\n                    }\r\n                    await myfs.writeFile(\"./\" + fneu, contents[x]);\r\n                    if (spath.length > 1 && spath[0] !== \"$serverside\")\r\n                        await this.createRemoteModulIfNeeded(spath[0]);\r\n                    transpile(fneu, fromServerdirectory);\r\n                }\r\n            }\r\n        }\r\n        await new ServerIndexer().updateRegistry();\r\n        var remotecodeincluded = false;\r\n        for (var f = 0; f < fileNames.length; f++) {\r\n            var fileName = fileNames[f];\r\n            if (contents[f] === undefined)\r\n                continue;\r\n            var spath = fileName.split(\"/\");\r\n            var fromServerdirectory = fileName.startsWith(\"$serverside/\");\r\n            \r\n            if (fromServerdirectory || (spath.length > 1 && spath[1].toLowerCase() === \"remote\") && fileName.toLowerCase().endsWith(\".ts\")) {\r\n                var remotecodeincluded = true;\r\n                remoteFiles.push(fileName.substring(0, fileName.length - 3));\r\n\r\n                // }\r\n            }\r\n\r\n\r\n        };\r\n\r\n        try {\r\n            if (remotecodeincluded) {\r\n                await reloadJSAll(remoteFiles, async () => {\r\n                    if (runningServerservices[\"db\"]) {\r\n                        (await serverservices.db).renewConnection();\r\n                    }\r\n                });\r\n            }\r\n        } catch (err) {\r\n            var restore = await this.saveFiles(fileNames, rollbackcontents, false);\r\n            console.error(err.stack);\r\n            return err + \"DB corrupt changes are reverted \" + restore;\r\n        }\r\n        if (remotecodeincluded) {\r\n            await registry.reload();\r\n        }\r\n        if (remotecodeincluded && rollbackonerror) {//verify DB-Schema\r\n            try {\r\n                await serverservices.db;\r\n            } catch (err) {\r\n                var restore = await this.saveFiles(fileNames, rollbackcontents, false);\r\n                console.error(err.stack);\r\n                return err + \"DB corrupt changes are reverted \" + restore;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    public async saveFile(fileName: string, content: string) {\r\n        try {\r\n            var fdir = this.getDirectoryname(this._pathForFile(fileName));\r\n            // var fdir = path.substring(0,path.lastIndexOf(\"/\"));//fpath.dirname(path).split(fpath.sep).pop();\r\n            await myfs.mkdir(fdir, { recursive: true });\r\n        } catch (err) {\r\n\r\n        }\r\n        await myfs.writeFile(this.path + \"/\" + fileName, content)\r\n        /*\r\n        if(fileName.endsWith(\".ts\")){\r\n            new Compile().transpile(fileName,function(done){\r\n                var kk=Compile.lastModifiedTSFiles[0]; \r\n                if(Compile.lastModifiedTSFiles.indexOf(fileName)>-1){\r\n                    var pos=Compile.lastModifiedTSFiles.indexOf(fileName);\r\n                    Compile.lastModifiedTSFiles.splice(pos, 1);\r\n                }\r\n                response.send(done)\r\n                \r\n            });\r\n            return;\r\n             }*/\r\n        await new ServerIndexer().updateRegistry();\r\n        //TODO $this->updateRegistry();\r\n    }\r\n}\r\n","//synchronize-server-client\r\nimport { JassiError } from \"jassijs/remote/Classes\";\r\nimport { config } from \"jassijs/remote/Config\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\nimport { ts } from 'jassijs/server/NativeAdapter';\r\n\r\n\r\nexport abstract class Indexer {\r\n\r\n    abstract fileExists(name);\r\n    abstract readFile(name);\r\n    abstract getFileTime(name);\r\n    abstract createDirectory(name);\r\n    abstract writeFile(name: string, content: string);\r\n    abstract dirFiles(modul: string, path: string, extensions: string[], ignore: string[]): Promise<string[]>;\r\n\r\n    public async updateModul(root, modul: string, isserver: boolean) {\r\n        var path = root + (root === \"\" ? \"\" : \"/\") + modul;\r\n        //create empty if needed\r\n        var text = \"{}\";\r\n        if (await this.fileExists(path + \"/registry.js\")) {\r\n            text = await this.readFile(path + \"/registry.js\");\r\n \r\n            if (!isserver) {\r\n                text = text.substring(text.indexOf(\"default:\") + 8);\r\n                text = text.substring(0, text.lastIndexOf(\"}\") - 1);\r\n                text = text.substring(0, text.lastIndexOf(\"}\") - 1);\r\n            } else {\r\n                text = text.substring(text.indexOf(\"default=\") + 8);\r\n            }\r\n        }\r\n        try {\r\n            var index = JSON.parse(text);\r\n        } catch { \r\n            console.log(\"error read modul \" + modul + \"- create new\");\r\n            index = {};\r\n        }\r\n\r\n        //remove deleted files\r\n        for (var key in index) {\r\n            if (!(await this.fileExists(root + (root === \"\" ? \"\" : \"/\") + key))) {\r\n                delete index[key];\r\n            }\r\n        }\r\n\r\n        var jsFiles: string[] = await this.dirFiles(modul, path, [\".ts\"], [\"node_modules\"])\r\n        for (let x = 0; x < jsFiles.length; x++) {\r\n            var jsFile = jsFiles[x];\r\n            var fileName = jsFile.substring((root.length + (root === \"\" ? 0 : 1)));\r\n            if (fileName === undefined)\r\n                continue;\r\n            var entry = index[fileName];\r\n            if (entry === undefined) {\r\n                entry = {};\r\n                entry.date = undefined;\r\n                index[fileName] = entry;\r\n            }\r\n            if (await this.fileExists(root + (root === \"\" ? \"\" : \"/\") + fileName)) {\r\n\r\n                var dat = await this.getFileTime(root + (root === \"\" ? \"\" : \"/\") + fileName)\r\n                if (dat !== entry.date) {\r\n                    var text = <string>await this.readFile(root + (root === \"\" ? \"\" : \"/\") + fileName);\r\n                    var sourceFile = ts.createSourceFile('hallo.ts', text, ts.ScriptTarget.ES5, true);\r\n                    var outDecorations = [];\r\n                    entry = {};\r\n                    entry.date = undefined;\r\n                    index[fileName] = entry;\r\n                    this.collectAnnotations(sourceFile, entry);\r\n                    // findex(Filesystem.path + \"/\" + jsFile);\r\n                    entry.date = dat;\r\n                }\r\n            }\r\n        }\r\n        if (!isserver) {//write client\r\n\r\n            var text = JSON.stringify(index, undefined, \"\\t\");\r\n            text = \"//this file is autogenerated don't modify\\n\" +\r\n                'define(\"' + modul + '/registry\",[\"require\"], function(require) {\\n' +\r\n                ' return {\\n' +\r\n                '  default: ' + text + \"\\n\" +\r\n                ' }\\n' +\r\n                '});';\r\n            var jsdir = \"js/\" + path;\r\n            var fpath=(await (serverservices.filesystem)).path;\r\n            if (fpath !== undefined)\r\n                jsdir = path.replace(fpath, fpath + \"/js\");\r\n            if (!(await this.fileExists(jsdir)))\r\n                await this.createDirectory(jsdir);\r\n            await this.writeFile(jsdir + \"/registry.js\", text);\r\n            await this.writeFile(path + \"/registry.js\", text);\r\n        } else { //write server\r\n            var modules = config.server.modules;\r\n            for (let smodul in modules) {\r\n                if (modul === smodul) {\r\n                    var text = JSON.stringify(index, undefined, \"\\t\");\r\n                    if (text !== \"{}\") { \r\n                        text = '\"use strict:\"\\n' +\r\n                            \"//this file is autogenerated don't modify\\n\" +\r\n                            'Object.defineProperty(exports, \"__esModule\", { value: true });\\n' +\r\n                            'exports.default=' + text;\r\n                        var jsdir = \"js/\" + modul;\r\n                        if (!(await this.fileExists(jsdir)))\r\n                            await this.createDirectory(jsdir);\r\n                        await this.writeFile(jsdir + \"/registry.js\", text);\r\n                        await this.writeFile(modul + \"/registry.js\", text);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    convertArgument(arg: any) {\r\n        if (arg === undefined)\r\n            return undefined;\r\n        if (arg.kind === ts.SyntaxKind.ObjectLiteralExpression) {\r\n            var ret = {};\r\n            var props = arg.properties;\r\n            if (props !== undefined) {\r\n                for (var p = 0; p < props.length; p++) {\r\n                    ret[props[p].name.text] = this.convertArgument(props[p].initializer);\r\n                }\r\n            }\r\n            return ret;\r\n        } else if (arg.kind === ts.SyntaxKind.StringLiteral) {\r\n            return arg.text;\r\n        } else if (arg.kind === ts.SyntaxKind.ArrayLiteralExpression) {\r\n            let ret = [];\r\n            for (var p = 0; p < arg.elements.length; p++) {\r\n                ret.push(this.convertArgument(arg.elements[p]));\r\n            }\r\n            return ret;\r\n        } else if (arg.kind === ts.SyntaxKind.Identifier) {\r\n            return arg.text;\r\n        } else if (arg.kind === ts.SyntaxKind.TrueKeyword) {\r\n            return true;\r\n        } else if (arg.kind === ts.SyntaxKind.FalseKeyword) {\r\n            return false;\r\n        } else if (arg.kind === ts.SyntaxKind.NumericLiteral) {\r\n            return Number(arg.text);\r\n        } else if (arg.kind === ts.SyntaxKind.ArrowFunction || arg.kind === ts.SyntaxKind.FunctionExpression) {\r\n            return \"function\";\r\n        }\r\n\r\n        throw new JassiError(\"Error typ not found\");\r\n    }\r\n    collectAnnotations(node: ts.Node, outDecorations, depth = 0) {\r\n        //console.log(new Array(depth + 1).join('----'), node.kind, node.pos, node.end);\r\n        if (node.kind === ts.SyntaxKind.ClassDeclaration) {\r\n            if (node.decorators !== undefined) {\r\n                var dec = {};\r\n                var sclass = undefined;\r\n                for (let x = 0; x < node.decorators.length; x++) {\r\n                    var decnode = node.decorators[x];\r\n                    var ex: any = decnode.expression;\r\n                    if (ex.expression === undefined) {\r\n                        dec[ex.text] = [];//Annotation without parameter\r\n                    } else {\r\n                        if (ex.expression.text === \"$Class\")\r\n                            sclass = this.convertArgument(ex.arguments[0]);\r\n                        else {\r\n                            if (dec[ex.expression.text] === undefined) {\r\n                                dec[ex.expression.text] = [];\r\n                            }\r\n                            for (var a = 0; a < ex.arguments.length; a++) {\r\n                                dec[ex.expression.text].push(this.convertArgument(ex.arguments[a]));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (sclass !== undefined)\r\n                    outDecorations[sclass] = dec;\r\n                //@members.value.$Property=[{name:string}]\r\n                for (let x = 0; x < node[\"members\"].length; x++) {\r\n                    var member = node[\"members\"][x];\r\n                    var membername = node[\"members\"][x].name?.escapedText;\r\n                    if (member.decorators !== undefined) {\r\n                        if (!dec[\"@members\"])\r\n                            dec[\"@members\"] = {}\r\n\r\n                        var decm = {};\r\n                        dec[\"@members\"][membername] = decm;\r\n                        for (let x = 0; x < member.decorators.length; x++) {\r\n                            var decnode = member.decorators[x];\r\n                            var ex: any = decnode.expression;\r\n\r\n                            if (ex.expression === undefined) {\r\n                                decm[ex.text] = [];//Annotation without parameter\r\n                            } else {\r\n                                if (ex.expression.text === \"$Property\") {\r\n                                    //do nothing;\r\n                                }else{\r\n                                    if (decm[ex.expression.text] === undefined) {\r\n                                        decm[ex.expression.text] = [];\r\n                                    }\r\n                                    for (var a = 0; a < ex.arguments.length; a++) {\r\n                                        decm[ex.expression.text].push(this.convertArgument(ex.arguments[a]));\r\n                                    }\r\n                                } \r\n                            }\r\n                        }  \r\n                        if(Object.keys(dec[\"@members\"][membername]).length===0){\r\n                            delete dec[\"@members\"][membername];\r\n                        }\r\n                    }\r\n                    \r\n\r\n                }\r\n\r\n            }\r\n        }\r\n        depth++;\r\n        node.getChildren().forEach(c => this.collectAnnotations(c, outDecorations, depth));\r\n    }\r\n    /*findex(file: string) {\r\n        var text = fs.readFileSync(file).toString();\r\n        var sourceFile = ts.createSourceFile('hallo.ts', text, ts.ScriptTarget.ES5, true);\r\n        var outDecorations = [];\r\n        this.collectAnnotations(sourceFile, outDecorations);\r\n        var h = 9;\r\n    }*/\r\n}\r\n","\r\nimport { Context } from \"jassijs/remote/RemoteObject\";\r\nimport { RemoteProtocol } from \"jassijs/remote/RemoteProtocol\";\r\nimport { Server } from \"jassijs/remote/Server\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\n//@ts-ignore\r\nimport  {getJSON} from \"js-cookie\";\r\nimport { remoteProtocol } from \"jassijs/server/DoRemoteProtocol\";\r\n\r\n\r\nexport async function messageReceived(param) {\r\n\r\n    var config = param.data;\r\n    var cookies = getJSON();\r\n    var myRequest = {\r\n        cookies,\r\n        rawBody:JSON.stringify(config.data),\r\n        user: {\r\n            isAdmin: true,\r\n            user: 1\r\n        }\r\n        \r\n    };\r\n    await remoteProtocol(myRequest,{\r\n        send(msg){\r\n            navigator.serviceWorker.controller.postMessage({ type: 'RESPONSE_REMOTEPROTCOL', id: config.id, data: msg });\r\n        }\r\n    });\r\n  /*  var debugservermethods = [];//[\"saveFiles\", \"dir\"];//[\"dir\"];//for testing run on server\r\n    if (debugservermethods.indexOf(data.method) > -1) {\r\n        navigator.serviceWorker.controller.postMessage({ type: 'RESPONSE_REMOTEPROTCOL', id: config.id, data: \"***POST_TO_SERVER***\" });\r\n        return;\r\n    }\r\n\r\n    \r\n    var data = config.data;\r\n    var clname = data.classname;\r\n    var classes = (await import(\"jassijs/remote/Classes\")).classes;\r\n    var DBObject = await classes.loadClass(\"jassijs.remote.DBObject\");\r\n    var ret;\r\n\r\n    {\r\n        var sret = await localExec(data);\r\n        ret = new RemoteProtocol().stringify(sret);\r\n        if (ret === undefined)\r\n            ret = \"$$undefined$$\";\r\n    }*/\r\n\r\n    \r\n}\r\n\r\n//var stest = '{\"url\":\"remoteprotocol?1682187030801\",\"type\":\"post\",\"dataType\":\"text\",\"data\":\"{\\\\\"__clname__\\\\\":\\\\\"jassijs.remote.RemoteProtocol\\\\\",\\\\\"classname\\\\\":\\\\\"de.remote.MyRemoteObject\\\\\",\\\\\"_this\\\\\":{\\\\\"__clname__\\\\\":\\\\\"de.remote.MyRemoteObject\\\\\",\\\\\"__refid__\\\\\":1},\\\\\"parameter\\\\\":[\\\\\"Kurt\\\\\"],\\\\\"method\\\\\":\\\\\"sayHello\\\\\",\\\\\"__refid__\\\\\":0}\"}';\r\n\r\n//var config = JSON.parse(stest);\r\nexport async function test() {\r\n    var jj = await new Server().zip(\"\");\r\n    // var gg=await texec(config, undefined);\r\n    // debugger;\r\n}\r\n/*async function texec(config, object) {\r\n    return await new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('POST', config.url, true);\r\n        xhr.setRequestHeader(\"Content-Type\", \"text\");\r\n\r\n        xhr.onload = function (data) {\r\n            if (this.status === 200)\r\n                resolve(this.responseText);\r\n            else\r\n                reject(this);\r\n        };\r\n\r\n        xhr.send(config.data);\r\n        xhr.onerror = function (data) {\r\n            reject(data);\r\n        };\r\n    }\r\n    );\r\n    //return await $.ajax(config, object);\r\n}\r\nRemoteProtocol.prototype.exec2 = async function (config, ob) {\r\n    var clname = JSON.parse(config.data).classname;\r\n    var classes = (await import(\"jassijs/remote/Classes\")).classes;\r\n    var DBObject = await classes.loadClass(\"jassijs.remote.DBObject\");\r\n    var ret;\r\n\r\n    var data = JSON.parse(config.data);\r\n    var debugservermethods = [];//[\"dir\"];//for testing run on server\r\n    if (debugservermethods.indexOf(data.method) > -1) {\r\n        ret = await $.ajax(config);\r\n    } else {\r\n        var sret = await localExec(data);\r\n        ret = new RemoteProtocol().stringify(sret);\r\n        if (ret === undefined)\r\n            ret = \"$$undefined$$\";\r\n    }\r\n  \r\n    return ret;\r\n}*/\r\nexport async function localExec(prot: RemoteProtocol, context: Context = undefined) {\r\n    var classes = (await import(\"jassijs/remote/Classes\")).classes;\r\n    var p = new RemoteProtocol();\r\n\r\n    var C = await classes.loadClass(prot.classname);\r\n    if (context === undefined) {\r\n\r\n        context = {\r\n            isServer: true,\r\n            request: {\r\n                user: {\r\n                    isAdmin: true,\r\n                    user: 1\r\n                }\r\n            }\r\n        };\r\n        var Cookies = (await import(\"jassijs/util/Cookies\")).Cookies;\r\n        if (Cookies.get(\"simulateUser\") && Cookies.get(\"simulateUserPassword\")) {\r\n            var man = await serverservices.db;\r\n            var user = await man.login(context, Cookies.get(\"simulateUser\"), Cookies.get(\"simulateUserPassword\"));\r\n            if (user === undefined) {\r\n                throw Error(\"simulated login failed\")\r\n            } else {\r\n                context.request.user.user = user.id;\r\n                context.request.user.isAdmin = user.isAdmin ? true : false;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    if (prot._this === \"static\") {\r\n        try {\r\n            //await checkSimulateUser(request);\r\n            if (prot.parameter === undefined)\r\n                ret = await (C[prot.method](context));\r\n            else\r\n                ret = await (C[prot.method](...prot.parameter, context));\r\n        } catch (ex) {\r\n            console.error(ex.stack);\r\n            var msg = ex.message;\r\n            if (!msg)\r\n                msg = ex;\r\n            if (!ex)\r\n                ex = \"\";\r\n            ret = {\r\n                \"**throw error**\": msg\r\n            }\r\n        }\r\n        //var s = new RemoteProtocol().stringify(ret);\r\n\r\n        return ret;\r\n    } else {\r\n        var obj = new C();\r\n        //if(runAfterCreation){\r\n        //    obj=runAfterCreation(obj);\r\n        //}\r\n        if (prot._this !== undefined)\r\n            Object.assign(obj, prot._this);\r\n        var ret = undefined;\r\n        try {\r\n            //await checkSimulateUser(request);\r\n            if (prot.parameter === undefined)\r\n                ret = await (obj[prot.method](context));\r\n            else\r\n                ret = await (obj[prot.method](...prot.parameter, context));\r\n        } catch (ex) {\r\n            console.error(ex.stack);\r\n            var msg = ex.message;\r\n            if (!msg)\r\n                msg = ex;\r\n            if (!ex)\r\n                ex = \"\";\r\n            ret = {\r\n                \"**throw error**\": msg\r\n            }\r\n        }\r\n        //var s = new RemoteProtocol().stringify(ret);\r\n        return ret;\r\n    }\r\n}\r\n","import { $Class } from \"jassijs/remote/Registry\";\r\n//@ts-ignore\r\nimport { EntitySubscriberInterface, EventSubscriber, InsertEvent, RemoveEvent, UpdateEvent } from \"typeorm\";\r\nimport Filesystem from \"jassijs/server/Filesystem\";\r\nimport { Reloader } from \"jassijs/util/Reloader\";\r\nimport registry from \"jassijs/remote/Registry\";\r\nimport { serverservices } from \"jassijs/remote/Serverservice\";\r\nimport { myfs } from \"./NativeAdapter\";\r\n\r\n\r\n//listener for code changes\r\nReloader.instance.addEventCodeReloaded(async function (files: string[]) {\r\n    var dbobjects = await registry.getJSONData(\"$DBObject\");\r\n    var reload = false;\r\n    for (var x = 0; x < files.length; x++) {\r\n        var file = files[x];\r\n        dbobjects.forEach((data) => {\r\n            if (data.filename === file+\".ts\")\r\n                reload = true;\r\n        });\r\n    }\r\n    if(reload){\r\n        (await serverservices.db).renewConnection();\r\n    }\r\n});\r\n\r\n@EventSubscriber()\r\n@$Class(\"jassijs.server.TypeORMListener\")\r\nexport class TypeORMListener implements EntitySubscriberInterface {\r\n    savetimer;\r\n    saveDB(event) {\r\n        if (this.savetimer) {\r\n            clearTimeout(this.savetimer);\r\n            this.savetimer = undefined;\r\n        }\r\n        this.savetimer = setTimeout(() => {\r\n            var data = event.connection.driver.export();\r\n            myfs.writeFile(\"./client/__default.db\",data);\r\n            console.log(\"save DB\");\r\n        }, 300);\r\n\r\n    }\r\n    /**\r\n     * Called after entity is loaded.\r\n     */\r\n    afterLoad(entity: any) {\r\n        // console.log(`AFTER ENTITY LOADED: `, entity);\r\n    }\r\n\r\n    /**\r\n     * Called before post insertion.\r\n     */\r\n    beforeInsert(event: InsertEvent<any>) {\r\n        //console.log(`BEFORE POST INSERTED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called after entity insertion.\r\n     */\r\n    afterInsert(event: InsertEvent<any>) {\r\n        this.saveDB(event);\r\n        //console.log(`AFTER ENTITY INSERTED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called before entity update.\r\n     */\r\n    beforeUpdate(event: UpdateEvent<any>) {\r\n        //console.log(`BEFORE ENTITY UPDATED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called after entity update.\r\n     */\r\n    afterUpdate(event: UpdateEvent<any>) {\r\n        this.saveDB(event);\r\n        //console.log(`AFTER ENTITY UPDATED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called before entity removal.\r\n     */\r\n    beforeRemove(event: RemoveEvent<any>) {\r\n        // console.log(`BEFORE ENTITY WITH ID ${event.entityId} REMOVED: `, event.entity);\r\n    }\r\n\r\n    /**\r\n     * Called after entity removal.\r\n     */\r\n    afterRemove(event: RemoveEvent<any>) {\r\n        //  console.log(`AFTER ENTITY WITH ID ${event.entityId} REMOVED: `, event.entity);\r\n        this.saveDB(event);\r\n    }\r\n\r\n    /**\r\n     * Called before transaction start.\r\n     */\r\n    beforeTransactionStart(event) {\r\n        // console.log(`BEFORE TRANSACTION STARTED: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called after transaction start.\r\n     */\r\n    afterTransactionStart(event/*: TransactionStartEvent*/) {\r\n        //console.log(`AFTER TRANSACTION STARTED: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called before transaction commit.\r\n     */\r\n    beforeTransactionCommit(event/*: TransactionCommitEvent*/) {\r\n        // console.log(`BEFORE TRANSACTION COMMITTED: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called after transaction commit.\r\n     */\r\n    afterTransactionCommit(event/*: TransactionCommitEvent*/) {\r\n        //console.log(`AFTER TRANSACTION COMMITTED: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called before transaction rollback.\r\n     */\r\n    beforeTransactionRollback(event/*: TransactionRollbackEvent*/) {\r\n        //   console.log(`BEFORE TRANSACTION ROLLBACK: `, event);\r\n    }\r\n\r\n    /**\r\n     * Called after transaction rollback.\r\n     */\r\n    afterTransactionRollback(event/*: TransactionRollbackEvent*/) {\r\n        // console.log(`AFTER TRANSACTION ROLLBACK: `, event);\r\n    }\r\n\r\n}","import { classes } from \"jassijs/remote/Classes\";\r\nimport { db } from \"jassijs/remote/Database\";\r\nimport registry from \"jassijs/remote/Registry\";\r\nimport { DBManager } from \"./DBManager\";\r\nimport { TypeORMListener } from \"./TypeORMListener\";\r\nimport {EventSubscriber} from \"typeorm\";\r\nimport { myfs } from \"./NativeAdapter\";\r\n\r\nexport function extendDBManager(){\r\n      //create Admin User if doesn't a user exists \r\n      DBManager.prototype[\"hasLoaded\"] = async function () {\r\n        var User = await classes.loadClass(\"jassijs.security.User\");\r\n        //@ts-ignore\r\n        var us =<any> User.findOne();\r\n        if (us) {\r\n            us = new User();\r\n            us.email = \"admin\";\r\n            us.password = \"jassi\";\r\n            us.isAdmin = true;\r\n            await us.save();\r\n        }\r\n\r\n    }\r\n    DBManager.prototype[\"login\"] = async function (context, user, password) {\r\n        try {\r\n            var User = await classes.loadClass(\"jassijs.security.User\");\r\n            var ret = await this.connection().manager.createQueryBuilder().\r\n                select(\"me\").from(User, \"me\").addSelect(\"me.password\").\r\n                andWhere(\"me.email=:email\", { email: user });\r\n\r\n            var auser = await ret.getOne();\r\n            if (!auser || !password)\r\n                return undefined;\r\n            if (auser.password === password) {\r\n                delete auser.password;\r\n                return auser;\r\n            }\r\n        } catch (err) {\r\n            err=err;\r\n        }\r\n        return undefined;\r\n    }\r\n    //@ts-ignore\r\n    DBManager[\"getConOpts\"] = async function () {\r\n        var dbclasses = []; \r\n        const initSqlJs = window[\"SQL\"];\r\n        const SQL = await window[\"SQL\"]({\r\n            // Required to load the wasm binary asynchronously. Of course, you can host it wherever you want\r\n            // You can omit locateFile completely when running in node\r\n            locateFile: file => `https://sql.js.org/dist/${file}`\r\n        });\r\n\r\n        var dbobjects = await registry.getJSONData(\"$DBObject\");\r\n        var dbfiles = [];\r\n        for (var o = 0; o < dbobjects.length; o++) {\r\n            var clname = dbobjects[o].classname;\r\n            try {\r\n                dbfiles.push(dbobjects[o].filename.replace(\".ts\", \"\"));\r\n                dbclasses.push(await classes.loadClass(clname));\r\n            } catch (err) {\r\n                console.log(err);\r\n                throw err;\r\n            }\r\n        }\r\n        //@ts-ignore\r\n        DBManager.clearMetadata();\r\n        db.fillDecorators();\r\n        var tcl = await classes.loadClass(\"jassijs.server.TypeORMListener\");\r\n       //@ts-ignore \r\n        new EventSubscriber()(tcl);\r\n        var Filesystem = await classes.loadClass(\"jassijs.server.Filesystem\");\r\n        \r\n        var data=await myfs.readFile(\"./client/__default.db\");\r\n\r\n        var opt = {\r\n            database: data,\r\n            type: \"sqljs\",\r\n            subscribers: [TypeORMListener],\r\n            \"entities\": dbclasses\r\n        };\r\n        return opt;\r\n    }\r\n}","import { beforeServiceLoad, serverservices } from \"jassijs/remote/Serverservice\";\r\nimport { messageReceived } from \"./LocalProtocol\";\r\n\r\n//\r\n\r\n \r\nvar load=serverservices;\r\n//throw new Error(\"Kkk\"); \r\nnavigator.serviceWorker.controller.postMessage({\r\n    type: 'ACTIVATE_REMOTEPROTCOL'\r\n});\r\nnavigator.serviceWorker.addEventListener(\"message\", (evt) => {\r\n    var _a;\r\n    if (((_a = evt.data) === null || _a === void 0 ? void 0 : _a.type) === \"REQUEST_REMOTEPROTCOL\") {\r\n       \r\n        messageReceived(evt);\r\n       \r\n       \r\n    }\r\n});\r\nbeforeServiceLoad(async (name, service) => {\r\n    if (name === \"db\") {\r\n        var man=(await import(\"jassijs/server/DBManagerExt\"))\r\n        man.extendDBManager();\r\n    }\r\n});\r\nvar ret={\r\n    //search for file in local-DB and undefine this files \r\n    //so this files could be loaded from local-DB\r\n    autostart: async function () {\r\n        var Filesystem=(await import(\"jassijs/server/Filesystem\")).default;\r\n        var files = await new Filesystem().dirFiles(\"\", [\"js\", \"ts\"]);\r\n        files.forEach((fname) => {\r\n            if (!fname.startsWith(\"js/\")) {\r\n                var name = fname.substring(0, fname.length - 3);\r\n                requirejs.undef(name);\r\n            }\r\n\r\n        });\r\n    }\r\n}\r\nexport default {ret};\r\nrequirejs.undef(\"jassijs/util/DatabaseSchema\");\r\n\r\ndefine(\"jassijs/util/DatabaseSchema\", [\"jassijs/server/DatabaseSchema\"], function (to) {\r\n    return to;\r\n});\r\n/*define(\"jassijs/server/DoRemoteProtocol\", [\"jassijs/server/LocalProtocol\"], function (locprot) {\r\n    return {\r\n        _execute: async function (protext, request, context) {\r\n            var prot = JSON.parse(protext);\r\n            return await locprot.localExec(prot, context);\r\n        }\r\n    }\r\n})*/\r\n/*\r\ndefine(\"jassijs/server/Filesystem\", [\"jassijs/server/Filesystem\"], function (fs) {\r\n    return fs\r\n\r\n})*/\r\n\r\n\r\n//DatabaseSchema","import { Column, PrimaryColumn } from \"jassijs/util/DatabaseSchema\";\r\nimport { Entity} from \"jassijs/util/DatabaseSchema\";\r\nimport { $DBObject } from \"jassijs/remote/DBObject\";\r\nimport { $Class } from \"jassijs/remote/Registry\";\r\n\r\n@$DBObject()\r\n@$Class(\"Testuser\")\r\nexport class Testuser{\r\n     @PrimaryColumn()\r\n    id: number;\r\n    @Column()\r\n    firstname: string;\r\n    @Column()\r\n    lastname: string; \r\n}","export {};","\r\n/// <amd-dependency path=\"jszip\" name=\"JSZip\"/>\r\ndeclare var JSZip;\r\n\r\nJSZip.support.nodebuffer = undefined;//we hacked window.Buffer\r\nexport default JSZip;\r\n","\r\n\r\n/*\r\n\r\n/// <amd-dependency path=\"typeorm/index\" name=\"to\"/>\r\n/// <amd-dependency path=\"typeorm/platform/PlatformTools\" name=\"pf\"/>\r\n/// <amd-dependency path=\"window.SQL\" name=\"sql\"/>\r\n/// <amd-dependency path=\"reflect-metadata\" name=\"buffer\"/>\r\ndeclare var to;\r\n\r\n//define(\"typeorm\",[\"typeorm/index\",\"typeorm/platform/PlatformTools\",\"window.SQL\",\"reflect-metadata\"],function(to,pf,sql,buffer){\r\n\r\n\r\n\r\n//\"buffer\":\"https://cdn.jsdelivr.net/npm/buffer@6.0.3/index\",\r\nwindow.Buffer=class Buffer{\r\n    static isBuffer(ob){\r\n        return false;\r\n    }\r\n}\r\nwindow.global=window;\r\n\r\n   pf.PlatformTools.type=\"browser\";\r\n    window.SQL=sql;\r\n    \r\n    export {to};\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\ndefine(\"sha.js\",[],()=>{return {};});\r\ndefine(\"dotenv\",[],()=>{return {};});\r\ndefine(\"chalk\",[],()=>{return {};});\r\ndefine(\"cli-highlight\",[],()=>{return {};});\r\ndefine(\"events\",[],()=>{return {};});\r\ndefine(\"stream\",[],()=>{return {};});\r\ndefine(\"mkdirp\",[],()=>{return {};});\r\ndefine(\"glob\",[],()=>{return {};});\r\ndefine(\"app-root-path\",[],()=>{return {};});\r\ndefine(\"debug\",[],()=>{return {};});\r\ndefine(\"js-yaml\",[],()=>{return {};});\r\ndefine(\"xml2js\",[],()=>{return {};});\r\ndefine(\"path\",[],()=>{return {};});\r\ndefine(\"fs\",[],()=>{return {};});\r\n\r\n//\"buffer\":\"https://cdn.jsdelivr.net/npm/buffer@6.0.3/index\",\r\nwindow.Buffer=class Buffer{\r\n    static isBuffer(ob){\r\n        return false;\r\n    }\r\n}\r\nwindow.global=window;\r\n\r\ndefine(\"typeorm\",[\"typeorm/index\",\"typeorm/platform/PlatformTools\",\"window.SQL\",\"reflect-metadata\"],function(to,pf,sql,buffer){\r\n    pf.PlatformTools.type=\"browser\";\r\n    window.SQL=sql;\r\n    \r\n    return to;\r\n\r\n});\r\n"]}