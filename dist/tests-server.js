var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
//this file is autogenerated don't modify
define("tests/registry", ["require"], function (require) {
    return {
        default: {
            "tests/remote/T.ts": {
                "date": 1681570950000,
                "tests.remote.T": {}
            },
            "tests/remote/TestBigData.ts": {
                "date": 1656620694000,
                "tests.TestBigData": {
                    "$DBObject": [],
                    "@members": {
                        "id": {
                            "PrimaryGeneratedColumn": []
                        },
                        "name": {
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "name2": {
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "number1": {
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "number2": {
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        }
                    }
                }
            },
            "tests/remote/TestCustomer.ts": {
                "date": 1656073036000,
                "tests.TestCustomer": {
                    "$ParentRights": [
                        [
                            {
                                "name": "TestCustomers",
                                "sqlToCheck": "me.id>=:i1 and me.id<=:i2",
                                "description": {
                                    "text": "TestCustomer",
                                    "i1": "from",
                                    "i2": "to"
                                }
                            }
                        ]
                    ],
                    "$DBObject": [],
                    "@members": {
                        "id": {
                            "PrimaryColumn": []
                        },
                        "name": {
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "orders": {
                            "OneToMany": [
                                "function",
                                "function"
                            ]
                        }
                    }
                }
            },
            "tests/remote/TestOrder.ts": {
                "date": 1656073024000,
                "tests.TestOrder": {
                    "$DBObject": [],
                    "@members": {
                        "id": {
                            "PrimaryColumn": []
                        },
                        "customer": {
                            "$CheckParentRight": [],
                            "ManyToOne": [
                                "function"
                            ]
                        },
                        "details": {
                            "OneToMany": [
                                "function",
                                "function"
                            ]
                        }
                    }
                }
            },
            "tests/remote/TestOrderDetails.ts": {
                "date": 1656073238000,
                "tests.TestOrderDetails": {
                    "$DBObject": [],
                    "@members": {
                        "id": {
                            "PrimaryColumn": []
                        },
                        "Order": {
                            "$CheckParentRight": [],
                            "ManyToOne": [
                                "function",
                                "function"
                            ]
                        }
                    }
                }
            },
            "tests/remote/TestServerfile.ts": {
                "date": 1624999038000
            }
        }
    };
});
define("tests/remote/T", ["require", "exports", "jassijs/remote/Registry", "jassijs/remote/RemoteObject", "jassijs/remote/Server"], function (require, exports, Registry_1, RemoteObject_1, Server_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test2 = exports.test = exports.T = void 0;
    let T = class T extends RemoteObject_1.RemoteObject {
        //this is a sample remote function
        async sayHello(name, context = undefined) {
            if (!(context === null || context === void 0 ? void 0 : context.isServer)) {
                return await this.call(this, this.sayHello, name, context);
            }
            else {
                //@ts-ignore
                var H = await new Promise((resolve_1, reject_1) => { require(["Hallo"], resolve_1, reject_1); });
                return "Hello " + name + H.test(); //this would be execute on server  
            }
        }
    };
    T = __decorate([
        Registry_1.$Class("tests.remote.T")
    ], T);
    exports.T = T;
    async function test() {
        await new Server_1.Server().saveFile("Hallo.ts", "export class Hallo{};export function test(){return 2 };");
        console.log(await new T().sayHello("Kurt"));
    }
    exports.test = test;
    async function test2() {
    }
    exports.test2 = test2;
});
define("tests/remote/TestBigData", ["require", "exports", "jassijs/remote/DBObject", "jassijs/remote/Registry", "jassijs/util/DatabaseSchema"], function (require, exports, DBObject_1, Registry_2, DatabaseSchema_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TestBigData = void 0;
    let TestBigData = class TestBigData extends DBObject_1.DBObject {
        constructor() {
            super();
        }
    };
    __decorate([
        DatabaseSchema_1.PrimaryGeneratedColumn(),
        __metadata("design:type", Number)
    ], TestBigData.prototype, "id", void 0);
    __decorate([
        DatabaseSchema_1.Column({ nullable: true }),
        __metadata("design:type", String)
    ], TestBigData.prototype, "name", void 0);
    __decorate([
        DatabaseSchema_1.Column({ nullable: true }),
        __metadata("design:type", String)
    ], TestBigData.prototype, "name2", void 0);
    __decorate([
        DatabaseSchema_1.Column({ nullable: true }),
        __metadata("design:type", Number)
    ], TestBigData.prototype, "number1", void 0);
    __decorate([
        DatabaseSchema_1.Column({ nullable: true }),
        __metadata("design:type", Number)
    ], TestBigData.prototype, "number2", void 0);
    TestBigData = __decorate([
        DBObject_1.$DBObject(),
        Registry_2.$Class("tests.TestBigData"),
        __metadata("design:paramtypes", [])
    ], TestBigData);
    exports.TestBigData = TestBigData;
});
define("tests/remote/TestCustomer", ["require", "exports", "tests/remote/TestOrder", "jassijs/remote/DBObject", "jassijs/remote/Registry", "jassijs/util/DatabaseSchema", "jassijs/remote/security/Rights"], function (require, exports, TestOrder_1, DBObject_2, Registry_3, DatabaseSchema_2, Rights_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test = exports.TestCustomer = void 0;
    let TestCustomer = class TestCustomer extends DBObject_2.DBObject {
        constructor() {
            super();
        }
    };
    __decorate([
        DatabaseSchema_2.PrimaryColumn(),
        __metadata("design:type", Number)
    ], TestCustomer.prototype, "id", void 0);
    __decorate([
        DatabaseSchema_2.Column({ nullable: true }),
        __metadata("design:type", String)
    ], TestCustomer.prototype, "name", void 0);
    __decorate([
        DatabaseSchema_2.OneToMany(type => TestOrder_1.TestOrder, order => order.customer),
        __metadata("design:type", Array)
    ], TestCustomer.prototype, "orders", void 0);
    TestCustomer = __decorate([
        Rights_1.$ParentRights([{ name: "TestCustomers", sqlToCheck: "me.id>=:i1 and me.id<=:i2",
                description: {
                    text: "TestCustomer",
                    i1: "from",
                    i2: "to"
                } }]),
        DBObject_2.$DBObject(),
        Registry_3.$Class("tests.TestCustomer"),
        __metadata("design:paramtypes", [])
    ], TestCustomer);
    exports.TestCustomer = TestCustomer;
    async function test() {
    }
    exports.test = test;
    ;
});
define("tests/remote/TestOrder", ["require", "exports", "tests/remote/TestOrderDetails", "tests/remote/TestCustomer", "jassijs/remote/DBObject", "jassijs/remote/Registry", "jassijs/util/DatabaseSchema", "jassijs/remote/security/Rights"], function (require, exports, TestOrderDetails_1, TestCustomer_1, DBObject_3, Registry_4, DatabaseSchema_3, Rights_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test = exports.TestOrder = void 0;
    let TestOrder = class TestOrder extends DBObject_3.DBObject {
        constructor() {
            super();
        }
    };
    __decorate([
        DatabaseSchema_3.PrimaryColumn(),
        __metadata("design:type", Number)
    ], TestOrder.prototype, "id", void 0);
    __decorate([
        Rights_2.$CheckParentRight(),
        DatabaseSchema_3.ManyToOne(type => TestCustomer_1.TestCustomer),
        __metadata("design:type", TestCustomer_1.TestCustomer)
    ], TestOrder.prototype, "customer", void 0);
    __decorate([
        DatabaseSchema_3.OneToMany(type => TestOrderDetails_1.TestOrderDetails, e => e.Order),
        __metadata("design:type", Array)
    ], TestOrder.prototype, "details", void 0);
    TestOrder = __decorate([
        DBObject_3.$DBObject(),
        Registry_4.$Class("tests.TestOrder"),
        __metadata("design:paramtypes", [])
    ], TestOrder);
    exports.TestOrder = TestOrder;
    async function test() {
    }
    exports.test = test;
    ;
});
define("tests/remote/TestOrderDetails", ["require", "exports", "tests/remote/TestOrder", "jassijs/remote/DBObject", "jassijs/remote/Registry", "jassijs/util/DatabaseSchema", "jassijs/remote/security/Rights"], function (require, exports, TestOrder_2, DBObject_4, Registry_5, DatabaseSchema_4, Rights_3) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test = exports.TestOrderDetails = void 0;
    let TestOrderDetails = class TestOrderDetails extends DBObject_4.DBObject {
        constructor() {
            super();
        }
    };
    __decorate([
        DatabaseSchema_4.PrimaryColumn(),
        __metadata("design:type", Number)
    ], TestOrderDetails.prototype, "id", void 0);
    __decorate([
        Rights_3.$CheckParentRight(),
        DatabaseSchema_4.ManyToOne(type => TestOrder_2.TestOrder, e => e.details),
        __metadata("design:type", TestOrder_2.TestOrder)
    ], TestOrderDetails.prototype, "Order", void 0);
    TestOrderDetails = __decorate([
        DBObject_4.$DBObject(),
        Registry_5.$Class("tests.TestOrderDetails"),
        __metadata("design:paramtypes", [])
    ], TestOrderDetails);
    exports.TestOrderDetails = TestOrderDetails;
    async function test() {
    }
    exports.test = test;
    ;
});
define("tests/modul", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = {
        "require": {}
    };
});
//# sourceMappingURL=tests-server.js.map