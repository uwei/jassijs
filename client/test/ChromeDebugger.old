String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.split(search).join(replacement);
};

define([],function() {
 

    var start=async function(){
		if(window.debuggersession!==undefined){
			window.debuggersession.close();
		}
		var url=0;
		var all="";
    	  $.ajax({url: "http://localhost:9222/json", 
        type: 'GET',
        success: function(result){
		    for(var x=0;x<result.length;x++){
		    	var tit=result[x].title.replaceAll("&amp;","&");;
		    	if(tit.indexOf("localhost/jassijs/public_html/app.html")===0){
		    		var url=result[x].webSocketDebuggerUrl;
		    		  window.debuggersession=ws= new WebSocket(url);
				
					   ws.onopen = function() {

						  // Web Socket is connected, send data using send()
						  ws.send('{"id":1,"method":"Debugger.enable"}');
					   };

					   ws.onmessage = function (evt) { 
					   	  var ob=JSON.parse(evt.data);
					   	  all=all+evt.data;
					   	  if(ob.method==="Debugger.scriptParsed"){
					   	  	
					   	  }else if(ob.method==="Debugger.paused"){
							var frame=	ob.params.callFrames[0].callFrameId;
							ws.send('{"id":1,"method":"Debugger.resume"}');
							console.log(frame);
					   	  }else
							  console.log(evt.data);
						//  var received_msg = evt.data;
						  //alert("Message is received...");
					   };

					   ws.onclose = function() { 
							
						  // websocket is closed.
						  //alert("Connection is closed..."); 
					   };
		    	}
		    }
    }})
};
start();
});
