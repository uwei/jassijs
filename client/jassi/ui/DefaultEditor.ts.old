import {Textbox} from "jassi/ui/Textbox";
import Editor from "jassi/ui/PropertyEditors/Editor";
import jassi from "remote/jassi/base/Jassi";


export default class DefaultEditor extends Editor
    /**
     * Editor for number and string 
     * used by PropertyEditor
     * @class jassi.ui.PropertyEditors.DefaultEditor
     */
    {
        constructor(variablename,property,propertyEditor){
            super(variablename,property,propertyEditor);
            /** @member - the renedering component **/
            this.component=new Textbox();
            var _this=this;
            this.component.onchange(function(param){
                _this._onchange(param);
            });
        }
        /**
         * @member {object} ob - the object which is edited
         */
        set ob(ob){
            super.ob=ob;
            var value=this.propertyEditor.getPropertyValue(this.property);
            if(value!==undefined&&this.property.type==="string"&&value.startsWith("\"")&&value.endsWith("\"")){
                value=value.substring(1,value.length-1);
            }
            this.component.value=value;
        }
        get ob(){
            return this._ob;
        }
        
          /**
         * get the renderer for the PropertyEditor
         * @returns - the UI-component for the editor
         */
        getComponent(){
            return this.component;
        }
        /**
         * intern the value changes
         * @param {type} param
         */
        _onchange(param){
            var val=this.component.value;
            if(this.property.type==="string")
                val="\""+val+"\"";
            this.propertyEditor.setPropertyInCode(this.property.name,val);
            this.propertyEditor.setPropertyInDesign(this.property.name,val);
            super.callEvent("edit",param);
        }
    }
    jassi.register("classes","jassi.ui.PropertyEditors.DefaultEditor",DefaultEditor);
    jassi.register("propertyeditor","jassi.ui.PropertyEditors.DefaultEditor",["string","number"]);
