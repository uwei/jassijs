define(["require", "exports", "game/product"], function (require, exports, product_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Route = void 0;
    class Route {
        constructor() {
            this.type = "Route";
            this.unloadMarketAmount = [];
            this.unloadMarketPrice = [];
            this.unloadWarehouseAmount = [];
            this.loadMarketAmount = [];
            this.loadMarketUntilAmount = [];
            this.loadMarketPrice = [];
            this.loadWarehouseAmount = [];
            this.loadWarehouseUntilAmount = [];
            for (var x = 0; x < product_1.allProducts.length; x++) {
                this.unloadMarketAmount.push(undefined);
                this.unloadMarketPrice.push(product_1.allProducts[x].priceSelling);
                this.unloadWarehouseAmount.push(undefined);
                this.loadMarketAmount.push(undefined);
                this.loadMarketUntilAmount.push(undefined);
                this.loadMarketPrice.push(product_1.allProducts[x].pricePurchase);
                this.loadWarehouseAmount.push(undefined);
                this.loadWarehouseUntilAmount.push(undefined);
            }
        }
        unloadMarket() {
            var city = this.airplane.world.cities[this.cityid];
            for (var x = 0; x < product_1.allProducts.length; x++) {
                var max = this.airplane.products[x];
                if (this.unloadMarketAmount[x] !== undefined) {
                    max = Math.min(this.airplane.products[x], this.unloadMarketAmount[x]);
                    if (max < 0)
                        max = 0;
                }
                if (max) {
                    for (var y = 0; y < max; y++) {
                        var price = product_1.allProducts[x].calcPrice(city.people, city.market[x], false); //city.isProducedHere(x));
                        if (price >= this.unloadMarketPrice[x]) {
                            city.world.game.changeMoney(1 * price, "airplane sells from market", city);
                            city.market[x] += 1;
                            this.airplane.products[x] -= 1;
                            this.airplane.refreshLoadedCount();
                        }
                        else {
                            break;
                        }
                    }
                }
            }
        }
        unloadWarehouse() {
            var city = this.airplane.world.cities[this.cityid];
            for (var x = 0; x < product_1.allProducts.length; x++) {
                var max = this.unloadWarehouseAmount[x];
                if (max !== undefined) {
                    max = Math.min(max, this.airplane.products[x]);
                    if (max) {
                        this.airplane.products[x] -= max;
                        this.airplane.refreshLoadedCount();
                        city.warehouse[x] += max;
                    }
                }
            }
        }
        loadWarehouse() {
            var city = this.airplane.world.cities[this.cityid];
            for (var x = 0; x < product_1.allProducts.length; x++) {
                var max = this.loadWarehouseUntilAmount[x];
                if (max === undefined) {
                    max = this.loadWarehouseAmount[x];
                    if (max && max > city.warehouse[x])
                        max = city.warehouse[x];
                }
                else {
                    max = this.loadWarehouseUntilAmount[x] - this.airplane.products[x];
                }
                if (max < 0)
                    max = 0;
                if (max && city.warehouseMinStock[x]) {
                    if (city.warehouse[x] - max < city.warehouseMinStock[x]) {
                        max = city.warehouse[x] - city.warehouseMinStock[x];
                        if (max < 0)
                            max = 0;
                    }
                }
                if (max && max > (this.airplane.capacity - this.airplane.loadedCount))
                    max = this.airplane.capacity - this.airplane.loadedCount;
                if (max) {
                    this.airplane.products[x] += max;
                    this.airplane.refreshLoadedCount();
                    city.warehouse[x] -= max;
                }
            }
        }
        loadMarket() {
            var city = this.airplane.world.cities[this.cityid];
            for (var x = 0; x < product_1.allProducts.length; x++) {
                var max = this.loadMarketAmount[x];
                if (this.loadMarketUntilAmount[x] !== undefined) {
                    max = this.loadMarketUntilAmount[x] - this.airplane.products[x];
                    if (max < 0)
                        max = 0;
                }
                if (max && max > (this.airplane.capacity - this.airplane.loadedCount))
                    max = this.airplane.capacity - this.airplane.loadedCount;
                if (max) {
                    for (var y = 0; y < max; y++) {
                        var price = product_1.allProducts[x].calcPrice(city.people, city.market[x] - 1, city.isProducedHere(x));
                        if (price <= this.loadMarketPrice[x]) {
                            city.world.game.changeMoney(-1 * price, "airplane buys from market", city);
                            city.market[x] -= 1;
                            this.airplane.products[x] += 1;
                            this.airplane.refreshLoadedCount();
                        }
                        else {
                            break;
                        }
                    }
                }
            }
        }
        load() {
            this.loadWarehouse();
            this.loadMarket();
        }
        unload() {
            this.unloadMarket();
            this.unloadWarehouse();
        }
    }
    exports.Route = Route;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9nYW1lL3JvdXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7SUFHQSxNQUFhLEtBQUs7UUFZZDtZQURBLFNBQUksR0FBRyxPQUFPLENBQUM7WUFFWCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsRUFBRSxDQUFDO1lBQzdCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxFQUFFLENBQUM7WUFDNUIsSUFBSSxDQUFDLHFCQUFxQixHQUFHLEVBQUUsQ0FBQztZQUNoQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO1lBQzNCLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxFQUFFLENBQUM7WUFDaEMsSUFBSSxDQUFDLGVBQWUsR0FBRyxFQUFFLENBQUM7WUFDMUIsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEVBQUUsQ0FBQztZQUM5QixJQUFJLENBQUMsd0JBQXdCLEdBQUcsRUFBRSxDQUFDO1lBQ25DLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxxQkFBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDekMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztnQkFDeEMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxxQkFBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUN6RCxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUMzQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUN0QyxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUMzQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxxQkFBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLGFB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Q0o7SUE3SUQsc0JBNklDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWlycGxhbmUgfSBmcm9tIFwiZ2FtZS9haXJwbGFuZVwiO1xuaW1wb3J0IHsgYWxsUHJvZHVjdHMgfSBmcm9tIFwiZ2FtZS9wcm9kdWN0XCI7XG5cbmV4cG9ydCBjbGFzcyBSb3V0ZSB7XG4gICAgY2l0eWlkOiBudW1iZXI7XG4gICAgdW5sb2FkTWFya2V0QW1vdW50OiBudW1iZXJbXTtcbiAgICB1bmxvYWRNYXJrZXRQcmljZTogbnVtYmVyW107XG4gICAgdW5sb2FkV2FyZWhvdXNlQW1vdW50OiBudW1iZXJbXTtcbiAgICBsb2FkTWFya2V0QW1vdW50OiBudW1iZXJbXTtcbiAgICBsb2FkTWFya2V0VW50aWxBbW91bnQ6IG51bWJlcltdO1xuICAgIGxvYWRNYXJrZXRQcmljZTogbnVtYmVyW107XG4gICAgbG9hZFdhcmVob3VzZUFtb3VudDogbnVtYmVyW107XG4gICAgbG9hZFdhcmVob3VzZVVudGlsQW1vdW50OiBudW1iZXJbXTtcbiAgICBhaXJwbGFuZTogQWlycGxhbmU7XG4gICAgdHlwZSA9IFwiUm91dGVcIjtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy51bmxvYWRNYXJrZXRBbW91bnQgPSBbXTtcbiAgICAgICAgdGhpcy51bmxvYWRNYXJrZXRQcmljZSA9IFtdO1xuICAgICAgICB0aGlzLnVubG9hZFdhcmVob3VzZUFtb3VudCA9IFtdO1xuICAgICAgICB0aGlzLmxvYWRNYXJrZXRBbW91bnQgPSBbXTtcbiAgICAgICAgdGhpcy5sb2FkTWFya2V0VW50aWxBbW91bnQgPSBbXTtcbiAgICAgICAgdGhpcy5sb2FkTWFya2V0UHJpY2UgPSBbXTtcbiAgICAgICAgdGhpcy5sb2FkV2FyZWhvdXNlQW1vdW50ID0gW107XG4gICAgICAgIHRoaXMubG9hZFdhcmVob3VzZVVudGlsQW1vdW50ID0gW107XG4gICAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgYWxsUHJvZHVjdHMubGVuZ3RoOyB4KyspIHtcbiAgICAgICAgICAgIHRoaXMudW5sb2FkTWFya2V0QW1vdW50LnB1c2godW5kZWZpbmVkKTtcbiAgICAgICAgICAgIHRoaXMudW5sb2FkTWFya2V0UHJpY2UucHVzaChhbGxQcm9kdWN0c1t4XS5wcmljZVNlbGxpbmcpO1xuICAgICAgICAgICAgdGhpcy51bmxvYWRXYXJlaG91c2VBbW91bnQucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICAgICAgdGhpcy5sb2FkTWFya2V0QW1vdW50LnB1c2godW5kZWZpbmVkKTtcbiAgICAgICAgICAgIHRoaXMubG9hZE1hcmtldFVudGlsQW1vdW50LnB1c2godW5kZWZpbmVkKTtcbiAgICAgICAgICAgIHRoaXMubG9hZE1hcmtldFByaWNlLnB1c2goYWxsUHJvZHVjdHNbeF0ucHJpY2VQdXJjaGFzZSk7XG4gICAgICAgICAgICB0aGlzLmxvYWRXYXJlaG91c2VBbW91bnQucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICAgICAgdGhpcy5sb2FkV2FyZWhvdXNlVW50aWxBbW91bnQucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVubG9hZE1hcmtldCgpIHtcbiAgICAgICAgdmFyIGNpdHkgPSB0aGlzLmFpcnBsYW5lLndvcmxkLmNpdGllc1t0aGlzLmNpdHlpZF07XG4gICAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgYWxsUHJvZHVjdHMubGVuZ3RoOyB4KyspIHtcbiAgICAgICAgICAgIHZhciBtYXggPSB0aGlzLmFpcnBsYW5lLnByb2R1Y3RzW3hdO1xuXG4gICAgICAgICAgICBpZiAodGhpcy51bmxvYWRNYXJrZXRBbW91bnRbeF0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIG1heCA9IE1hdGgubWluKHRoaXMuYWlycGxhbmUucHJvZHVjdHNbeF0sIHRoaXMudW5sb2FkTWFya2V0QW1vdW50W3hdKTtcbiAgICAgICAgICAgICAgICBpZiAobWF4IDwgMClcbiAgICAgICAgICAgICAgICAgICAgbWF4ID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtYXgpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciB5ID0gMDsgeSA8IG1heDsgeSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwcmljZSA9IGFsbFByb2R1Y3RzW3hdLmNhbGNQcmljZShjaXR5LnBlb3BsZSwgY2l0eS5tYXJrZXRbeF0sIGZhbHNlKTsvL2NpdHkuaXNQcm9kdWNlZEhlcmUoeCkpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJpY2UgPj0gdGhpcy51bmxvYWRNYXJrZXRQcmljZVt4XSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2l0eS53b3JsZC5nYW1lLmNoYW5nZU1vbmV5KDEgKiBwcmljZSwgXCJhaXJwbGFuZSBzZWxscyBmcm9tIG1hcmtldFwiLCBjaXR5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNpdHkubWFya2V0W3hdICs9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFpcnBsYW5lLnByb2R1Y3RzW3hdIC09IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFpcnBsYW5lLnJlZnJlc2hMb2FkZWRDb3VudCgpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHVubG9hZFdhcmVob3VzZSgpIHtcbiAgICAgICAgdmFyIGNpdHkgPSB0aGlzLmFpcnBsYW5lLndvcmxkLmNpdGllc1t0aGlzLmNpdHlpZF07XG4gICAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgYWxsUHJvZHVjdHMubGVuZ3RoOyB4KyspIHtcbiAgICAgICAgICAgIHZhciBtYXggPSB0aGlzLnVubG9hZFdhcmVob3VzZUFtb3VudFt4XTtcbiAgICAgICAgICAgIGlmIChtYXggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIG1heCA9IE1hdGgubWluKG1heCwgdGhpcy5haXJwbGFuZS5wcm9kdWN0c1t4XSk7XG4gICAgICAgICAgICAgICAgaWYgKG1heCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFpcnBsYW5lLnByb2R1Y3RzW3hdIC09IG1heDtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5haXJwbGFuZS5yZWZyZXNoTG9hZGVkQ291bnQoKTtcbiAgICAgICAgICAgICAgICAgICAgY2l0eS53YXJlaG91c2VbeF0gKz0gbWF4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBsb2FkV2FyZWhvdXNlKCkge1xuICAgICAgICB2YXIgY2l0eSA9IHRoaXMuYWlycGxhbmUud29ybGQuY2l0aWVzW3RoaXMuY2l0eWlkXTtcbiAgICAgICAgZm9yICh2YXIgeCA9IDA7IHggPCBhbGxQcm9kdWN0cy5sZW5ndGg7IHgrKykge1xuICAgICAgICAgICAgdmFyIG1heCA9IHRoaXMubG9hZFdhcmVob3VzZVVudGlsQW1vdW50W3hdO1xuICAgICAgICAgICAgaWYgKG1heCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgbWF4ID0gdGhpcy5sb2FkV2FyZWhvdXNlQW1vdW50W3hdO1xuICAgICAgICAgICAgICAgIGlmIChtYXggJiYgbWF4ID4gY2l0eS53YXJlaG91c2VbeF0pXG4gICAgICAgICAgICAgICAgICAgIG1heCA9IGNpdHkud2FyZWhvdXNlW3hdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBtYXggPSB0aGlzLmxvYWRXYXJlaG91c2VVbnRpbEFtb3VudFt4XS10aGlzLmFpcnBsYW5lLnByb2R1Y3RzW3hdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1heCA8IDApXG4gICAgICAgICAgICAgICAgbWF4ID0gMDtcbiAgICAgICAgICAgIGlmIChtYXggJiYgY2l0eS53YXJlaG91c2VNaW5TdG9ja1t4XSkge1xuICAgICAgICAgICAgICAgIGlmIChjaXR5LndhcmVob3VzZVt4XSAtIG1heCA8IGNpdHkud2FyZWhvdXNlTWluU3RvY2tbeF0pIHtcbiAgICAgICAgICAgICAgICAgICAgbWF4ID0gY2l0eS53YXJlaG91c2VbeF0gLSBjaXR5LndhcmVob3VzZU1pblN0b2NrW3hdO1xuICAgICAgICAgICAgICAgICAgICBpZiAobWF4IDwgMClcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heCA9IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1heCAmJiBtYXggPiAodGhpcy5haXJwbGFuZS5jYXBhY2l0eSAtIHRoaXMuYWlycGxhbmUubG9hZGVkQ291bnQpKVxuICAgICAgICAgICAgICAgIG1heCA9IHRoaXMuYWlycGxhbmUuY2FwYWNpdHkgLSB0aGlzLmFpcnBsYW5lLmxvYWRlZENvdW50O1xuXG4gICAgICAgICAgICBpZiAobWF4KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5haXJwbGFuZS5wcm9kdWN0c1t4XSArPSBtYXg7XG4gICAgICAgICAgICAgICAgdGhpcy5haXJwbGFuZS5yZWZyZXNoTG9hZGVkQ291bnQoKTtcbiAgICAgICAgICAgICAgICBjaXR5LndhcmVob3VzZVt4XSAtPSBtYXg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cbiAgICBsb2FkTWFya2V0KCkge1xuICAgICAgICB2YXIgY2l0eSA9IHRoaXMuYWlycGxhbmUud29ybGQuY2l0aWVzW3RoaXMuY2l0eWlkXTtcbiAgICAgICAgZm9yICh2YXIgeCA9IDA7IHggPCBhbGxQcm9kdWN0cy5sZW5ndGg7IHgrKykge1xuICAgICAgICAgICAgdmFyIG1heCA9IHRoaXMubG9hZE1hcmtldEFtb3VudFt4XTtcbiAgICAgICAgICAgIGlmICh0aGlzLmxvYWRNYXJrZXRVbnRpbEFtb3VudFt4XSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgbWF4ID0gdGhpcy5sb2FkTWFya2V0VW50aWxBbW91bnRbeF0gLSB0aGlzLmFpcnBsYW5lLnByb2R1Y3RzW3hdO1xuICAgICAgICAgICAgICAgIGlmIChtYXggPCAwKVxuICAgICAgICAgICAgICAgICAgICBtYXggPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1heCAmJiBtYXggPiAodGhpcy5haXJwbGFuZS5jYXBhY2l0eSAtIHRoaXMuYWlycGxhbmUubG9hZGVkQ291bnQpKVxuICAgICAgICAgICAgICAgIG1heCA9IHRoaXMuYWlycGxhbmUuY2FwYWNpdHkgLSB0aGlzLmFpcnBsYW5lLmxvYWRlZENvdW50O1xuICAgICAgICAgICAgaWYgKG1heCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIHkgPSAwOyB5IDwgbWF4OyB5KyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHByaWNlID0gYWxsUHJvZHVjdHNbeF0uY2FsY1ByaWNlKGNpdHkucGVvcGxlLCBjaXR5Lm1hcmtldFt4XSAtIDEsIGNpdHkuaXNQcm9kdWNlZEhlcmUoeCkpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJpY2UgPD0gdGhpcy5sb2FkTWFya2V0UHJpY2VbeF0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNpdHkud29ybGQuZ2FtZS5jaGFuZ2VNb25leSgtMSAqIHByaWNlLCBcImFpcnBsYW5lIGJ1eXMgZnJvbSBtYXJrZXRcIiwgY2l0eSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaXR5Lm1hcmtldFt4XSAtPSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5haXJwbGFuZS5wcm9kdWN0c1t4XSArPSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5haXJwbGFuZS5yZWZyZXNoTG9hZGVkQ291bnQoKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBsb2FkKCkge1xuICAgICAgICB0aGlzLmxvYWRXYXJlaG91c2UoKTtcbiAgICAgICAgdGhpcy5sb2FkTWFya2V0KCk7XG4gICAgfVxuICAgIHVubG9hZCgpIHtcblxuICAgICAgICB0aGlzLnVubG9hZE1hcmtldCgpO1xuICAgICAgICB0aGlzLnVubG9hZFdhcmVob3VzZSgpO1xuICAgIH1cbn0iXX0=