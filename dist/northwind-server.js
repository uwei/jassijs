var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
//this file is autogenerated don't modify
define("northwind/registry", ["require"], function (require) {
    return {
        default: {
            "northwind/remote/Categories.ts": {
                "date": 1681228126000,
                "northwind.Categories": {
                    "$DBObject": [],
                    "@members": {
                        "id": {
                            "ValidateIsInt": [
                                {
                                    "optional": true
                                }
                            ],
                            "PrimaryColumn": []
                        },
                        "CategoryName": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Description": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Picture": {
                            "ValidateIsString": [],
                            "Column": []
                        },
                        "Products": {
                            "OneToMany": [
                                "function",
                                "function"
                            ]
                        }
                    }
                }
            },
            "northwind/remote/Customer.ts": {
                "date": 1681125124000,
                "northwind.Customer": {
                    "$DBObject": [],
                    "@members": {
                        "id": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "PrimaryColumn": []
                        },
                        "CompanyName": {
                            "ValidateIsString": [],
                            "Column": []
                        },
                        "ContactName": {
                            "ValidateIsString": [],
                            "Column": []
                        },
                        "ContactTitle": {
                            "ValidateIsString": [],
                            "Column": []
                        },
                        "Address": {
                            "ValidateIsString": [],
                            "Column": []
                        },
                        "City": {
                            "ValidateIsString": [],
                            "Column": []
                        },
                        "Region": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "PostalCode": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Country": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Phone": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Fax": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        }
                    }
                }
            },
            "northwind/remote/Employees.ts": {
                "date": 1681322814000,
                "northwind.Employees": {
                    "$DBObject": [],
                    "@members": {
                        "id": {
                            "ValidateIsInt": [
                                {
                                    "optional": true
                                }
                            ],
                            "PrimaryColumn": []
                        },
                        "LastName": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "FirstName": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Title": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "TitleOfCourtesy": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Address": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "City": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Region": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "PostalCode": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Country": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "HomePhone": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Extension": {
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Photo": {
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Notes": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "PhotoPath": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "ReportsTo": {
                            "ValidateIsInstanceOf": [
                                {
                                    "type": "function",
                                    "optional": true
                                }
                            ],
                            "JoinColumn": [],
                            "ManyToOne": [
                                "function"
                            ]
                        },
                        "BirthDate": {
                            "ValidateIsDate": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "HireDate": {
                            "ValidateIsDate": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        }
                    }
                }
            },
            "northwind/remote/OrderDetails.ts": {
                "date": 1681322822000,
                "northwind.OrderDetails": {
                    "$DBObject": [],
                    "@members": {
                        "id": {
                            "ValidateIsInt": [
                                {
                                    "optional": true
                                }
                            ],
                            "PrimaryGeneratedColumn": []
                        },
                        "Order": {
                            "ValidateIsInstanceOf": [
                                {
                                    "type": "function"
                                }
                            ],
                            "ManyToOne": [
                                "function",
                                "function"
                            ]
                        },
                        "Product": {
                            "ValidateIsInstanceOf": [
                                {
                                    "type": "function"
                                }
                            ],
                            "ManyToOne": [
                                "function"
                            ]
                        },
                        "UnitPrice": {
                            "ValidateIsNumber": [],
                            "Column": [
                                {
                                    "nullable": false,
                                    "type": "decimal"
                                }
                            ]
                        },
                        "Quantity": {
                            "ValidateIsNumber": [],
                            "Column": []
                        },
                        "Discount": {
                            "ValidateIsNumber": [],
                            "Column": [
                                {
                                    "nullable": true,
                                    "type": "decimal"
                                }
                            ]
                        }
                    }
                }
            },
            "northwind/remote/Orders.ts": {
                "date": 1681322834000,
                "northwind.Orders": {
                    "$DBObject": [],
                    "@members": {
                        "id": {
                            "ValidateIsNumber": [
                                {
                                    "optional": true
                                }
                            ],
                            "PrimaryColumn": []
                        },
                        "Customer": {
                            "ValidateIsInstanceOf": [
                                {
                                    "type": "function"
                                }
                            ],
                            "ManyToOne": [
                                "function"
                            ]
                        },
                        "Employee": {
                            "ValidateIsInstanceOf": [
                                {
                                    "type": "function"
                                }
                            ],
                            "ManyToOne": [
                                "function"
                            ]
                        },
                        "OrderDate": {
                            "ValidateIsDate": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "RequiredDate": {
                            "ValidateIsDate": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "ShippedDate": {
                            "ValidateIsDate": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "ShipVia": {
                            "ValidateIsInstanceOf": [
                                {
                                    "type": "function"
                                }
                            ],
                            "ManyToOne": [
                                "function"
                            ]
                        },
                        "Freight": {
                            "ValidateIsNumber": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true,
                                    "type": "decimal"
                                }
                            ]
                        },
                        "ShipName": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "ShipAddress": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "ShipCity": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "ShipRegion": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "ShipPostalCode": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "ShipCountry": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Details": {
                            "ValidateIsArray": [
                                {
                                    "type": "function"
                                }
                            ],
                            "OneToMany": [
                                "function",
                                "function"
                            ]
                        }
                    }
                }
            },
            "northwind/remote/Products.ts": {
                "date": 1681322712000,
                "northwind.Products": {
                    "$DBObject": [],
                    "@members": {
                        "id": {
                            "ValidateIsInt": [
                                {
                                    "optional": true
                                }
                            ],
                            "PrimaryColumn": []
                        },
                        "ProductName": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Supplier": {
                            "ValidateIsInstanceOf": [
                                {
                                    "type": "function"
                                }
                            ],
                            "ManyToOne": [
                                "function"
                            ]
                        },
                        "Category": {
                            "ValidateIsInstanceOf": [
                                {
                                    "type": "function"
                                }
                            ],
                            "ManyToOne": [
                                "function",
                                "function"
                            ]
                        },
                        "QuantityPerUnit": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "UnitPrice": {
                            "ValidateIsNumber": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true,
                                    "type": "decimal"
                                }
                            ]
                        },
                        "UnitsInStock": {
                            "ValidateIsNumber": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "UnitsOnOrder": {
                            "ValidateIsNumber": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "ReorderLevel": {
                            "ValidateIsNumber": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Discontinued": {
                            "ValidateIsBoolean": [],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        }
                    }
                }
            },
            "northwind/remote/Shippers.ts": {
                "date": 1681236442000,
                "northwind.Shippers": {
                    "$DBObject": [],
                    "@members": {
                        "id": {
                            "ValidateIsInt": [
                                {
                                    "optional": true
                                }
                            ],
                            "PrimaryColumn": []
                        },
                        "CompanyName": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Phone": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        }
                    }
                }
            },
            "northwind/remote/Suppliers.ts": {
                "date": 1681236516000,
                "northwind.Suppliers": {
                    "$DBObject": [],
                    "@members": {
                        "id": {
                            "ValidateIsInt": [
                                {
                                    "optional": true
                                }
                            ],
                            "PrimaryColumn": []
                        },
                        "CompanyName": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "ContactName": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "ContactTitle": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Address": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "City": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Region": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "PostalCode": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Country": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Phone": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "Fax": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        },
                        "HomePage": {
                            "ValidateIsString": [
                                {
                                    "optional": true
                                }
                            ],
                            "Column": [
                                {
                                    "nullable": true
                                }
                            ]
                        }
                    }
                }
            },
            "northwind/SampleServerReport.ts": {
                "date": 1624805092000
            }
        }
    };
});
define("northwind/remote/Categories", ["require", "exports", "northwind/remote/Products", "jassijs/remote/DBObject", "jassijs/remote/Registry", "jassijs/util/DatabaseSchema", "jassijs/remote/Validator"], function (require, exports, Products_1, DBObject_1, Registry_1, DatabaseSchema_1, Validator_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test = exports.Categories = void 0;
    let Categories = class Categories extends DBObject_1.DBObject {
        constructor() {
            super();
        }
    };
    __decorate([
        Validator_1.ValidateIsInt({ optional: true }),
        DatabaseSchema_1.PrimaryColumn(),
        __metadata("design:type", Number)
    ], Categories.prototype, "id", void 0);
    __decorate([
        Validator_1.ValidateIsString({ optional: true }),
        DatabaseSchema_1.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Categories.prototype, "CategoryName", void 0);
    __decorate([
        Validator_1.ValidateIsString({ optional: true }),
        DatabaseSchema_1.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Categories.prototype, "Description", void 0);
    __decorate([
        Validator_1.ValidateIsString(),
        DatabaseSchema_1.Column(),
        __metadata("design:type", String)
    ], Categories.prototype, "Picture", void 0);
    __decorate([
        DatabaseSchema_1.OneToMany(type => Products_1.Products, e => e.Category),
        __metadata("design:type", Products_1.Products)
    ], Categories.prototype, "Products", void 0);
    Categories = __decorate([
        DBObject_1.$DBObject(),
        Registry_1.$Class("northwind.Categories"),
        __metadata("design:paramtypes", [])
    ], Categories);
    exports.Categories = Categories;
    async function test() {
    }
    exports.test = test;
    ;
});
define("northwind/remote/Customer", ["require", "exports", "jassijs/remote/DBObject", "jassijs/remote/Registry", "jassijs/util/DatabaseSchema", "jassijs/remote/Validator"], function (require, exports, DBObject_2, Registry_2, DatabaseSchema_2, Validator_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test = exports.Customer = void 0;
    let Customer = class Customer extends DBObject_2.DBObject {
        constructor() {
            super();
            this.CompanyName = "";
            this.ContactName = "";
            this.ContactTitle = "";
            this.Address = "";
            this.City = "";
            /*  this.id = 0;
              this.vorname = "";
              this.nachname = "";
              this.strasse = "";
              this.PLZ = "";
              this.hausnummer = 0;
              this.initExtensions();*/
        }
    };
    __decorate([
        Validator_2.ValidateIsString({ optional: true }),
        DatabaseSchema_2.PrimaryColumn(),
        __metadata("design:type", String)
    ], Customer.prototype, "id", void 0);
    __decorate([
        Validator_2.ValidateIsString(),
        DatabaseSchema_2.Column(),
        __metadata("design:type", String)
    ], Customer.prototype, "CompanyName", void 0);
    __decorate([
        Validator_2.ValidateIsString(),
        DatabaseSchema_2.Column(),
        __metadata("design:type", String)
    ], Customer.prototype, "ContactName", void 0);
    __decorate([
        Validator_2.ValidateIsString(),
        DatabaseSchema_2.Column(),
        __metadata("design:type", String)
    ], Customer.prototype, "ContactTitle", void 0);
    __decorate([
        Validator_2.ValidateIsString(),
        DatabaseSchema_2.Column(),
        __metadata("design:type", String)
    ], Customer.prototype, "Address", void 0);
    __decorate([
        Validator_2.ValidateIsString(),
        DatabaseSchema_2.Column(),
        __metadata("design:type", String)
    ], Customer.prototype, "City", void 0);
    __decorate([
        Validator_2.ValidateIsString({ optional: true }),
        DatabaseSchema_2.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Customer.prototype, "Region", void 0);
    __decorate([
        Validator_2.ValidateIsString({ optional: true }),
        DatabaseSchema_2.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Customer.prototype, "PostalCode", void 0);
    __decorate([
        Validator_2.ValidateIsString({ optional: true }),
        DatabaseSchema_2.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Customer.prototype, "Country", void 0);
    __decorate([
        Validator_2.ValidateIsString({ optional: true }),
        DatabaseSchema_2.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Customer.prototype, "Phone", void 0);
    __decorate([
        Validator_2.ValidateIsString({ optional: true }),
        DatabaseSchema_2.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Customer.prototype, "Fax", void 0);
    Customer = __decorate([
        DBObject_2.$DBObject(),
        Registry_2.$Class("northwind.Customer"),
        __metadata("design:paramtypes", [])
    ], Customer);
    exports.Customer = Customer;
    async function test() {
        var all = await Customer.find();
        //var cus2=<Customer>await Customer.findOne();
        //debugger;
        //await Kunde.sample();
        //	new de.Kunde().generate();
        //jassijs.db.uploadType(de.Kunde);
    }
    exports.test = test;
    ;
});
define("northwind/remote/Employees", ["require", "exports", "jassijs/remote/DBObject", "jassijs/remote/Registry", "jassijs/util/DatabaseSchema", "jassijs/remote/Transaction", "jassijs/remote/Serverservice", "jassijs/remote/Validator"], function (require, exports, DBObject_3, Registry_3, DatabaseSchema_3, Transaction_1, Serverservice_1, Validator_3) {
    "use strict";
    var Employees_1, _a, _b;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test2 = exports.test = exports.Employees = void 0;
    let Employees = Employees_1 = class Employees extends DBObject_3.DBObject {
        constructor() {
            super();
        }
        static async find(options = undefined, context = undefined) {
            if (!(context === null || context === void 0 ? void 0 : context.isServer)) {
                if (options === undefined)
                    options = { relations: ["ReportsTo"] };
                return await this.call(this.find, options, context);
            }
            else {
                //@ts-ignore
                var man = await (await Serverservice_1.serverservices.db);
                return man.find(context, this, options);
            }
        }
    };
    __decorate([
        Validator_3.ValidateIsInt({ optional: true }),
        DatabaseSchema_3.PrimaryColumn(),
        __metadata("design:type", Number)
    ], Employees.prototype, "id", void 0);
    __decorate([
        Validator_3.ValidateIsString({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "LastName", void 0);
    __decorate([
        Validator_3.ValidateIsString({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "FirstName", void 0);
    __decorate([
        Validator_3.ValidateIsString({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "Title", void 0);
    __decorate([
        Validator_3.ValidateIsString({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "TitleOfCourtesy", void 0);
    __decorate([
        Validator_3.ValidateIsString({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "Address", void 0);
    __decorate([
        Validator_3.ValidateIsString({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "City", void 0);
    __decorate([
        Validator_3.ValidateIsString({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "Region", void 0);
    __decorate([
        Validator_3.ValidateIsString({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "PostalCode", void 0);
    __decorate([
        Validator_3.ValidateIsString({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "Country", void 0);
    __decorate([
        Validator_3.ValidateIsString({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "HomePhone", void 0);
    __decorate([
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "Extension", void 0);
    __decorate([
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "Photo", void 0);
    __decorate([
        Validator_3.ValidateIsString({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "Notes", void 0);
    __decorate([
        Validator_3.ValidateIsString({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Employees.prototype, "PhotoPath", void 0);
    __decorate([
        Validator_3.ValidateIsInstanceOf({ type: type => Employees_1, optional: true }),
        DatabaseSchema_3.JoinColumn(),
        DatabaseSchema_3.ManyToOne(type => Employees_1),
        __metadata("design:type", Employees)
    ], Employees.prototype, "ReportsTo", void 0);
    __decorate([
        Validator_3.ValidateIsDate({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
    ], Employees.prototype, "BirthDate", void 0);
    __decorate([
        Validator_3.ValidateIsDate({ optional: true }),
        DatabaseSchema_3.Column({ nullable: true }),
        __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
    ], Employees.prototype, "HireDate", void 0);
    Employees = Employees_1 = __decorate([
        DBObject_3.$DBObject(),
        Registry_3.$Class("northwind.Employees"),
        __metadata("design:paramtypes", [])
    ], Employees);
    exports.Employees = Employees;
    function getRandomInt(max) {
        return Math.floor(Math.random() * Math.floor(max));
    }
    async function test() {
        var all = await Employees.find({ where: "id>:p", whereParams: { p: 5 } });
    }
    exports.test = test;
    async function test2() {
        var em = new Employees();
        em.id = getRandomInt(100000);
        var em2 = new Employees();
        em2.id = getRandomInt(100000);
        var trans = new Transaction_1.Transaction();
        console.log(em.id + " " + em2.id);
        trans.add(em, em.save);
        trans.add(em2, em2.save);
        var h = await trans.execute();
        h = h;
        /*  var emp = new Employees();
          emp.id = 100003;
          emp.BirthDate = new Date(Date.now());
          //await emp.save();
          var emp2 = new Employees();
          emp2.id = 200000;
          emp2.ReportsTo = emp;
          //await emp2.save();*/
    }
    exports.test2 = test2;
    ;
});
define("northwind/remote/OrderDetails", ["require", "exports", "northwind/remote/Products", "northwind/remote/Orders", "jassijs/remote/DBObject", "jassijs/remote/Registry", "jassijs/util/DatabaseSchema", "jassijs/remote/Validator"], function (require, exports, Products_2, Orders_1, DBObject_4, Registry_4, DatabaseSchema_4, Validator_4) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test = exports.OrderDetails = void 0;
    let OrderDetails = class OrderDetails extends DBObject_4.DBObject {
        constructor() {
            super();
        }
    };
    __decorate([
        Validator_4.ValidateIsInt({ optional: true }),
        DatabaseSchema_4.PrimaryGeneratedColumn(),
        __metadata("design:type", Number)
    ], OrderDetails.prototype, "id", void 0);
    __decorate([
        Validator_4.ValidateIsInstanceOf({ type: type => Orders_1.Orders }),
        DatabaseSchema_4.ManyToOne(type => Orders_1.Orders, e => e.Details),
        __metadata("design:type", Orders_1.Orders)
    ], OrderDetails.prototype, "Order", void 0);
    __decorate([
        Validator_4.ValidateIsInstanceOf({ type: type => Products_2.Products }),
        DatabaseSchema_4.ManyToOne(type => Products_2.Products),
        __metadata("design:type", Products_2.Products)
    ], OrderDetails.prototype, "Product", void 0);
    __decorate([
        Validator_4.ValidateIsNumber(),
        DatabaseSchema_4.Column({ nullable: false, type: "decimal" }),
        __metadata("design:type", Number)
    ], OrderDetails.prototype, "UnitPrice", void 0);
    __decorate([
        Validator_4.ValidateIsNumber(),
        DatabaseSchema_4.Column(),
        __metadata("design:type", Number)
    ], OrderDetails.prototype, "Quantity", void 0);
    __decorate([
        Validator_4.ValidateIsNumber(),
        DatabaseSchema_4.Column({ nullable: true, type: "decimal" }),
        __metadata("design:type", Number)
    ], OrderDetails.prototype, "Discount", void 0);
    OrderDetails = __decorate([
        DBObject_4.$DBObject(),
        Registry_4.$Class("northwind.OrderDetails"),
        __metadata("design:paramtypes", [])
    ], OrderDetails);
    exports.OrderDetails = OrderDetails;
    async function test() {
    }
    exports.test = test;
    ;
});
define("northwind/remote/Orders", ["require", "exports", "northwind/remote/OrderDetails", "northwind/remote/Employees", "northwind/remote/Customer", "jassijs/remote/DBObject", "jassijs/remote/Registry", "jassijs/util/DatabaseSchema", "northwind/remote/Shippers", "jassijs/remote/Validator"], function (require, exports, OrderDetails_1, Employees_2, Customer_1, DBObject_5, Registry_5, DatabaseSchema_5, Shippers_1, Validator_5) {
    "use strict";
    var _a, _b, _c;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test = exports.Orders = void 0;
    let Orders = class Orders extends DBObject_5.DBObject {
        constructor() {
            super();
        }
    };
    __decorate([
        Validator_5.ValidateIsNumber({ optional: true }),
        DatabaseSchema_5.PrimaryColumn(),
        __metadata("design:type", Number)
    ], Orders.prototype, "id", void 0);
    __decorate([
        Validator_5.ValidateIsInstanceOf({ type: type => Customer_1.Customer }),
        DatabaseSchema_5.ManyToOne(type => Customer_1.Customer),
        __metadata("design:type", Customer_1.Customer)
    ], Orders.prototype, "Customer", void 0);
    __decorate([
        Validator_5.ValidateIsInstanceOf({ type: type => Employees_2.Employees }),
        DatabaseSchema_5.ManyToOne(type => Employees_2.Employees),
        __metadata("design:type", Employees_2.Employees)
    ], Orders.prototype, "Employee", void 0);
    __decorate([
        Validator_5.ValidateIsDate({ optional: true }),
        DatabaseSchema_5.Column({ nullable: true }),
        __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
    ], Orders.prototype, "OrderDate", void 0);
    __decorate([
        Validator_5.ValidateIsDate({ optional: true }),
        DatabaseSchema_5.Column({ nullable: true }),
        __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
    ], Orders.prototype, "RequiredDate", void 0);
    __decorate([
        Validator_5.ValidateIsDate({ optional: true }),
        DatabaseSchema_5.Column({ nullable: true }),
        __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
    ], Orders.prototype, "ShippedDate", void 0);
    __decorate([
        Validator_5.ValidateIsInstanceOf({ type: type => Shippers_1.Shippers }),
        DatabaseSchema_5.ManyToOne(type => Shippers_1.Shippers),
        __metadata("design:type", Shippers_1.Shippers)
    ], Orders.prototype, "ShipVia", void 0);
    __decorate([
        Validator_5.ValidateIsNumber({ optional: true }),
        DatabaseSchema_5.Column({ nullable: true, type: "decimal" }),
        __metadata("design:type", Number)
    ], Orders.prototype, "Freight", void 0);
    __decorate([
        Validator_5.ValidateIsString({ optional: true }),
        DatabaseSchema_5.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Orders.prototype, "ShipName", void 0);
    __decorate([
        Validator_5.ValidateIsString({ optional: true }),
        DatabaseSchema_5.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Orders.prototype, "ShipAddress", void 0);
    __decorate([
        Validator_5.ValidateIsString({ optional: true }),
        DatabaseSchema_5.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Orders.prototype, "ShipCity", void 0);
    __decorate([
        Validator_5.ValidateIsString({ optional: true }),
        DatabaseSchema_5.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Orders.prototype, "ShipRegion", void 0);
    __decorate([
        Validator_5.ValidateIsString({ optional: true }),
        DatabaseSchema_5.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Orders.prototype, "ShipPostalCode", void 0);
    __decorate([
        Validator_5.ValidateIsString({ optional: true }),
        DatabaseSchema_5.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Orders.prototype, "ShipCountry", void 0);
    __decorate([
        Validator_5.ValidateIsArray({ type: type => OrderDetails_1.OrderDetails }),
        DatabaseSchema_5.OneToMany(type => OrderDetails_1.OrderDetails, e => e.Order),
        __metadata("design:type", Array)
    ], Orders.prototype, "Details", void 0);
    Orders = __decorate([
        DBObject_5.$DBObject(),
        Registry_5.$Class("northwind.Orders"),
        __metadata("design:paramtypes", [])
    ], Orders);
    exports.Orders = Orders;
    async function test() {
    }
    exports.test = test;
    ;
});
define("northwind/remote/Products", ["require", "exports", "northwind/remote/Categories", "northwind/remote/Suppliers", "jassijs/remote/DBObject", "jassijs/remote/Registry", "jassijs/util/DatabaseSchema", "jassijs/remote/Validator"], function (require, exports, Categories_1, Suppliers_1, DBObject_6, Registry_6, DatabaseSchema_6, Validator_6) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test = exports.Products = void 0;
    let Products = class Products extends DBObject_6.DBObject {
        constructor() {
            super();
        }
    };
    __decorate([
        Validator_6.ValidateIsInt({ optional: true }),
        DatabaseSchema_6.PrimaryColumn(),
        __metadata("design:type", Number)
    ], Products.prototype, "id", void 0);
    __decorate([
        Validator_6.ValidateIsString({ optional: true }),
        DatabaseSchema_6.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Products.prototype, "ProductName", void 0);
    __decorate([
        Validator_6.ValidateIsInstanceOf({ type: type => Suppliers_1.Suppliers }),
        DatabaseSchema_6.ManyToOne(type => Suppliers_1.Suppliers),
        __metadata("design:type", Suppliers_1.Suppliers)
    ], Products.prototype, "Supplier", void 0);
    __decorate([
        Validator_6.ValidateIsInstanceOf({ type: c => Categories_1.Categories }),
        DatabaseSchema_6.ManyToOne(type => Categories_1.Categories, e => e.Products),
        __metadata("design:type", Categories_1.Categories)
    ], Products.prototype, "Category", void 0);
    __decorate([
        Validator_6.ValidateIsString({ optional: true }),
        DatabaseSchema_6.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Products.prototype, "QuantityPerUnit", void 0);
    __decorate([
        Validator_6.ValidateIsNumber({ optional: true }),
        DatabaseSchema_6.Column({ nullable: true, type: "decimal" }),
        __metadata("design:type", Number)
    ], Products.prototype, "UnitPrice", void 0);
    __decorate([
        Validator_6.ValidateIsNumber({ optional: true }),
        DatabaseSchema_6.Column({ nullable: true }),
        __metadata("design:type", Number)
    ], Products.prototype, "UnitsInStock", void 0);
    __decorate([
        Validator_6.ValidateIsNumber({ optional: true }),
        DatabaseSchema_6.Column({ nullable: true }),
        __metadata("design:type", Number)
    ], Products.prototype, "UnitsOnOrder", void 0);
    __decorate([
        Validator_6.ValidateIsNumber({ optional: true }),
        DatabaseSchema_6.Column({ nullable: true }),
        __metadata("design:type", Number)
    ], Products.prototype, "ReorderLevel", void 0);
    __decorate([
        Validator_6.ValidateIsBoolean(),
        DatabaseSchema_6.Column({ nullable: true }),
        __metadata("design:type", Boolean)
    ], Products.prototype, "Discontinued", void 0);
    Products = __decorate([
        DBObject_6.$DBObject(),
        Registry_6.$Class("northwind.Products"),
        __metadata("design:paramtypes", [])
    ], Products);
    exports.Products = Products;
    async function test() {
        var p = await Products.findOne();
    }
    exports.test = test;
    ;
});
define("northwind/remote/Shippers", ["require", "exports", "jassijs/remote/DBObject", "jassijs/remote/Registry", "jassijs/util/DatabaseSchema", "jassijs/remote/Validator"], function (require, exports, DBObject_7, Registry_7, DatabaseSchema_7, Validator_7) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test = exports.Shippers = void 0;
    let Shippers = class Shippers extends DBObject_7.DBObject {
        constructor() {
            super();
        }
    };
    __decorate([
        Validator_7.ValidateIsInt({ optional: true }),
        DatabaseSchema_7.PrimaryColumn(),
        __metadata("design:type", Number)
    ], Shippers.prototype, "id", void 0);
    __decorate([
        Validator_7.ValidateIsString({ optional: true }),
        DatabaseSchema_7.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Shippers.prototype, "CompanyName", void 0);
    __decorate([
        Validator_7.ValidateIsString({ optional: true }),
        DatabaseSchema_7.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Shippers.prototype, "Phone", void 0);
    Shippers = __decorate([
        DBObject_7.$DBObject(),
        Registry_7.$Class("northwind.Shippers"),
        __metadata("design:paramtypes", [])
    ], Shippers);
    exports.Shippers = Shippers;
    async function test() {
    }
    exports.test = test;
    ;
});
define("northwind/remote/Suppliers", ["require", "exports", "jassijs/remote/DBObject", "jassijs/remote/Registry", "jassijs/util/DatabaseSchema", "jassijs/remote/Validator"], function (require, exports, DBObject_8, Registry_8, DatabaseSchema_8, Validator_8) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test = exports.Suppliers = void 0;
    let Suppliers = class Suppliers extends DBObject_8.DBObject {
        constructor() {
            super();
        }
    };
    __decorate([
        Validator_8.ValidateIsInt({ optional: true }),
        DatabaseSchema_8.PrimaryColumn(),
        __metadata("design:type", Number)
    ], Suppliers.prototype, "id", void 0);
    __decorate([
        Validator_8.ValidateIsString({ optional: true }),
        DatabaseSchema_8.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Suppliers.prototype, "CompanyName", void 0);
    __decorate([
        Validator_8.ValidateIsString({ optional: true }),
        DatabaseSchema_8.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Suppliers.prototype, "ContactName", void 0);
    __decorate([
        Validator_8.ValidateIsString({ optional: true }),
        DatabaseSchema_8.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Suppliers.prototype, "ContactTitle", void 0);
    __decorate([
        Validator_8.ValidateIsString({ optional: true }),
        DatabaseSchema_8.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Suppliers.prototype, "Address", void 0);
    __decorate([
        Validator_8.ValidateIsString({ optional: true }),
        DatabaseSchema_8.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Suppliers.prototype, "City", void 0);
    __decorate([
        Validator_8.ValidateIsString({ optional: true }),
        DatabaseSchema_8.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Suppliers.prototype, "Region", void 0);
    __decorate([
        Validator_8.ValidateIsString({ optional: true }),
        DatabaseSchema_8.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Suppliers.prototype, "PostalCode", void 0);
    __decorate([
        Validator_8.ValidateIsString({ optional: true }),
        DatabaseSchema_8.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Suppliers.prototype, "Country", void 0);
    __decorate([
        Validator_8.ValidateIsString({ optional: true }),
        DatabaseSchema_8.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Suppliers.prototype, "Phone", void 0);
    __decorate([
        Validator_8.ValidateIsString({ optional: true }),
        DatabaseSchema_8.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Suppliers.prototype, "Fax", void 0);
    __decorate([
        Validator_8.ValidateIsString({ optional: true }),
        DatabaseSchema_8.Column({ nullable: true }),
        __metadata("design:type", String)
    ], Suppliers.prototype, "HomePage", void 0);
    Suppliers = __decorate([
        DBObject_8.$DBObject(),
        Registry_8.$Class("northwind.Suppliers"),
        __metadata("design:paramtypes", [])
    ], Suppliers);
    exports.Suppliers = Suppliers;
    async function test() {
    }
    exports.test = test;
    ;
    function ValidateIsIntn(arg0) {
        throw new Error("Function not implemented.");
    }
});
define("northwind/SampleServerReport", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SampleServerReport = void 0;
    class SampleServerReport {
        constructor() {
            this.content = undefined;
        }
        layout(me) {
            this.content = {
                stack: [
                    {
                        columns: [
                            {
                                stack: [
                                    {
                                        text: "{{name}}{{name2}}"
                                    },
                                ]
                            }
                        ]
                    }
                ]
            };
        }
        async run(data, param) {
            //do database query with param
            //getBase64
        }
    }
    exports.SampleServerReport = SampleServerReport;
});
define("northwind/modul", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = {
        "require": {}
    };
});
//# sourceMappingURL=northwind-server.js.map