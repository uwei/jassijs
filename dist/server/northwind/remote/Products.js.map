{"version":3,"file":"Products.js","sourceRoot":"","sources":["../../../../server/northwind/remote/Products.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,4DAAyD;AACzD,0DAAuD;AACvD,sDAA8D;AAC9D,gDAAuD;AACvD,gEAA+I;AAI/I,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,mBAAQ;IAGlC;QACI,KAAK,EAAE,CAAC;IACZ,CAAC;CAmBJ,CAAA;AAtBG;IADC,8BAAa,EAAE;;oCACL;AAKX;IADC,uBAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;6CACP;AAEpB;IADC,0BAAS,CAAC,IAAI,CAAC,EAAE,CAAC,qBAAS,CAAC;kDACnB,qBAAS,oBAAT,qBAAS;0CAAC;AAEpB;IADC,0BAAS,CAAC,IAAI,CAAC,EAAE,CAAC,uBAAU,EAAE,CAAC,CAAA,EAAE,CAAA,CAAC,CAAC,QAAQ,CAAC;kDACnC,uBAAU,oBAAV,uBAAU;0CAAC;AAErB;IADC,uBAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;iDACH;AAExB;IADC,uBAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;;2CAC1B;AAElB;IADC,uBAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;8CACN;AAErB;IADC,uBAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;8CACN;AAErB;IADC,uBAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;8CACN;AAErB;IADC,uBAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;8CACL;AAvBb,QAAQ;IAFpB,oBAAS,EAAE;IACX,cAAM,CAAC,oBAAoB,CAAC;;GAChB,QAAQ,CAwBpB;AAxBY,4BAAQ;AAyBd,KAAK,UAAU,IAAI;IACtB,IAAI,CAAC,GAAuB,MAAM,QAAQ,CAAC,OAAO,EAAE,CAAC;AAEzD,CAAC;AAHD,oBAGC;AACD,CAAC","sourcesContent":["import { Categories } from \"northwind/remote/Categories\";\nimport { Suppliers } from \"northwind/remote/Suppliers\";\nimport { DBObject, $DBObject } from \"jassijs/remote/DBObject\";\nimport jassijs, { $Class } from \"jassijs/remote/Jassi\";\nimport { Entity, PrimaryColumn, Column, OneToOne, ManyToMany, ManyToOne, OneToMany, JoinColumn, JoinTable } from \"jassijs/util/DatabaseSchema\";\nimport { $DBObjectQuery } from \"jassijs/remote/DBObjectQuery\";\n@$DBObject()\n@$Class(\"northwind.Products\")\nexport class Products extends DBObject {\n    @PrimaryColumn()\n    id: number;\n    constructor() {\n        super();\n    }\n    @Column({ nullable: true })\n    ProductName: string;\n    @ManyToOne(type => Suppliers)\n    Supplier: Suppliers;\n    @ManyToOne(type => Categories, e=>e.Products)\n    Category: Categories;\n    @Column({ nullable: true })\n    QuantityPerUnit: string;\n    @Column({ nullable: true, type: \"decimal\" })\n    UnitPrice: number;\n    @Column({ nullable: true })\n    UnitsInStock: number;\n    @Column({ nullable: true })\n    UnitsOnOrder: number;\n    @Column({ nullable: true })\n    ReorderLevel: number;\n    @Column({ nullable: true })\n    Discontinued: boolean;\n}\nexport async function test() {\n    var p: Products = <Products>await Products.findOne();\n   \n}\n;\n"]}