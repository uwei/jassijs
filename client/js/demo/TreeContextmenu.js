define(["require", "exports", "jassijs/ui/Tree", "jassijs/ui/ContextMenu", "jassijs/ui/MenuItem", "jassijs/ui/Panel", "jassijs/ui/Button"], function (require, exports, Tree_1, ContextMenu_1, MenuItem_1, Panel_1, Button_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.test = void 0;
    class Me {
    }
    async function test() {
        var s = { name: "Sansa", id: 1 };
        var p = { name: "Peter", id: 2 };
        var u = { name: "Uwe", id: 3, childs: [p, s] };
        var t = { name: "Tom", id: 5 };
        var c = { name: "Christoph", id: 4, childs: [u, t] };
        var me = new Me();
        me.tree = new Tree_1.Tree({
            checkbox: true,
            selectMode: 2,
        });
        me.panel = new Panel_1.Panel();
        me.button = new Button_1.Button();
        me.panel["me"] = me;
        me.panel.add(me.tree);
        me.panel.add(me.button);
        s.childs = [c];
        me.tree.propDisplay = "name";
        me.tree.propChilds = "childs";
        me.tree.propIcon = function (data) {
            if (data.name === "Uwe")
                return "mdi mdi-car";
        };
        me.tree.width = "100%";
        me.tree.height = 175;
        var contextmenu = new ContextMenu_1.ContextMenu();
        me.tree.contextMenu = contextmenu;
        var menu = new MenuItem_1.MenuItem();
        menu.text = "static menu";
        menu.onclick(function (ob) {
            alert(contextmenu.value[0].name + "clicked");
        });
        contextmenu.menu.add(menu);
        contextmenu.getActions = async function (obs) {
            return [{ name: "custom Action", call: function (data) {
                        alert(data[0].name);
                    } }];
        };
        me.tree.items = [c, u];
        me.tree.expandAll();
        me.tree.onclick(function (event, data) {
            //alert(event.selection[0].name);
        });
        me.button.text = "Test";
        me.button.onclick(() => {
            var h = me.tree.selection;
        });
        return me.panel;
    }
    exports.test = test;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHJlZUNvbnRleHRtZW51LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGVtby9UcmVlQ29udGV4dG1lbnUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztJQU1BLE1BQU0sRUFBRTtLQUlQO0lBQ00sS0FBSyxVQUFVLElBQUk7UUFDdEIsSUFBSSxDQUFDLEdBQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUNyQyxJQUFJLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQy9DLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUM7UUFDL0IsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDeEQsSUFBSSxFQUFFLEdBQUksSUFBSSxFQUFFLEVBQUUsQ0FBQztRQUNuQixFQUFFLENBQUMsSUFBSSxHQUFDLElBQUksV0FBSSxDQUFDO1lBQ1gsUUFBUSxFQUFFLElBQUk7WUFDZCxVQUFVLEVBQUUsQ0FBQztTQUVsQixDQUFDLENBQUM7UUFDSCxFQUFFLENBQUMsS0FBSyxHQUFDLElBQUksYUFBSyxFQUFFLENBQUM7UUFDckIsRUFBRSxDQUFDLE1BQU0sR0FBQyxJQUFJLGVBQU0sRUFBRSxDQUFDO1FBQ3ZCLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUMsRUFBRSxDQUFDO1FBQ2xCLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN0QixFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDckIsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2YsRUFBRSxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDO1FBQzdCLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQztRQUM5QixFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxVQUFVLElBQUk7WUFDN0IsSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLEtBQUs7Z0JBQ25CLE9BQU8sYUFBYSxDQUFDO1FBQzdCLENBQUMsQ0FBQztRQUVGLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQztRQUN2QixFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBQyxHQUFHLENBQUM7UUFFbkIsSUFBSSxXQUFXLEdBQUMsSUFBSSx5QkFBVyxFQUFFLENBQUM7UUFDbEMsRUFBRSxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUMsV0FBVyxDQUFDO1FBQ2hDLElBQUksSUFBSSxHQUFDLElBQUksbUJBQVEsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxJQUFJLEdBQUMsYUFBYSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBUyxFQUFFO1lBQ3ZCLEtBQUssQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBQyxTQUFTLENBQUMsQ0FBQztRQUM1QyxDQUFDLENBQUMsQ0FBQztRQUNILFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNCLFdBQVcsQ0FBQyxVQUFVLEdBQUMsS0FBSyxXQUFVLEdBQUc7WUFDeEMsT0FBTyxDQUFDLEVBQUMsSUFBSSxFQUFDLGVBQWUsRUFBQyxJQUFJLEVBQUMsVUFBUyxJQUFJO3dCQUMvQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFBO29CQUNwQixDQUFDLEVBQUMsQ0FBQyxDQUFBO1FBQ0osQ0FBQyxDQUFBO1FBQ0QsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDdEIsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNwQixFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFTLEtBQXdCLEVBQUUsSUFBeUI7WUFFM0UsaUNBQWlDO1FBQ2xDLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUMsTUFBTSxDQUFDO1FBQ3pCLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUUsRUFBRTtZQUNwQixJQUFJLENBQUMsR0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUMxQixDQUFDLENBQUMsQ0FBQTtRQUNDLE9BQU8sRUFBRSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBckRELG9CQXFEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VHJlZX0gZnJvbSBcImphc3NpanMvdWkvVHJlZVwiO1xuaW1wb3J0IHtDb250ZXh0TWVudX0gZnJvbSBcImphc3NpanMvdWkvQ29udGV4dE1lbnVcIjtcbmltcG9ydCB7TWVudUl0ZW19IGZyb20gXCJqYXNzaWpzL3VpL01lbnVJdGVtXCI7XG5pbXBvcnQge1BhbmVsfSBmcm9tIFwiamFzc2lqcy91aS9QYW5lbFwiO1xuaW1wb3J0ICB7QnV0dG9ufSBmcm9tIFwiamFzc2lqcy91aS9CdXR0b25cIjtcblxuY2xhc3MgTWUgeyBcbiAgICB0cmVlPzpUcmVlO1xuICAgIHBhbmVsPzogUGFuZWw7XG5cdGJ1dHRvbj86QnV0dG9uXG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdGVzdCgpIHtcbiAgICB2YXIgczphbnkgPSB7IG5hbWU6IFwiU2Fuc2FcIiwgaWQ6IDEgfTtcbiAgICB2YXIgcCA9IHsgbmFtZTogXCJQZXRlclwiLCBpZDogMiB9O1xuICAgIHZhciB1ID0geyBuYW1lOiBcIlV3ZVwiLCBpZDogMywgY2hpbGRzOiBbcCwgc10gfTtcbiAgICB2YXIgdCA9IHsgbmFtZTogXCJUb21cIiwgaWQ6IDUgfTtcbiAgICB2YXIgYyA9IHsgbmFtZTogXCJDaHJpc3RvcGhcIiwgaWQ6IDQsIGNoaWxkczogW3UsIHRdIH07XG5cdHZhciBtZTpNZT1uZXcgTWUoKTtcblx0bWUudHJlZT1uZXcgVHJlZSh7XG5cdCAgICAgIGNoZWNrYm94OiB0cnVlLFxuXHQgICAgICBzZWxlY3RNb2RlOiAyLFxuXHQgICAgICBcblx0fSk7XG5cdG1lLnBhbmVsPW5ldyBQYW5lbCgpO1xuXHRtZS5idXR0b249bmV3IEJ1dHRvbigpO1xuXHRtZS5wYW5lbFtcIm1lXCJdPW1lO1xuXHRtZS5wYW5lbC5hZGQobWUudHJlZSk7XG5cdG1lLnBhbmVsLmFkZChtZS5idXR0b24pO1xuICAgIHMuY2hpbGRzID0gW2NdO1xuICAgIG1lLnRyZWUucHJvcERpc3BsYXkgPSBcIm5hbWVcIjtcbiAgICBtZS50cmVlLnByb3BDaGlsZHMgPSBcImNoaWxkc1wiO1xuICAgIG1lLnRyZWUucHJvcEljb24gPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICBpZiAoZGF0YS5uYW1lID09PSBcIlV3ZVwiKVxuICAgICAgICAgICAgcmV0dXJuIFwibWRpIG1kaS1jYXJcIjtcbiAgICB9O1xuXG4gICAgbWUudHJlZS53aWR0aCA9IFwiMTAwJVwiO1xuICAgIG1lLnRyZWUuaGVpZ2h0PTE3NTtcblxuICAgIHZhciBjb250ZXh0bWVudT1uZXcgQ29udGV4dE1lbnUoKTtcbiAgICBtZS50cmVlLmNvbnRleHRNZW51PWNvbnRleHRtZW51O1xuICAgIHZhciBtZW51PW5ldyBNZW51SXRlbSgpO1xuICAgIG1lbnUudGV4dD1cInN0YXRpYyBtZW51XCI7XG4gICAgbWVudS5vbmNsaWNrKGZ1bmN0aW9uKG9iKXtcbiAgICBcdGFsZXJ0KGNvbnRleHRtZW51LnZhbHVlWzBdLm5hbWUrXCJjbGlja2VkXCIpO1xuICAgIH0pO1xuICAgIGNvbnRleHRtZW51Lm1lbnUuYWRkKG1lbnUpO1xuICAgIGNvbnRleHRtZW51LmdldEFjdGlvbnM9YXN5bmMgZnVuY3Rpb24ob2JzKXtcbiAgICBcdHJldHVybiBbe25hbWU6XCJjdXN0b20gQWN0aW9uXCIsY2FsbDpmdW5jdGlvbihkYXRhKXtcbiAgICBcdFx0YWxlcnQoZGF0YVswXS5uYW1lKVxuICAgIFx0fX1dXG4gICAgfVxuICAgIG1lLnRyZWUuaXRlbXM9IFtjLCB1XTtcbiAgICBtZS50cmVlLmV4cGFuZEFsbCgpO1xuICAgIG1lLnRyZWUub25jbGljayhmdW5jdGlvbihldmVudD86SlF1ZXJ5RXZlbnRPYmplY3QsIGRhdGE/OkZhbmN5dHJlZS5FdmVudERhdGEpe1xuICAgIFx0XG4gICAgXHQvL2FsZXJ0KGV2ZW50LnNlbGVjdGlvblswXS5uYW1lKTtcbiAgICB9KTtcbiAgIFxuICAgIG1lLmJ1dHRvbi50ZXh0PVwiVGVzdFwiO1xuXHRtZS5idXR0b24ub25jbGljaygoKT0+e1xuXHRcdCB2YXIgaD1tZS50cmVlLnNlbGVjdGlvbjtcblx0fSlcbiAgICByZXR1cm4gbWUucGFuZWw7XG59XG4iXX0=