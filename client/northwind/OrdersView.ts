import { BoxPanel } from "jassijs/ui/BoxPanel";
import { Checkbox } from "jassijs/ui/Checkbox";
import { Repeater } from "jassijs/ui/Repeater";
import { Calendar } from "jassijs/ui/Calendar";
import { ObjectChooser } from "jassijs/ui/ObjectChooser";
import { HTMLPanel } from "jassijs/ui/HTMLPanel";
import { NumberConverter } from "jassijs/ui/converters/NumberConverter";
import { Textbox } from "jassijs/ui/Textbox";
import { $Class } from "jassijs/remote/Jassi";
import { Panel } from "jassijs/ui/Panel";
import { $Property } from "jassijs/ui/Property";
import { Orders } from "northwind/remote/Orders";
import { Databinder } from "jassijs/ui/Databinder";
import { DBObjectView, $DBObjectView, DBObjectViewMe } from "jassijs/ui/DBObjectView";
import { DBObjectDialog } from "jassijs/ui/DBObjectDialog";
import { Customer } from "northwind/remote/Customer";
type Me = {
    id?: Textbox;
    customername?: HTMLPanel;
    employeename?: HTMLPanel;
    chooseEmployee?: ObjectChooser;
    choosecustomer?: ObjectChooser;
    orderDate?: Calendar;
    requiredDate?: Calendar;
    shippedDate?: Calendar;
    shipVia?: HTMLPanel;
    shipviaChooser?: ObjectChooser;
    freight?: Textbox;
    shipName?: Textbox;
    shipAddress?: Textbox;
    shipPostalCode?: Textbox;
    shipCity?: Textbox;
    shipCountry?: Textbox;
    shipRegion?: Textbox;
    detailsPrice?: Textbox;
    detailsQuantity?: Textbox;
    repeater1?: Repeater;
    detailsProduct?: HTMLPanel;
    objectchooser1?: ObjectChooser;
    panel1?: Panel;
    panel2?: Panel;
    panel3?: Panel;
    boxpanel1?: BoxPanel;
    boxpanel2?: BoxPanel;
    htmlpanel1?: HTMLPanel;
    htmlpanel2?: HTMLPanel;
} & DBObjectViewMe;
@$DBObjectView({ classname: "northwind.Orders", actionname: "Northwind/Orders", icon: "mdi mdi-script-text" })
@$Class("northwind.OrdersView")
export class OrdersView extends DBObjectView {
    me: Me;
    @$Property({ isUrlTag: true, id: true, editor: "jassijs.ui.PropertyEditors.DBObjectEditor" })
    value: Orders;
    constructor() {
        super();
        //this.me = {}; this is called in objectdialog
        this.layout(this.me);
    }
    get title() {
        return this.value === undefined ? "OrdersView" : "OrdersView " + this.value.id;
    }
    layout(me: Me) {
        me.id = new Textbox();
        me.customername = new HTMLPanel();
        me.employeename = new HTMLPanel();
        me.chooseEmployee = new ObjectChooser();
        me.choosecustomer = new ObjectChooser();
        me.orderDate = new Calendar();
        me.requiredDate = new Calendar();
        me.shippedDate = new Calendar();
        me.shipVia = new HTMLPanel();
        me.shipviaChooser = new ObjectChooser();
        me.freight = new Textbox();
        me.shipName = new Textbox();
        me.shipAddress = new Textbox();
        me.shipPostalCode = new Textbox();
        me.shipCity = new Textbox();
        me.shipCountry = new Textbox();
        me.shipRegion = new Textbox();
        me.repeater1 = new Repeater();
        me.panel1 = new Panel();
        me.panel2 = new Panel();
        me.panel3 = new Panel();
        me.boxpanel1 = new BoxPanel();
        me.boxpanel2 = new BoxPanel();
        me.htmlpanel1 = new HTMLPanel();
        me.htmlpanel2 = new HTMLPanel();
        me.main.add(me.boxpanel1);
        me.main.add(me.boxpanel2);
        me.main.add(me.repeater1);
        me.id.x = 5;
        me.id.y = 5;
        me.id.converter = new NumberConverter();
        me.id.bind(me.databinder, "id");
        me.id.label = "Order ID";
        me.id.width = 70;
        me.customername.x = 10;
        me.customername.y = 5;
        me.customername.width = 265;
        me.customername.template = "{{id}} {{CompanyName}}";
        me.customername.bind(me.databinder, "Customer");
        me.customername.value = "VINET Vins et alcools Chevalier";
        me.customername.label = "Customer";
        me.customername.height = 15;
        me.employeename.x = 10;
        me.employeename.y = 90;
        me.employeename.bind(me.databinder, "Employee");
        me.employeename.label = "Employee";
        me.employeename.width = 265;
        me.employeename.value = "5 Steven Buchanan";
        me.employeename.template = "{{id}} {{FirstName}} {{LastName}}";
        me.chooseEmployee.x = 275;
        me.chooseEmployee.y = 105;
        me.chooseEmployee.bind(me.databinder, "Employee");
        me.chooseEmployee.items = "northwind.Employees";
        me.chooseEmployee.height = 20;
        me.choosecustomer.x = 275;
        me.choosecustomer.y = 15;
        me.choosecustomer.items = "northwind.Customer";
        me.choosecustomer.bind(me.databinder, "Customer");
        me.choosecustomer.onchange(function (event) {
            let cust = <Customer>me.choosecustomer.value;
            me.shipName.value = cust.CompanyName;
            me.shipAddress.value = cust.Address;
            me.shipPostalCode.value = cust.PostalCode;
            me.shipCity.value = cust.City;
            me.shipCountry.value = cust.Country;
            me.shipRegion.value = cust.Region;
        });
        me.orderDate.x = 10;
        me.orderDate.y = 130;
        me.orderDate.bind(me.databinder, "OrderDate");
        me.orderDate.label = "Order Date";
        me.orderDate.width = 70;
        me.requiredDate.x = 90;
        me.requiredDate.y = 130;
        me.requiredDate.bind(me.databinder, "RequiredDate");
        me.requiredDate.label = "Required Date";
        me.requiredDate.width = 75;
        me.shippedDate.x = 175;
        me.shippedDate.y = 130;
        me.shippedDate.bind(me.databinder, "ShippedDate");
        me.shippedDate.width = 75;
        me.shippedDate.label = "Shipped Date";
        me.shipVia.x = 10;
        me.shipVia.y = 45;
        me.shipVia.bind(me.databinder, "ShipVia");
        me.shipVia.template = "{{id}} {{CompanyName}}";
        me.shipVia.label = "Ship via";
        me.shipVia.value = "3 Federal Shipping";
        me.shipVia.width = 260;
        me.shipviaChooser.x = 275;
        me.shipviaChooser.y = 60;
        me.shipviaChooser.bind(me.databinder, "ShipVia");
        me.shipviaChooser.items = "northwind.Shippers";
        me.shipviaChooser.width = 30;
        me.freight.x = 5;
        me.freight.y = 50;
        me.freight.bind(me.databinder, "Freight");
        me.freight.width = 70;
        me.freight.label = "Freight";
        me.freight.converter = new NumberConverter();
        me.freight.format = "#.##0,00";
        me.freight.css({
            text_align: "right"
        });
        me.shipName.x = 5;
        me.shipName.y = 5;
        me.shipName.bind(me.databinder, "ShipName");
        me.shipName.width = 220;
        me.shipName.label = "Ship Name";
        me.shipAddress.x = 5;
        me.shipAddress.y = 50;
        me.shipAddress.bind(me.databinder, "ShipAddress");
        me.shipAddress.width = 220;
        me.shipAddress.label = "Ship Address";
        me.shipPostalCode.x = 5;
        me.shipPostalCode.y = 95;
        me.shipPostalCode.bind(me.databinder, "ShipPostalCode");
        me.shipPostalCode.width = 55;
        me.shipPostalCode.label = "Postal Code";
        me.shipCity.x = 75;
        me.shipCity.y = 95;
        me.shipCity.bind(me.databinder, "ShipCity");
        me.shipCity.label = "Ship City";
        me.shipCity.width = 150;
        me.shipCountry.x = 135;
        me.shipCountry.y = 140;
        me.shipCountry.bind(me.databinder, "ShipCountry");
        me.shipCountry.label = "Ship Country";
        me.shipCountry.width = 90;
        me.shipRegion.x = 5;
        me.shipRegion.y = 140;
        me.shipRegion.bind(me.databinder, "ShipRegion");
        me.shipRegion.label = "Ship Region";
        me.shipRegion.width = 120;
        me.repeater1.bind(me.databinder, "Details");
        me.repeater1.width = 420;
        me.repeater1.createRepeatingComponent(function (me: Me) {
            me.detailsQuantity = new Textbox();
            me.detailsProduct = new HTMLPanel();
            me.objectchooser1 = new ObjectChooser();
            this.design.add(me.detailsQuantity);
            this.design.add(me.detailsProduct);
            this.design.add(me.objectchooser1);
            me.detailsQuantity.bind(me.repeater1.design.databinder, "Quantity");
            me.detailsQuantity.width = 60;
            me.detailsProduct.width = "100";
            me.detailsProduct.bind(me.repeater1.design.databinder, "Product");
            me.detailsProduct.template = "{{ProductName}}";
            me.objectchooser1.bind(me.repeater1.design.databinder, "Product");
            me.objectchooser1.items = "northwind.Products";
            me.detailsProduct.css({
                overflow: "hidden"
            });
            me.detailsProduct.height = "18";
        });
        me.panel1.isAbsolute = true;
        me.panel1.height = 185;
        me.panel1.width = 250;
        me.panel1.add(me.shipName);
        me.panel1.add(me.shipAddress);
        me.panel1.add(me.shipPostalCode);
        me.panel1.add(me.shipCity);
        me.panel1.add(me.shipCountry);
        me.panel1.add(me.shipRegion);
        me.panel2.width = 105;
        me.panel2.height = 185;
        me.panel2.isAbsolute = true;
        me.panel2.add(me.id);
        me.panel2.add(me.freight);
        me.panel3.width = 320;
        me.panel3.height = 185;
        me.panel3.isAbsolute = true;
        me.panel3.add(me.customername);
        me.panel3.add(me.choosecustomer);
        me.panel3.add(me.shipVia);
        me.panel3.add(me.shipviaChooser);
        me.panel3.add(me.employeename);
        me.panel3.add(me.chooseEmployee);
        me.panel3.add(me.orderDate);
        me.panel3.add(me.requiredDate);
        me.panel3.add(me.shippedDate);
        me.boxpanel1.horizontal = true;
        me.boxpanel1.add(me.panel1);
        me.boxpanel1.add(me.panel2);
        me.boxpanel1.add(me.panel3);
        me.boxpanel1.height = 230;
        me.boxpanel2.add(me.htmlpanel1);
        me.boxpanel2.add(me.htmlpanel2);
        me.boxpanel2.horizontal = true;
        me.htmlpanel1.value = "Quantity<br>";
        me.htmlpanel1.width = 65;
        me.htmlpanel2.value = "Text<br>";
        me.htmlpanel2.width = 100;
    }
}
export async function test() {
    var ret = new OrdersView;
    ret["value"] = <Orders>await Orders.findOne({ id: 10250, relations: ["*"] });
    return ret;
}
